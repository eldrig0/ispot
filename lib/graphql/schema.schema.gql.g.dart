// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'schema.schema.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

const GAccountErrorCode _$gAccountErrorCodeACTIVATE_OWN_ACCOUNT =
    const GAccountErrorCode._('ACTIVATE_OWN_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeACTIVATE_SUPERUSER_ACCOUNT =
    const GAccountErrorCode._('ACTIVATE_SUPERUSER_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDUPLICATED_INPUT_ITEM =
    const GAccountErrorCode._('DUPLICATED_INPUT_ITEM');
const GAccountErrorCode _$gAccountErrorCodeDEACTIVATE_OWN_ACCOUNT =
    const GAccountErrorCode._('DEACTIVATE_OWN_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDEACTIVATE_SUPERUSER_ACCOUNT =
    const GAccountErrorCode._('DEACTIVATE_SUPERUSER_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDELETE_NON_STAFF_USER =
    const GAccountErrorCode._('DELETE_NON_STAFF_USER');
const GAccountErrorCode _$gAccountErrorCodeDELETE_OWN_ACCOUNT =
    const GAccountErrorCode._('DELETE_OWN_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDELETE_STAFF_ACCOUNT =
    const GAccountErrorCode._('DELETE_STAFF_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDELETE_SUPERUSER_ACCOUNT =
    const GAccountErrorCode._('DELETE_SUPERUSER_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeGRAPHQL_ERROR =
    const GAccountErrorCode._('GRAPHQL_ERROR');
const GAccountErrorCode _$gAccountErrorCodeINVALID =
    const GAccountErrorCode._('INVALID');
const GAccountErrorCode _$gAccountErrorCodeINVALID_PASSWORD =
    const GAccountErrorCode._('INVALID_PASSWORD');
const GAccountErrorCode _$gAccountErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION =
    const GAccountErrorCode._('LEFT_NOT_MANAGEABLE_PERMISSION');
const GAccountErrorCode _$gAccountErrorCodeINVALID_CREDENTIALS =
    const GAccountErrorCode._('INVALID_CREDENTIALS');
const GAccountErrorCode _$gAccountErrorCodeNOT_FOUND =
    const GAccountErrorCode._('NOT_FOUND');
const GAccountErrorCode _$gAccountErrorCodeOUT_OF_SCOPE_SERVICE_ACCOUNT =
    const GAccountErrorCode._('OUT_OF_SCOPE_SERVICE_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeOUT_OF_SCOPE_USER =
    const GAccountErrorCode._('OUT_OF_SCOPE_USER');
const GAccountErrorCode _$gAccountErrorCodeOUT_OF_SCOPE_GROUP =
    const GAccountErrorCode._('OUT_OF_SCOPE_GROUP');
const GAccountErrorCode _$gAccountErrorCodeOUT_OF_SCOPE_PERMISSION =
    const GAccountErrorCode._('OUT_OF_SCOPE_PERMISSION');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_ENTIRELY_NUMERIC =
    const GAccountErrorCode._('PASSWORD_ENTIRELY_NUMERIC');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_TOO_COMMON =
    const GAccountErrorCode._('PASSWORD_TOO_COMMON');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_TOO_SHORT =
    const GAccountErrorCode._('PASSWORD_TOO_SHORT');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_TOO_SIMILAR =
    const GAccountErrorCode._('PASSWORD_TOO_SIMILAR');
const GAccountErrorCode _$gAccountErrorCodeREQUIRED =
    const GAccountErrorCode._('REQUIRED');
const GAccountErrorCode _$gAccountErrorCodeUNIQUE =
    const GAccountErrorCode._('UNIQUE');

GAccountErrorCode _$gAccountErrorCodeValueOf(String name) {
  switch (name) {
    case 'ACTIVATE_OWN_ACCOUNT':
      return _$gAccountErrorCodeACTIVATE_OWN_ACCOUNT;
    case 'ACTIVATE_SUPERUSER_ACCOUNT':
      return _$gAccountErrorCodeACTIVATE_SUPERUSER_ACCOUNT;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gAccountErrorCodeDUPLICATED_INPUT_ITEM;
    case 'DEACTIVATE_OWN_ACCOUNT':
      return _$gAccountErrorCodeDEACTIVATE_OWN_ACCOUNT;
    case 'DEACTIVATE_SUPERUSER_ACCOUNT':
      return _$gAccountErrorCodeDEACTIVATE_SUPERUSER_ACCOUNT;
    case 'DELETE_NON_STAFF_USER':
      return _$gAccountErrorCodeDELETE_NON_STAFF_USER;
    case 'DELETE_OWN_ACCOUNT':
      return _$gAccountErrorCodeDELETE_OWN_ACCOUNT;
    case 'DELETE_STAFF_ACCOUNT':
      return _$gAccountErrorCodeDELETE_STAFF_ACCOUNT;
    case 'DELETE_SUPERUSER_ACCOUNT':
      return _$gAccountErrorCodeDELETE_SUPERUSER_ACCOUNT;
    case 'GRAPHQL_ERROR':
      return _$gAccountErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gAccountErrorCodeINVALID;
    case 'INVALID_PASSWORD':
      return _$gAccountErrorCodeINVALID_PASSWORD;
    case 'LEFT_NOT_MANAGEABLE_PERMISSION':
      return _$gAccountErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION;
    case 'INVALID_CREDENTIALS':
      return _$gAccountErrorCodeINVALID_CREDENTIALS;
    case 'NOT_FOUND':
      return _$gAccountErrorCodeNOT_FOUND;
    case 'OUT_OF_SCOPE_SERVICE_ACCOUNT':
      return _$gAccountErrorCodeOUT_OF_SCOPE_SERVICE_ACCOUNT;
    case 'OUT_OF_SCOPE_USER':
      return _$gAccountErrorCodeOUT_OF_SCOPE_USER;
    case 'OUT_OF_SCOPE_GROUP':
      return _$gAccountErrorCodeOUT_OF_SCOPE_GROUP;
    case 'OUT_OF_SCOPE_PERMISSION':
      return _$gAccountErrorCodeOUT_OF_SCOPE_PERMISSION;
    case 'PASSWORD_ENTIRELY_NUMERIC':
      return _$gAccountErrorCodePASSWORD_ENTIRELY_NUMERIC;
    case 'PASSWORD_TOO_COMMON':
      return _$gAccountErrorCodePASSWORD_TOO_COMMON;
    case 'PASSWORD_TOO_SHORT':
      return _$gAccountErrorCodePASSWORD_TOO_SHORT;
    case 'PASSWORD_TOO_SIMILAR':
      return _$gAccountErrorCodePASSWORD_TOO_SIMILAR;
    case 'REQUIRED':
      return _$gAccountErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gAccountErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAccountErrorCode> _$gAccountErrorCodeValues =
    new BuiltSet<GAccountErrorCode>(const <GAccountErrorCode>[
  _$gAccountErrorCodeACTIVATE_OWN_ACCOUNT,
  _$gAccountErrorCodeACTIVATE_SUPERUSER_ACCOUNT,
  _$gAccountErrorCodeDUPLICATED_INPUT_ITEM,
  _$gAccountErrorCodeDEACTIVATE_OWN_ACCOUNT,
  _$gAccountErrorCodeDEACTIVATE_SUPERUSER_ACCOUNT,
  _$gAccountErrorCodeDELETE_NON_STAFF_USER,
  _$gAccountErrorCodeDELETE_OWN_ACCOUNT,
  _$gAccountErrorCodeDELETE_STAFF_ACCOUNT,
  _$gAccountErrorCodeDELETE_SUPERUSER_ACCOUNT,
  _$gAccountErrorCodeGRAPHQL_ERROR,
  _$gAccountErrorCodeINVALID,
  _$gAccountErrorCodeINVALID_PASSWORD,
  _$gAccountErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION,
  _$gAccountErrorCodeINVALID_CREDENTIALS,
  _$gAccountErrorCodeNOT_FOUND,
  _$gAccountErrorCodeOUT_OF_SCOPE_SERVICE_ACCOUNT,
  _$gAccountErrorCodeOUT_OF_SCOPE_USER,
  _$gAccountErrorCodeOUT_OF_SCOPE_GROUP,
  _$gAccountErrorCodeOUT_OF_SCOPE_PERMISSION,
  _$gAccountErrorCodePASSWORD_ENTIRELY_NUMERIC,
  _$gAccountErrorCodePASSWORD_TOO_COMMON,
  _$gAccountErrorCodePASSWORD_TOO_SHORT,
  _$gAccountErrorCodePASSWORD_TOO_SIMILAR,
  _$gAccountErrorCodeREQUIRED,
  _$gAccountErrorCodeUNIQUE,
]);

const GAddressTypeEnum _$gAddressTypeEnumBILLING =
    const GAddressTypeEnum._('BILLING');
const GAddressTypeEnum _$gAddressTypeEnumSHIPPING =
    const GAddressTypeEnum._('SHIPPING');

GAddressTypeEnum _$gAddressTypeEnumValueOf(String name) {
  switch (name) {
    case 'BILLING':
      return _$gAddressTypeEnumBILLING;
    case 'SHIPPING':
      return _$gAddressTypeEnumSHIPPING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAddressTypeEnum> _$gAddressTypeEnumValues =
    new BuiltSet<GAddressTypeEnum>(const <GAddressTypeEnum>[
  _$gAddressTypeEnumBILLING,
  _$gAddressTypeEnumSHIPPING,
]);

const GAppErrorCode _$gAppErrorCodeGRAPHQL_ERROR =
    const GAppErrorCode._('GRAPHQL_ERROR');
const GAppErrorCode _$gAppErrorCodeINVALID = const GAppErrorCode._('INVALID');
const GAppErrorCode _$gAppErrorCodeNOT_FOUND =
    const GAppErrorCode._('NOT_FOUND');
const GAppErrorCode _$gAppErrorCodeREQUIRED = const GAppErrorCode._('REQUIRED');
const GAppErrorCode _$gAppErrorCodeUNIQUE = const GAppErrorCode._('UNIQUE');
const GAppErrorCode _$gAppErrorCodeOUT_OF_SCOPE_APP =
    const GAppErrorCode._('OUT_OF_SCOPE_APP');
const GAppErrorCode _$gAppErrorCodeOUT_OF_SCOPE_PERMISSION =
    const GAppErrorCode._('OUT_OF_SCOPE_PERMISSION');

GAppErrorCode _$gAppErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gAppErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gAppErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gAppErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gAppErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gAppErrorCodeUNIQUE;
    case 'OUT_OF_SCOPE_APP':
      return _$gAppErrorCodeOUT_OF_SCOPE_APP;
    case 'OUT_OF_SCOPE_PERMISSION':
      return _$gAppErrorCodeOUT_OF_SCOPE_PERMISSION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAppErrorCode> _$gAppErrorCodeValues =
    new BuiltSet<GAppErrorCode>(const <GAppErrorCode>[
  _$gAppErrorCodeGRAPHQL_ERROR,
  _$gAppErrorCodeINVALID,
  _$gAppErrorCodeNOT_FOUND,
  _$gAppErrorCodeREQUIRED,
  _$gAppErrorCodeUNIQUE,
  _$gAppErrorCodeOUT_OF_SCOPE_APP,
  _$gAppErrorCodeOUT_OF_SCOPE_PERMISSION,
]);

const GAppSortField _$gAppSortFieldNAME = const GAppSortField._('NAME');
const GAppSortField _$gAppSortFieldCREATION_DATE =
    const GAppSortField._('CREATION_DATE');

GAppSortField _$gAppSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gAppSortFieldNAME;
    case 'CREATION_DATE':
      return _$gAppSortFieldCREATION_DATE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAppSortField> _$gAppSortFieldValues =
    new BuiltSet<GAppSortField>(const <GAppSortField>[
  _$gAppSortFieldNAME,
  _$gAppSortFieldCREATION_DATE,
]);

const GAttributeInputTypeEnum _$gAttributeInputTypeEnumDROPDOWN =
    const GAttributeInputTypeEnum._('DROPDOWN');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumMULTISELECT =
    const GAttributeInputTypeEnum._('MULTISELECT');

GAttributeInputTypeEnum _$gAttributeInputTypeEnumValueOf(String name) {
  switch (name) {
    case 'DROPDOWN':
      return _$gAttributeInputTypeEnumDROPDOWN;
    case 'MULTISELECT':
      return _$gAttributeInputTypeEnumMULTISELECT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeInputTypeEnum> _$gAttributeInputTypeEnumValues =
    new BuiltSet<GAttributeInputTypeEnum>(const <GAttributeInputTypeEnum>[
  _$gAttributeInputTypeEnumDROPDOWN,
  _$gAttributeInputTypeEnumMULTISELECT,
]);

const GAttributeSortField _$gAttributeSortFieldNAME =
    const GAttributeSortField._('NAME');
const GAttributeSortField _$gAttributeSortFieldSLUG =
    const GAttributeSortField._('SLUG');
const GAttributeSortField _$gAttributeSortFieldVALUE_REQUIRED =
    const GAttributeSortField._('VALUE_REQUIRED');
const GAttributeSortField _$gAttributeSortFieldIS_VARIANT_ONLY =
    const GAttributeSortField._('IS_VARIANT_ONLY');
const GAttributeSortField _$gAttributeSortFieldVISIBLE_IN_STOREFRONT =
    const GAttributeSortField._('VISIBLE_IN_STOREFRONT');
const GAttributeSortField _$gAttributeSortFieldFILTERABLE_IN_STOREFRONT =
    const GAttributeSortField._('FILTERABLE_IN_STOREFRONT');
const GAttributeSortField _$gAttributeSortFieldFILTERABLE_IN_DASHBOARD =
    const GAttributeSortField._('FILTERABLE_IN_DASHBOARD');
const GAttributeSortField _$gAttributeSortFieldSTOREFRONT_SEARCH_POSITION =
    const GAttributeSortField._('STOREFRONT_SEARCH_POSITION');
const GAttributeSortField _$gAttributeSortFieldAVAILABLE_IN_GRID =
    const GAttributeSortField._('AVAILABLE_IN_GRID');

GAttributeSortField _$gAttributeSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gAttributeSortFieldNAME;
    case 'SLUG':
      return _$gAttributeSortFieldSLUG;
    case 'VALUE_REQUIRED':
      return _$gAttributeSortFieldVALUE_REQUIRED;
    case 'IS_VARIANT_ONLY':
      return _$gAttributeSortFieldIS_VARIANT_ONLY;
    case 'VISIBLE_IN_STOREFRONT':
      return _$gAttributeSortFieldVISIBLE_IN_STOREFRONT;
    case 'FILTERABLE_IN_STOREFRONT':
      return _$gAttributeSortFieldFILTERABLE_IN_STOREFRONT;
    case 'FILTERABLE_IN_DASHBOARD':
      return _$gAttributeSortFieldFILTERABLE_IN_DASHBOARD;
    case 'STOREFRONT_SEARCH_POSITION':
      return _$gAttributeSortFieldSTOREFRONT_SEARCH_POSITION;
    case 'AVAILABLE_IN_GRID':
      return _$gAttributeSortFieldAVAILABLE_IN_GRID;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeSortField> _$gAttributeSortFieldValues =
    new BuiltSet<GAttributeSortField>(const <GAttributeSortField>[
  _$gAttributeSortFieldNAME,
  _$gAttributeSortFieldSLUG,
  _$gAttributeSortFieldVALUE_REQUIRED,
  _$gAttributeSortFieldIS_VARIANT_ONLY,
  _$gAttributeSortFieldVISIBLE_IN_STOREFRONT,
  _$gAttributeSortFieldFILTERABLE_IN_STOREFRONT,
  _$gAttributeSortFieldFILTERABLE_IN_DASHBOARD,
  _$gAttributeSortFieldSTOREFRONT_SEARCH_POSITION,
  _$gAttributeSortFieldAVAILABLE_IN_GRID,
]);

const GAttributeTypeEnum _$gAttributeTypeEnumPRODUCT =
    const GAttributeTypeEnum._('PRODUCT');
const GAttributeTypeEnum _$gAttributeTypeEnumVARIANT =
    const GAttributeTypeEnum._('VARIANT');

GAttributeTypeEnum _$gAttributeTypeEnumValueOf(String name) {
  switch (name) {
    case 'PRODUCT':
      return _$gAttributeTypeEnumPRODUCT;
    case 'VARIANT':
      return _$gAttributeTypeEnumVARIANT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeTypeEnum> _$gAttributeTypeEnumValues =
    new BuiltSet<GAttributeTypeEnum>(const <GAttributeTypeEnum>[
  _$gAttributeTypeEnumPRODUCT,
  _$gAttributeTypeEnumVARIANT,
]);

const GAttributeValueType _$gAttributeValueTypeCOLOR =
    const GAttributeValueType._('COLOR');
const GAttributeValueType _$gAttributeValueTypeGRADIENT =
    const GAttributeValueType._('GRADIENT');
const GAttributeValueType _$gAttributeValueTypeURL =
    const GAttributeValueType._('URL');
const GAttributeValueType _$gAttributeValueTypeSTRING =
    const GAttributeValueType._('STRING');

GAttributeValueType _$gAttributeValueTypeValueOf(String name) {
  switch (name) {
    case 'COLOR':
      return _$gAttributeValueTypeCOLOR;
    case 'GRADIENT':
      return _$gAttributeValueTypeGRADIENT;
    case 'URL':
      return _$gAttributeValueTypeURL;
    case 'STRING':
      return _$gAttributeValueTypeSTRING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeValueType> _$gAttributeValueTypeValues =
    new BuiltSet<GAttributeValueType>(const <GAttributeValueType>[
  _$gAttributeValueTypeCOLOR,
  _$gAttributeValueTypeGRADIENT,
  _$gAttributeValueTypeURL,
  _$gAttributeValueTypeSTRING,
]);

const GAuthorizationKeyType _$gAuthorizationKeyTypeFACEBOOK =
    const GAuthorizationKeyType._('FACEBOOK');
const GAuthorizationKeyType _$gAuthorizationKeyTypeGOOGLE_OAUTH2 =
    const GAuthorizationKeyType._('GOOGLE_OAUTH2');

GAuthorizationKeyType _$gAuthorizationKeyTypeValueOf(String name) {
  switch (name) {
    case 'FACEBOOK':
      return _$gAuthorizationKeyTypeFACEBOOK;
    case 'GOOGLE_OAUTH2':
      return _$gAuthorizationKeyTypeGOOGLE_OAUTH2;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAuthorizationKeyType> _$gAuthorizationKeyTypeValues =
    new BuiltSet<GAuthorizationKeyType>(const <GAuthorizationKeyType>[
  _$gAuthorizationKeyTypeFACEBOOK,
  _$gAuthorizationKeyTypeGOOGLE_OAUTH2,
]);

const GCategorySortField _$gCategorySortFieldNAME =
    const GCategorySortField._('NAME');
const GCategorySortField _$gCategorySortFieldPRODUCT_COUNT =
    const GCategorySortField._('PRODUCT_COUNT');
const GCategorySortField _$gCategorySortFieldSUBCATEGORY_COUNT =
    const GCategorySortField._('SUBCATEGORY_COUNT');

GCategorySortField _$gCategorySortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gCategorySortFieldNAME;
    case 'PRODUCT_COUNT':
      return _$gCategorySortFieldPRODUCT_COUNT;
    case 'SUBCATEGORY_COUNT':
      return _$gCategorySortFieldSUBCATEGORY_COUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCategorySortField> _$gCategorySortFieldValues =
    new BuiltSet<GCategorySortField>(const <GCategorySortField>[
  _$gCategorySortFieldNAME,
  _$gCategorySortFieldPRODUCT_COUNT,
  _$gCategorySortFieldSUBCATEGORY_COUNT,
]);

const GCheckoutErrorCode _$gCheckoutErrorCodeBILLING_ADDRESS_NOT_SET =
    const GCheckoutErrorCode._('BILLING_ADDRESS_NOT_SET');
const GCheckoutErrorCode _$gCheckoutErrorCodeCHECKOUT_NOT_FULLY_PAID =
    const GCheckoutErrorCode._('CHECKOUT_NOT_FULLY_PAID');
const GCheckoutErrorCode _$gCheckoutErrorCodeGRAPHQL_ERROR =
    const GCheckoutErrorCode._('GRAPHQL_ERROR');
const GCheckoutErrorCode _$gCheckoutErrorCodeINSUFFICIENT_STOCK =
    const GCheckoutErrorCode._('INSUFFICIENT_STOCK');
const GCheckoutErrorCode _$gCheckoutErrorCodeINVALID =
    const GCheckoutErrorCode._('INVALID');
const GCheckoutErrorCode _$gCheckoutErrorCodeINVALID_SHIPPING_METHOD =
    const GCheckoutErrorCode._('INVALID_SHIPPING_METHOD');
const GCheckoutErrorCode _$gCheckoutErrorCodeNOT_FOUND =
    const GCheckoutErrorCode._('NOT_FOUND');
const GCheckoutErrorCode _$gCheckoutErrorCodePAYMENT_ERROR =
    const GCheckoutErrorCode._('PAYMENT_ERROR');
const GCheckoutErrorCode _$gCheckoutErrorCodeQUANTITY_GREATER_THAN_LIMIT =
    const GCheckoutErrorCode._('QUANTITY_GREATER_THAN_LIMIT');
const GCheckoutErrorCode _$gCheckoutErrorCodeREQUIRED =
    const GCheckoutErrorCode._('REQUIRED');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET =
    const GCheckoutErrorCode._('SHIPPING_ADDRESS_NOT_SET');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_APPLICABLE =
    const GCheckoutErrorCode._('SHIPPING_METHOD_NOT_APPLICABLE');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_SET =
    const GCheckoutErrorCode._('SHIPPING_METHOD_NOT_SET');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_NOT_REQUIRED =
    const GCheckoutErrorCode._('SHIPPING_NOT_REQUIRED');
const GCheckoutErrorCode _$gCheckoutErrorCodeTAX_ERROR =
    const GCheckoutErrorCode._('TAX_ERROR');
const GCheckoutErrorCode _$gCheckoutErrorCodeUNIQUE =
    const GCheckoutErrorCode._('UNIQUE');
const GCheckoutErrorCode _$gCheckoutErrorCodeVOUCHER_NOT_APPLICABLE =
    const GCheckoutErrorCode._('VOUCHER_NOT_APPLICABLE');
const GCheckoutErrorCode _$gCheckoutErrorCodeZERO_QUANTITY =
    const GCheckoutErrorCode._('ZERO_QUANTITY');

GCheckoutErrorCode _$gCheckoutErrorCodeValueOf(String name) {
  switch (name) {
    case 'BILLING_ADDRESS_NOT_SET':
      return _$gCheckoutErrorCodeBILLING_ADDRESS_NOT_SET;
    case 'CHECKOUT_NOT_FULLY_PAID':
      return _$gCheckoutErrorCodeCHECKOUT_NOT_FULLY_PAID;
    case 'GRAPHQL_ERROR':
      return _$gCheckoutErrorCodeGRAPHQL_ERROR;
    case 'INSUFFICIENT_STOCK':
      return _$gCheckoutErrorCodeINSUFFICIENT_STOCK;
    case 'INVALID':
      return _$gCheckoutErrorCodeINVALID;
    case 'INVALID_SHIPPING_METHOD':
      return _$gCheckoutErrorCodeINVALID_SHIPPING_METHOD;
    case 'NOT_FOUND':
      return _$gCheckoutErrorCodeNOT_FOUND;
    case 'PAYMENT_ERROR':
      return _$gCheckoutErrorCodePAYMENT_ERROR;
    case 'QUANTITY_GREATER_THAN_LIMIT':
      return _$gCheckoutErrorCodeQUANTITY_GREATER_THAN_LIMIT;
    case 'REQUIRED':
      return _$gCheckoutErrorCodeREQUIRED;
    case 'SHIPPING_ADDRESS_NOT_SET':
      return _$gCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET;
    case 'SHIPPING_METHOD_NOT_APPLICABLE':
      return _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_APPLICABLE;
    case 'SHIPPING_METHOD_NOT_SET':
      return _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_SET;
    case 'SHIPPING_NOT_REQUIRED':
      return _$gCheckoutErrorCodeSHIPPING_NOT_REQUIRED;
    case 'TAX_ERROR':
      return _$gCheckoutErrorCodeTAX_ERROR;
    case 'UNIQUE':
      return _$gCheckoutErrorCodeUNIQUE;
    case 'VOUCHER_NOT_APPLICABLE':
      return _$gCheckoutErrorCodeVOUCHER_NOT_APPLICABLE;
    case 'ZERO_QUANTITY':
      return _$gCheckoutErrorCodeZERO_QUANTITY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCheckoutErrorCode> _$gCheckoutErrorCodeValues =
    new BuiltSet<GCheckoutErrorCode>(const <GCheckoutErrorCode>[
  _$gCheckoutErrorCodeBILLING_ADDRESS_NOT_SET,
  _$gCheckoutErrorCodeCHECKOUT_NOT_FULLY_PAID,
  _$gCheckoutErrorCodeGRAPHQL_ERROR,
  _$gCheckoutErrorCodeINSUFFICIENT_STOCK,
  _$gCheckoutErrorCodeINVALID,
  _$gCheckoutErrorCodeINVALID_SHIPPING_METHOD,
  _$gCheckoutErrorCodeNOT_FOUND,
  _$gCheckoutErrorCodePAYMENT_ERROR,
  _$gCheckoutErrorCodeQUANTITY_GREATER_THAN_LIMIT,
  _$gCheckoutErrorCodeREQUIRED,
  _$gCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET,
  _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_APPLICABLE,
  _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_SET,
  _$gCheckoutErrorCodeSHIPPING_NOT_REQUIRED,
  _$gCheckoutErrorCodeTAX_ERROR,
  _$gCheckoutErrorCodeUNIQUE,
  _$gCheckoutErrorCodeVOUCHER_NOT_APPLICABLE,
  _$gCheckoutErrorCodeZERO_QUANTITY,
]);

const GCollectionPublished _$gCollectionPublishedPUBLISHED =
    const GCollectionPublished._('PUBLISHED');
const GCollectionPublished _$gCollectionPublishedHIDDEN =
    const GCollectionPublished._('HIDDEN');

GCollectionPublished _$gCollectionPublishedValueOf(String name) {
  switch (name) {
    case 'PUBLISHED':
      return _$gCollectionPublishedPUBLISHED;
    case 'HIDDEN':
      return _$gCollectionPublishedHIDDEN;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCollectionPublished> _$gCollectionPublishedValues =
    new BuiltSet<GCollectionPublished>(const <GCollectionPublished>[
  _$gCollectionPublishedPUBLISHED,
  _$gCollectionPublishedHIDDEN,
]);

const GCollectionSortField _$gCollectionSortFieldNAME =
    const GCollectionSortField._('NAME');
const GCollectionSortField _$gCollectionSortFieldAVAILABILITY =
    const GCollectionSortField._('AVAILABILITY');
const GCollectionSortField _$gCollectionSortFieldPRODUCT_COUNT =
    const GCollectionSortField._('PRODUCT_COUNT');

GCollectionSortField _$gCollectionSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gCollectionSortFieldNAME;
    case 'AVAILABILITY':
      return _$gCollectionSortFieldAVAILABILITY;
    case 'PRODUCT_COUNT':
      return _$gCollectionSortFieldPRODUCT_COUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCollectionSortField> _$gCollectionSortFieldValues =
    new BuiltSet<GCollectionSortField>(const <GCollectionSortField>[
  _$gCollectionSortFieldNAME,
  _$gCollectionSortFieldAVAILABILITY,
  _$gCollectionSortFieldPRODUCT_COUNT,
]);

const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumSTRING =
    const GConfigurationTypeFieldEnum._('STRING');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumBOOLEAN =
    const GConfigurationTypeFieldEnum._('BOOLEAN');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumSECRET =
    const GConfigurationTypeFieldEnum._('SECRET');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumPASSWORD =
    const GConfigurationTypeFieldEnum._('PASSWORD');

GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumValueOf(String name) {
  switch (name) {
    case 'STRING':
      return _$gConfigurationTypeFieldEnumSTRING;
    case 'BOOLEAN':
      return _$gConfigurationTypeFieldEnumBOOLEAN;
    case 'SECRET':
      return _$gConfigurationTypeFieldEnumSECRET;
    case 'PASSWORD':
      return _$gConfigurationTypeFieldEnumPASSWORD;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GConfigurationTypeFieldEnum>
    _$gConfigurationTypeFieldEnumValues = new BuiltSet<
        GConfigurationTypeFieldEnum>(const <GConfigurationTypeFieldEnum>[
  _$gConfigurationTypeFieldEnumSTRING,
  _$gConfigurationTypeFieldEnumBOOLEAN,
  _$gConfigurationTypeFieldEnumSECRET,
  _$gConfigurationTypeFieldEnumPASSWORD,
]);

const GCountryCode _$gCountryCodeAF = const GCountryCode._('AF');
const GCountryCode _$gCountryCodeAX = const GCountryCode._('AX');
const GCountryCode _$gCountryCodeAL = const GCountryCode._('AL');
const GCountryCode _$gCountryCodeDZ = const GCountryCode._('DZ');
const GCountryCode _$gCountryCodeAS = const GCountryCode._('AS');
const GCountryCode _$gCountryCodeAD = const GCountryCode._('AD');
const GCountryCode _$gCountryCodeAO = const GCountryCode._('AO');
const GCountryCode _$gCountryCodeAI = const GCountryCode._('AI');
const GCountryCode _$gCountryCodeAQ = const GCountryCode._('AQ');
const GCountryCode _$gCountryCodeAG = const GCountryCode._('AG');
const GCountryCode _$gCountryCodeAR = const GCountryCode._('AR');
const GCountryCode _$gCountryCodeAM = const GCountryCode._('AM');
const GCountryCode _$gCountryCodeAW = const GCountryCode._('AW');
const GCountryCode _$gCountryCodeAU = const GCountryCode._('AU');
const GCountryCode _$gCountryCodeAT = const GCountryCode._('AT');
const GCountryCode _$gCountryCodeAZ = const GCountryCode._('AZ');
const GCountryCode _$gCountryCodeBS = const GCountryCode._('BS');
const GCountryCode _$gCountryCodeBH = const GCountryCode._('BH');
const GCountryCode _$gCountryCodeBD = const GCountryCode._('BD');
const GCountryCode _$gCountryCodeBB = const GCountryCode._('BB');
const GCountryCode _$gCountryCodeBY = const GCountryCode._('BY');
const GCountryCode _$gCountryCodeBE = const GCountryCode._('BE');
const GCountryCode _$gCountryCodeBZ = const GCountryCode._('BZ');
const GCountryCode _$gCountryCodeBJ = const GCountryCode._('BJ');
const GCountryCode _$gCountryCodeBM = const GCountryCode._('BM');
const GCountryCode _$gCountryCodeBT = const GCountryCode._('BT');
const GCountryCode _$gCountryCodeBO = const GCountryCode._('BO');
const GCountryCode _$gCountryCodeBQ = const GCountryCode._('BQ');
const GCountryCode _$gCountryCodeBA = const GCountryCode._('BA');
const GCountryCode _$gCountryCodeBW = const GCountryCode._('BW');
const GCountryCode _$gCountryCodeBV = const GCountryCode._('BV');
const GCountryCode _$gCountryCodeBR = const GCountryCode._('BR');
const GCountryCode _$gCountryCodeIO = const GCountryCode._('IO');
const GCountryCode _$gCountryCodeBN = const GCountryCode._('BN');
const GCountryCode _$gCountryCodeBG = const GCountryCode._('BG');
const GCountryCode _$gCountryCodeBF = const GCountryCode._('BF');
const GCountryCode _$gCountryCodeBI = const GCountryCode._('BI');
const GCountryCode _$gCountryCodeCV = const GCountryCode._('CV');
const GCountryCode _$gCountryCodeKH = const GCountryCode._('KH');
const GCountryCode _$gCountryCodeCM = const GCountryCode._('CM');
const GCountryCode _$gCountryCodeCA = const GCountryCode._('CA');
const GCountryCode _$gCountryCodeKY = const GCountryCode._('KY');
const GCountryCode _$gCountryCodeCF = const GCountryCode._('CF');
const GCountryCode _$gCountryCodeTD = const GCountryCode._('TD');
const GCountryCode _$gCountryCodeCL = const GCountryCode._('CL');
const GCountryCode _$gCountryCodeCN = const GCountryCode._('CN');
const GCountryCode _$gCountryCodeCX = const GCountryCode._('CX');
const GCountryCode _$gCountryCodeCC = const GCountryCode._('CC');
const GCountryCode _$gCountryCodeCO = const GCountryCode._('CO');
const GCountryCode _$gCountryCodeKM = const GCountryCode._('KM');
const GCountryCode _$gCountryCodeCG = const GCountryCode._('CG');
const GCountryCode _$gCountryCodeCD = const GCountryCode._('CD');
const GCountryCode _$gCountryCodeCK = const GCountryCode._('CK');
const GCountryCode _$gCountryCodeCR = const GCountryCode._('CR');
const GCountryCode _$gCountryCodeCI = const GCountryCode._('CI');
const GCountryCode _$gCountryCodeHR = const GCountryCode._('HR');
const GCountryCode _$gCountryCodeCU = const GCountryCode._('CU');
const GCountryCode _$gCountryCodeCW = const GCountryCode._('CW');
const GCountryCode _$gCountryCodeCY = const GCountryCode._('CY');
const GCountryCode _$gCountryCodeCZ = const GCountryCode._('CZ');
const GCountryCode _$gCountryCodeDK = const GCountryCode._('DK');
const GCountryCode _$gCountryCodeDJ = const GCountryCode._('DJ');
const GCountryCode _$gCountryCodeDM = const GCountryCode._('DM');
const GCountryCode _$gCountryCodeDO = const GCountryCode._('DO');
const GCountryCode _$gCountryCodeEC = const GCountryCode._('EC');
const GCountryCode _$gCountryCodeEG = const GCountryCode._('EG');
const GCountryCode _$gCountryCodeSV = const GCountryCode._('SV');
const GCountryCode _$gCountryCodeGQ = const GCountryCode._('GQ');
const GCountryCode _$gCountryCodeER = const GCountryCode._('ER');
const GCountryCode _$gCountryCodeEE = const GCountryCode._('EE');
const GCountryCode _$gCountryCodeSZ = const GCountryCode._('SZ');
const GCountryCode _$gCountryCodeET = const GCountryCode._('ET');
const GCountryCode _$gCountryCodeEU = const GCountryCode._('EU');
const GCountryCode _$gCountryCodeFK = const GCountryCode._('FK');
const GCountryCode _$gCountryCodeFO = const GCountryCode._('FO');
const GCountryCode _$gCountryCodeFJ = const GCountryCode._('FJ');
const GCountryCode _$gCountryCodeFI = const GCountryCode._('FI');
const GCountryCode _$gCountryCodeFR = const GCountryCode._('FR');
const GCountryCode _$gCountryCodeGF = const GCountryCode._('GF');
const GCountryCode _$gCountryCodePF = const GCountryCode._('PF');
const GCountryCode _$gCountryCodeTF = const GCountryCode._('TF');
const GCountryCode _$gCountryCodeGA = const GCountryCode._('GA');
const GCountryCode _$gCountryCodeGM = const GCountryCode._('GM');
const GCountryCode _$gCountryCodeGE = const GCountryCode._('GE');
const GCountryCode _$gCountryCodeDE = const GCountryCode._('DE');
const GCountryCode _$gCountryCodeGH = const GCountryCode._('GH');
const GCountryCode _$gCountryCodeGI = const GCountryCode._('GI');
const GCountryCode _$gCountryCodeGR = const GCountryCode._('GR');
const GCountryCode _$gCountryCodeGL = const GCountryCode._('GL');
const GCountryCode _$gCountryCodeGD = const GCountryCode._('GD');
const GCountryCode _$gCountryCodeGP = const GCountryCode._('GP');
const GCountryCode _$gCountryCodeGU = const GCountryCode._('GU');
const GCountryCode _$gCountryCodeGT = const GCountryCode._('GT');
const GCountryCode _$gCountryCodeGG = const GCountryCode._('GG');
const GCountryCode _$gCountryCodeGN = const GCountryCode._('GN');
const GCountryCode _$gCountryCodeGW = const GCountryCode._('GW');
const GCountryCode _$gCountryCodeGY = const GCountryCode._('GY');
const GCountryCode _$gCountryCodeHT = const GCountryCode._('HT');
const GCountryCode _$gCountryCodeHM = const GCountryCode._('HM');
const GCountryCode _$gCountryCodeVA = const GCountryCode._('VA');
const GCountryCode _$gCountryCodeHN = const GCountryCode._('HN');
const GCountryCode _$gCountryCodeHK = const GCountryCode._('HK');
const GCountryCode _$gCountryCodeHU = const GCountryCode._('HU');
const GCountryCode _$gCountryCodeIS = const GCountryCode._('IS');
const GCountryCode _$gCountryCodeIN = const GCountryCode._('IN');
const GCountryCode _$gCountryCodeID = const GCountryCode._('ID');
const GCountryCode _$gCountryCodeIR = const GCountryCode._('IR');
const GCountryCode _$gCountryCodeIQ = const GCountryCode._('IQ');
const GCountryCode _$gCountryCodeIE = const GCountryCode._('IE');
const GCountryCode _$gCountryCodeIM = const GCountryCode._('IM');
const GCountryCode _$gCountryCodeIL = const GCountryCode._('IL');
const GCountryCode _$gCountryCodeIT = const GCountryCode._('IT');
const GCountryCode _$gCountryCodeJM = const GCountryCode._('JM');
const GCountryCode _$gCountryCodeJP = const GCountryCode._('JP');
const GCountryCode _$gCountryCodeJE = const GCountryCode._('JE');
const GCountryCode _$gCountryCodeJO = const GCountryCode._('JO');
const GCountryCode _$gCountryCodeKZ = const GCountryCode._('KZ');
const GCountryCode _$gCountryCodeKE = const GCountryCode._('KE');
const GCountryCode _$gCountryCodeKI = const GCountryCode._('KI');
const GCountryCode _$gCountryCodeKW = const GCountryCode._('KW');
const GCountryCode _$gCountryCodeKG = const GCountryCode._('KG');
const GCountryCode _$gCountryCodeLA = const GCountryCode._('LA');
const GCountryCode _$gCountryCodeLV = const GCountryCode._('LV');
const GCountryCode _$gCountryCodeLB = const GCountryCode._('LB');
const GCountryCode _$gCountryCodeLS = const GCountryCode._('LS');
const GCountryCode _$gCountryCodeLR = const GCountryCode._('LR');
const GCountryCode _$gCountryCodeLY = const GCountryCode._('LY');
const GCountryCode _$gCountryCodeLI = const GCountryCode._('LI');
const GCountryCode _$gCountryCodeLT = const GCountryCode._('LT');
const GCountryCode _$gCountryCodeLU = const GCountryCode._('LU');
const GCountryCode _$gCountryCodeMO = const GCountryCode._('MO');
const GCountryCode _$gCountryCodeMG = const GCountryCode._('MG');
const GCountryCode _$gCountryCodeMW = const GCountryCode._('MW');
const GCountryCode _$gCountryCodeMY = const GCountryCode._('MY');
const GCountryCode _$gCountryCodeMV = const GCountryCode._('MV');
const GCountryCode _$gCountryCodeML = const GCountryCode._('ML');
const GCountryCode _$gCountryCodeMT = const GCountryCode._('MT');
const GCountryCode _$gCountryCodeMH = const GCountryCode._('MH');
const GCountryCode _$gCountryCodeMQ = const GCountryCode._('MQ');
const GCountryCode _$gCountryCodeMR = const GCountryCode._('MR');
const GCountryCode _$gCountryCodeMU = const GCountryCode._('MU');
const GCountryCode _$gCountryCodeYT = const GCountryCode._('YT');
const GCountryCode _$gCountryCodeMX = const GCountryCode._('MX');
const GCountryCode _$gCountryCodeFM = const GCountryCode._('FM');
const GCountryCode _$gCountryCodeMD = const GCountryCode._('MD');
const GCountryCode _$gCountryCodeMC = const GCountryCode._('MC');
const GCountryCode _$gCountryCodeMN = const GCountryCode._('MN');
const GCountryCode _$gCountryCodeME = const GCountryCode._('ME');
const GCountryCode _$gCountryCodeMS = const GCountryCode._('MS');
const GCountryCode _$gCountryCodeMA = const GCountryCode._('MA');
const GCountryCode _$gCountryCodeMZ = const GCountryCode._('MZ');
const GCountryCode _$gCountryCodeMM = const GCountryCode._('MM');
const GCountryCode _$gCountryCodeNA = const GCountryCode._('NA');
const GCountryCode _$gCountryCodeNR = const GCountryCode._('NR');
const GCountryCode _$gCountryCodeNP = const GCountryCode._('NP');
const GCountryCode _$gCountryCodeNL = const GCountryCode._('NL');
const GCountryCode _$gCountryCodeNC = const GCountryCode._('NC');
const GCountryCode _$gCountryCodeNZ = const GCountryCode._('NZ');
const GCountryCode _$gCountryCodeNI = const GCountryCode._('NI');
const GCountryCode _$gCountryCodeNE = const GCountryCode._('NE');
const GCountryCode _$gCountryCodeNG = const GCountryCode._('NG');
const GCountryCode _$gCountryCodeNU = const GCountryCode._('NU');
const GCountryCode _$gCountryCodeNF = const GCountryCode._('NF');
const GCountryCode _$gCountryCodeKP = const GCountryCode._('KP');
const GCountryCode _$gCountryCodeMK = const GCountryCode._('MK');
const GCountryCode _$gCountryCodeMP = const GCountryCode._('MP');
const GCountryCode _$gCountryCodeNO = const GCountryCode._('NO');
const GCountryCode _$gCountryCodeOM = const GCountryCode._('OM');
const GCountryCode _$gCountryCodePK = const GCountryCode._('PK');
const GCountryCode _$gCountryCodePW = const GCountryCode._('PW');
const GCountryCode _$gCountryCodePS = const GCountryCode._('PS');
const GCountryCode _$gCountryCodePA = const GCountryCode._('PA');
const GCountryCode _$gCountryCodePG = const GCountryCode._('PG');
const GCountryCode _$gCountryCodePY = const GCountryCode._('PY');
const GCountryCode _$gCountryCodePE = const GCountryCode._('PE');
const GCountryCode _$gCountryCodePH = const GCountryCode._('PH');
const GCountryCode _$gCountryCodePN = const GCountryCode._('PN');
const GCountryCode _$gCountryCodePL = const GCountryCode._('PL');
const GCountryCode _$gCountryCodePT = const GCountryCode._('PT');
const GCountryCode _$gCountryCodePR = const GCountryCode._('PR');
const GCountryCode _$gCountryCodeQA = const GCountryCode._('QA');
const GCountryCode _$gCountryCodeRE = const GCountryCode._('RE');
const GCountryCode _$gCountryCodeRO = const GCountryCode._('RO');
const GCountryCode _$gCountryCodeRU = const GCountryCode._('RU');
const GCountryCode _$gCountryCodeRW = const GCountryCode._('RW');
const GCountryCode _$gCountryCodeBL = const GCountryCode._('BL');
const GCountryCode _$gCountryCodeSH = const GCountryCode._('SH');
const GCountryCode _$gCountryCodeKN = const GCountryCode._('KN');
const GCountryCode _$gCountryCodeLC = const GCountryCode._('LC');
const GCountryCode _$gCountryCodeMF = const GCountryCode._('MF');
const GCountryCode _$gCountryCodePM = const GCountryCode._('PM');
const GCountryCode _$gCountryCodeVC = const GCountryCode._('VC');
const GCountryCode _$gCountryCodeWS = const GCountryCode._('WS');
const GCountryCode _$gCountryCodeSM = const GCountryCode._('SM');
const GCountryCode _$gCountryCodeST = const GCountryCode._('ST');
const GCountryCode _$gCountryCodeSA = const GCountryCode._('SA');
const GCountryCode _$gCountryCodeSN = const GCountryCode._('SN');
const GCountryCode _$gCountryCodeRS = const GCountryCode._('RS');
const GCountryCode _$gCountryCodeSC = const GCountryCode._('SC');
const GCountryCode _$gCountryCodeSL = const GCountryCode._('SL');
const GCountryCode _$gCountryCodeSG = const GCountryCode._('SG');
const GCountryCode _$gCountryCodeSX = const GCountryCode._('SX');
const GCountryCode _$gCountryCodeSK = const GCountryCode._('SK');
const GCountryCode _$gCountryCodeSI = const GCountryCode._('SI');
const GCountryCode _$gCountryCodeSB = const GCountryCode._('SB');
const GCountryCode _$gCountryCodeSO = const GCountryCode._('SO');
const GCountryCode _$gCountryCodeZA = const GCountryCode._('ZA');
const GCountryCode _$gCountryCodeGS = const GCountryCode._('GS');
const GCountryCode _$gCountryCodeKR = const GCountryCode._('KR');
const GCountryCode _$gCountryCodeSS = const GCountryCode._('SS');
const GCountryCode _$gCountryCodeES = const GCountryCode._('ES');
const GCountryCode _$gCountryCodeLK = const GCountryCode._('LK');
const GCountryCode _$gCountryCodeSD = const GCountryCode._('SD');
const GCountryCode _$gCountryCodeSR = const GCountryCode._('SR');
const GCountryCode _$gCountryCodeSJ = const GCountryCode._('SJ');
const GCountryCode _$gCountryCodeSE = const GCountryCode._('SE');
const GCountryCode _$gCountryCodeCH = const GCountryCode._('CH');
const GCountryCode _$gCountryCodeSY = const GCountryCode._('SY');
const GCountryCode _$gCountryCodeTW = const GCountryCode._('TW');
const GCountryCode _$gCountryCodeTJ = const GCountryCode._('TJ');
const GCountryCode _$gCountryCodeTZ = const GCountryCode._('TZ');
const GCountryCode _$gCountryCodeTH = const GCountryCode._('TH');
const GCountryCode _$gCountryCodeTL = const GCountryCode._('TL');
const GCountryCode _$gCountryCodeTG = const GCountryCode._('TG');
const GCountryCode _$gCountryCodeTK = const GCountryCode._('TK');
const GCountryCode _$gCountryCodeTO = const GCountryCode._('TO');
const GCountryCode _$gCountryCodeTT = const GCountryCode._('TT');
const GCountryCode _$gCountryCodeTN = const GCountryCode._('TN');
const GCountryCode _$gCountryCodeTR = const GCountryCode._('TR');
const GCountryCode _$gCountryCodeTM = const GCountryCode._('TM');
const GCountryCode _$gCountryCodeTC = const GCountryCode._('TC');
const GCountryCode _$gCountryCodeTV = const GCountryCode._('TV');
const GCountryCode _$gCountryCodeUG = const GCountryCode._('UG');
const GCountryCode _$gCountryCodeUA = const GCountryCode._('UA');
const GCountryCode _$gCountryCodeAE = const GCountryCode._('AE');
const GCountryCode _$gCountryCodeGB = const GCountryCode._('GB');
const GCountryCode _$gCountryCodeUM = const GCountryCode._('UM');
const GCountryCode _$gCountryCodeUS = const GCountryCode._('US');
const GCountryCode _$gCountryCodeUY = const GCountryCode._('UY');
const GCountryCode _$gCountryCodeUZ = const GCountryCode._('UZ');
const GCountryCode _$gCountryCodeVU = const GCountryCode._('VU');
const GCountryCode _$gCountryCodeVE = const GCountryCode._('VE');
const GCountryCode _$gCountryCodeVN = const GCountryCode._('VN');
const GCountryCode _$gCountryCodeVG = const GCountryCode._('VG');
const GCountryCode _$gCountryCodeVI = const GCountryCode._('VI');
const GCountryCode _$gCountryCodeWF = const GCountryCode._('WF');
const GCountryCode _$gCountryCodeEH = const GCountryCode._('EH');
const GCountryCode _$gCountryCodeYE = const GCountryCode._('YE');
const GCountryCode _$gCountryCodeZM = const GCountryCode._('ZM');
const GCountryCode _$gCountryCodeZW = const GCountryCode._('ZW');

GCountryCode _$gCountryCodeValueOf(String name) {
  switch (name) {
    case 'AF':
      return _$gCountryCodeAF;
    case 'AX':
      return _$gCountryCodeAX;
    case 'AL':
      return _$gCountryCodeAL;
    case 'DZ':
      return _$gCountryCodeDZ;
    case 'AS':
      return _$gCountryCodeAS;
    case 'AD':
      return _$gCountryCodeAD;
    case 'AO':
      return _$gCountryCodeAO;
    case 'AI':
      return _$gCountryCodeAI;
    case 'AQ':
      return _$gCountryCodeAQ;
    case 'AG':
      return _$gCountryCodeAG;
    case 'AR':
      return _$gCountryCodeAR;
    case 'AM':
      return _$gCountryCodeAM;
    case 'AW':
      return _$gCountryCodeAW;
    case 'AU':
      return _$gCountryCodeAU;
    case 'AT':
      return _$gCountryCodeAT;
    case 'AZ':
      return _$gCountryCodeAZ;
    case 'BS':
      return _$gCountryCodeBS;
    case 'BH':
      return _$gCountryCodeBH;
    case 'BD':
      return _$gCountryCodeBD;
    case 'BB':
      return _$gCountryCodeBB;
    case 'BY':
      return _$gCountryCodeBY;
    case 'BE':
      return _$gCountryCodeBE;
    case 'BZ':
      return _$gCountryCodeBZ;
    case 'BJ':
      return _$gCountryCodeBJ;
    case 'BM':
      return _$gCountryCodeBM;
    case 'BT':
      return _$gCountryCodeBT;
    case 'BO':
      return _$gCountryCodeBO;
    case 'BQ':
      return _$gCountryCodeBQ;
    case 'BA':
      return _$gCountryCodeBA;
    case 'BW':
      return _$gCountryCodeBW;
    case 'BV':
      return _$gCountryCodeBV;
    case 'BR':
      return _$gCountryCodeBR;
    case 'IO':
      return _$gCountryCodeIO;
    case 'BN':
      return _$gCountryCodeBN;
    case 'BG':
      return _$gCountryCodeBG;
    case 'BF':
      return _$gCountryCodeBF;
    case 'BI':
      return _$gCountryCodeBI;
    case 'CV':
      return _$gCountryCodeCV;
    case 'KH':
      return _$gCountryCodeKH;
    case 'CM':
      return _$gCountryCodeCM;
    case 'CA':
      return _$gCountryCodeCA;
    case 'KY':
      return _$gCountryCodeKY;
    case 'CF':
      return _$gCountryCodeCF;
    case 'TD':
      return _$gCountryCodeTD;
    case 'CL':
      return _$gCountryCodeCL;
    case 'CN':
      return _$gCountryCodeCN;
    case 'CX':
      return _$gCountryCodeCX;
    case 'CC':
      return _$gCountryCodeCC;
    case 'CO':
      return _$gCountryCodeCO;
    case 'KM':
      return _$gCountryCodeKM;
    case 'CG':
      return _$gCountryCodeCG;
    case 'CD':
      return _$gCountryCodeCD;
    case 'CK':
      return _$gCountryCodeCK;
    case 'CR':
      return _$gCountryCodeCR;
    case 'CI':
      return _$gCountryCodeCI;
    case 'HR':
      return _$gCountryCodeHR;
    case 'CU':
      return _$gCountryCodeCU;
    case 'CW':
      return _$gCountryCodeCW;
    case 'CY':
      return _$gCountryCodeCY;
    case 'CZ':
      return _$gCountryCodeCZ;
    case 'DK':
      return _$gCountryCodeDK;
    case 'DJ':
      return _$gCountryCodeDJ;
    case 'DM':
      return _$gCountryCodeDM;
    case 'DO':
      return _$gCountryCodeDO;
    case 'EC':
      return _$gCountryCodeEC;
    case 'EG':
      return _$gCountryCodeEG;
    case 'SV':
      return _$gCountryCodeSV;
    case 'GQ':
      return _$gCountryCodeGQ;
    case 'ER':
      return _$gCountryCodeER;
    case 'EE':
      return _$gCountryCodeEE;
    case 'SZ':
      return _$gCountryCodeSZ;
    case 'ET':
      return _$gCountryCodeET;
    case 'EU':
      return _$gCountryCodeEU;
    case 'FK':
      return _$gCountryCodeFK;
    case 'FO':
      return _$gCountryCodeFO;
    case 'FJ':
      return _$gCountryCodeFJ;
    case 'FI':
      return _$gCountryCodeFI;
    case 'FR':
      return _$gCountryCodeFR;
    case 'GF':
      return _$gCountryCodeGF;
    case 'PF':
      return _$gCountryCodePF;
    case 'TF':
      return _$gCountryCodeTF;
    case 'GA':
      return _$gCountryCodeGA;
    case 'GM':
      return _$gCountryCodeGM;
    case 'GE':
      return _$gCountryCodeGE;
    case 'DE':
      return _$gCountryCodeDE;
    case 'GH':
      return _$gCountryCodeGH;
    case 'GI':
      return _$gCountryCodeGI;
    case 'GR':
      return _$gCountryCodeGR;
    case 'GL':
      return _$gCountryCodeGL;
    case 'GD':
      return _$gCountryCodeGD;
    case 'GP':
      return _$gCountryCodeGP;
    case 'GU':
      return _$gCountryCodeGU;
    case 'GT':
      return _$gCountryCodeGT;
    case 'GG':
      return _$gCountryCodeGG;
    case 'GN':
      return _$gCountryCodeGN;
    case 'GW':
      return _$gCountryCodeGW;
    case 'GY':
      return _$gCountryCodeGY;
    case 'HT':
      return _$gCountryCodeHT;
    case 'HM':
      return _$gCountryCodeHM;
    case 'VA':
      return _$gCountryCodeVA;
    case 'HN':
      return _$gCountryCodeHN;
    case 'HK':
      return _$gCountryCodeHK;
    case 'HU':
      return _$gCountryCodeHU;
    case 'IS':
      return _$gCountryCodeIS;
    case 'IN':
      return _$gCountryCodeIN;
    case 'ID':
      return _$gCountryCodeID;
    case 'IR':
      return _$gCountryCodeIR;
    case 'IQ':
      return _$gCountryCodeIQ;
    case 'IE':
      return _$gCountryCodeIE;
    case 'IM':
      return _$gCountryCodeIM;
    case 'IL':
      return _$gCountryCodeIL;
    case 'IT':
      return _$gCountryCodeIT;
    case 'JM':
      return _$gCountryCodeJM;
    case 'JP':
      return _$gCountryCodeJP;
    case 'JE':
      return _$gCountryCodeJE;
    case 'JO':
      return _$gCountryCodeJO;
    case 'KZ':
      return _$gCountryCodeKZ;
    case 'KE':
      return _$gCountryCodeKE;
    case 'KI':
      return _$gCountryCodeKI;
    case 'KW':
      return _$gCountryCodeKW;
    case 'KG':
      return _$gCountryCodeKG;
    case 'LA':
      return _$gCountryCodeLA;
    case 'LV':
      return _$gCountryCodeLV;
    case 'LB':
      return _$gCountryCodeLB;
    case 'LS':
      return _$gCountryCodeLS;
    case 'LR':
      return _$gCountryCodeLR;
    case 'LY':
      return _$gCountryCodeLY;
    case 'LI':
      return _$gCountryCodeLI;
    case 'LT':
      return _$gCountryCodeLT;
    case 'LU':
      return _$gCountryCodeLU;
    case 'MO':
      return _$gCountryCodeMO;
    case 'MG':
      return _$gCountryCodeMG;
    case 'MW':
      return _$gCountryCodeMW;
    case 'MY':
      return _$gCountryCodeMY;
    case 'MV':
      return _$gCountryCodeMV;
    case 'ML':
      return _$gCountryCodeML;
    case 'MT':
      return _$gCountryCodeMT;
    case 'MH':
      return _$gCountryCodeMH;
    case 'MQ':
      return _$gCountryCodeMQ;
    case 'MR':
      return _$gCountryCodeMR;
    case 'MU':
      return _$gCountryCodeMU;
    case 'YT':
      return _$gCountryCodeYT;
    case 'MX':
      return _$gCountryCodeMX;
    case 'FM':
      return _$gCountryCodeFM;
    case 'MD':
      return _$gCountryCodeMD;
    case 'MC':
      return _$gCountryCodeMC;
    case 'MN':
      return _$gCountryCodeMN;
    case 'ME':
      return _$gCountryCodeME;
    case 'MS':
      return _$gCountryCodeMS;
    case 'MA':
      return _$gCountryCodeMA;
    case 'MZ':
      return _$gCountryCodeMZ;
    case 'MM':
      return _$gCountryCodeMM;
    case 'NA':
      return _$gCountryCodeNA;
    case 'NR':
      return _$gCountryCodeNR;
    case 'NP':
      return _$gCountryCodeNP;
    case 'NL':
      return _$gCountryCodeNL;
    case 'NC':
      return _$gCountryCodeNC;
    case 'NZ':
      return _$gCountryCodeNZ;
    case 'NI':
      return _$gCountryCodeNI;
    case 'NE':
      return _$gCountryCodeNE;
    case 'NG':
      return _$gCountryCodeNG;
    case 'NU':
      return _$gCountryCodeNU;
    case 'NF':
      return _$gCountryCodeNF;
    case 'KP':
      return _$gCountryCodeKP;
    case 'MK':
      return _$gCountryCodeMK;
    case 'MP':
      return _$gCountryCodeMP;
    case 'NO':
      return _$gCountryCodeNO;
    case 'OM':
      return _$gCountryCodeOM;
    case 'PK':
      return _$gCountryCodePK;
    case 'PW':
      return _$gCountryCodePW;
    case 'PS':
      return _$gCountryCodePS;
    case 'PA':
      return _$gCountryCodePA;
    case 'PG':
      return _$gCountryCodePG;
    case 'PY':
      return _$gCountryCodePY;
    case 'PE':
      return _$gCountryCodePE;
    case 'PH':
      return _$gCountryCodePH;
    case 'PN':
      return _$gCountryCodePN;
    case 'PL':
      return _$gCountryCodePL;
    case 'PT':
      return _$gCountryCodePT;
    case 'PR':
      return _$gCountryCodePR;
    case 'QA':
      return _$gCountryCodeQA;
    case 'RE':
      return _$gCountryCodeRE;
    case 'RO':
      return _$gCountryCodeRO;
    case 'RU':
      return _$gCountryCodeRU;
    case 'RW':
      return _$gCountryCodeRW;
    case 'BL':
      return _$gCountryCodeBL;
    case 'SH':
      return _$gCountryCodeSH;
    case 'KN':
      return _$gCountryCodeKN;
    case 'LC':
      return _$gCountryCodeLC;
    case 'MF':
      return _$gCountryCodeMF;
    case 'PM':
      return _$gCountryCodePM;
    case 'VC':
      return _$gCountryCodeVC;
    case 'WS':
      return _$gCountryCodeWS;
    case 'SM':
      return _$gCountryCodeSM;
    case 'ST':
      return _$gCountryCodeST;
    case 'SA':
      return _$gCountryCodeSA;
    case 'SN':
      return _$gCountryCodeSN;
    case 'RS':
      return _$gCountryCodeRS;
    case 'SC':
      return _$gCountryCodeSC;
    case 'SL':
      return _$gCountryCodeSL;
    case 'SG':
      return _$gCountryCodeSG;
    case 'SX':
      return _$gCountryCodeSX;
    case 'SK':
      return _$gCountryCodeSK;
    case 'SI':
      return _$gCountryCodeSI;
    case 'SB':
      return _$gCountryCodeSB;
    case 'SO':
      return _$gCountryCodeSO;
    case 'ZA':
      return _$gCountryCodeZA;
    case 'GS':
      return _$gCountryCodeGS;
    case 'KR':
      return _$gCountryCodeKR;
    case 'SS':
      return _$gCountryCodeSS;
    case 'ES':
      return _$gCountryCodeES;
    case 'LK':
      return _$gCountryCodeLK;
    case 'SD':
      return _$gCountryCodeSD;
    case 'SR':
      return _$gCountryCodeSR;
    case 'SJ':
      return _$gCountryCodeSJ;
    case 'SE':
      return _$gCountryCodeSE;
    case 'CH':
      return _$gCountryCodeCH;
    case 'SY':
      return _$gCountryCodeSY;
    case 'TW':
      return _$gCountryCodeTW;
    case 'TJ':
      return _$gCountryCodeTJ;
    case 'TZ':
      return _$gCountryCodeTZ;
    case 'TH':
      return _$gCountryCodeTH;
    case 'TL':
      return _$gCountryCodeTL;
    case 'TG':
      return _$gCountryCodeTG;
    case 'TK':
      return _$gCountryCodeTK;
    case 'TO':
      return _$gCountryCodeTO;
    case 'TT':
      return _$gCountryCodeTT;
    case 'TN':
      return _$gCountryCodeTN;
    case 'TR':
      return _$gCountryCodeTR;
    case 'TM':
      return _$gCountryCodeTM;
    case 'TC':
      return _$gCountryCodeTC;
    case 'TV':
      return _$gCountryCodeTV;
    case 'UG':
      return _$gCountryCodeUG;
    case 'UA':
      return _$gCountryCodeUA;
    case 'AE':
      return _$gCountryCodeAE;
    case 'GB':
      return _$gCountryCodeGB;
    case 'UM':
      return _$gCountryCodeUM;
    case 'US':
      return _$gCountryCodeUS;
    case 'UY':
      return _$gCountryCodeUY;
    case 'UZ':
      return _$gCountryCodeUZ;
    case 'VU':
      return _$gCountryCodeVU;
    case 'VE':
      return _$gCountryCodeVE;
    case 'VN':
      return _$gCountryCodeVN;
    case 'VG':
      return _$gCountryCodeVG;
    case 'VI':
      return _$gCountryCodeVI;
    case 'WF':
      return _$gCountryCodeWF;
    case 'EH':
      return _$gCountryCodeEH;
    case 'YE':
      return _$gCountryCodeYE;
    case 'ZM':
      return _$gCountryCodeZM;
    case 'ZW':
      return _$gCountryCodeZW;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCountryCode> _$gCountryCodeValues =
    new BuiltSet<GCountryCode>(const <GCountryCode>[
  _$gCountryCodeAF,
  _$gCountryCodeAX,
  _$gCountryCodeAL,
  _$gCountryCodeDZ,
  _$gCountryCodeAS,
  _$gCountryCodeAD,
  _$gCountryCodeAO,
  _$gCountryCodeAI,
  _$gCountryCodeAQ,
  _$gCountryCodeAG,
  _$gCountryCodeAR,
  _$gCountryCodeAM,
  _$gCountryCodeAW,
  _$gCountryCodeAU,
  _$gCountryCodeAT,
  _$gCountryCodeAZ,
  _$gCountryCodeBS,
  _$gCountryCodeBH,
  _$gCountryCodeBD,
  _$gCountryCodeBB,
  _$gCountryCodeBY,
  _$gCountryCodeBE,
  _$gCountryCodeBZ,
  _$gCountryCodeBJ,
  _$gCountryCodeBM,
  _$gCountryCodeBT,
  _$gCountryCodeBO,
  _$gCountryCodeBQ,
  _$gCountryCodeBA,
  _$gCountryCodeBW,
  _$gCountryCodeBV,
  _$gCountryCodeBR,
  _$gCountryCodeIO,
  _$gCountryCodeBN,
  _$gCountryCodeBG,
  _$gCountryCodeBF,
  _$gCountryCodeBI,
  _$gCountryCodeCV,
  _$gCountryCodeKH,
  _$gCountryCodeCM,
  _$gCountryCodeCA,
  _$gCountryCodeKY,
  _$gCountryCodeCF,
  _$gCountryCodeTD,
  _$gCountryCodeCL,
  _$gCountryCodeCN,
  _$gCountryCodeCX,
  _$gCountryCodeCC,
  _$gCountryCodeCO,
  _$gCountryCodeKM,
  _$gCountryCodeCG,
  _$gCountryCodeCD,
  _$gCountryCodeCK,
  _$gCountryCodeCR,
  _$gCountryCodeCI,
  _$gCountryCodeHR,
  _$gCountryCodeCU,
  _$gCountryCodeCW,
  _$gCountryCodeCY,
  _$gCountryCodeCZ,
  _$gCountryCodeDK,
  _$gCountryCodeDJ,
  _$gCountryCodeDM,
  _$gCountryCodeDO,
  _$gCountryCodeEC,
  _$gCountryCodeEG,
  _$gCountryCodeSV,
  _$gCountryCodeGQ,
  _$gCountryCodeER,
  _$gCountryCodeEE,
  _$gCountryCodeSZ,
  _$gCountryCodeET,
  _$gCountryCodeEU,
  _$gCountryCodeFK,
  _$gCountryCodeFO,
  _$gCountryCodeFJ,
  _$gCountryCodeFI,
  _$gCountryCodeFR,
  _$gCountryCodeGF,
  _$gCountryCodePF,
  _$gCountryCodeTF,
  _$gCountryCodeGA,
  _$gCountryCodeGM,
  _$gCountryCodeGE,
  _$gCountryCodeDE,
  _$gCountryCodeGH,
  _$gCountryCodeGI,
  _$gCountryCodeGR,
  _$gCountryCodeGL,
  _$gCountryCodeGD,
  _$gCountryCodeGP,
  _$gCountryCodeGU,
  _$gCountryCodeGT,
  _$gCountryCodeGG,
  _$gCountryCodeGN,
  _$gCountryCodeGW,
  _$gCountryCodeGY,
  _$gCountryCodeHT,
  _$gCountryCodeHM,
  _$gCountryCodeVA,
  _$gCountryCodeHN,
  _$gCountryCodeHK,
  _$gCountryCodeHU,
  _$gCountryCodeIS,
  _$gCountryCodeIN,
  _$gCountryCodeID,
  _$gCountryCodeIR,
  _$gCountryCodeIQ,
  _$gCountryCodeIE,
  _$gCountryCodeIM,
  _$gCountryCodeIL,
  _$gCountryCodeIT,
  _$gCountryCodeJM,
  _$gCountryCodeJP,
  _$gCountryCodeJE,
  _$gCountryCodeJO,
  _$gCountryCodeKZ,
  _$gCountryCodeKE,
  _$gCountryCodeKI,
  _$gCountryCodeKW,
  _$gCountryCodeKG,
  _$gCountryCodeLA,
  _$gCountryCodeLV,
  _$gCountryCodeLB,
  _$gCountryCodeLS,
  _$gCountryCodeLR,
  _$gCountryCodeLY,
  _$gCountryCodeLI,
  _$gCountryCodeLT,
  _$gCountryCodeLU,
  _$gCountryCodeMO,
  _$gCountryCodeMG,
  _$gCountryCodeMW,
  _$gCountryCodeMY,
  _$gCountryCodeMV,
  _$gCountryCodeML,
  _$gCountryCodeMT,
  _$gCountryCodeMH,
  _$gCountryCodeMQ,
  _$gCountryCodeMR,
  _$gCountryCodeMU,
  _$gCountryCodeYT,
  _$gCountryCodeMX,
  _$gCountryCodeFM,
  _$gCountryCodeMD,
  _$gCountryCodeMC,
  _$gCountryCodeMN,
  _$gCountryCodeME,
  _$gCountryCodeMS,
  _$gCountryCodeMA,
  _$gCountryCodeMZ,
  _$gCountryCodeMM,
  _$gCountryCodeNA,
  _$gCountryCodeNR,
  _$gCountryCodeNP,
  _$gCountryCodeNL,
  _$gCountryCodeNC,
  _$gCountryCodeNZ,
  _$gCountryCodeNI,
  _$gCountryCodeNE,
  _$gCountryCodeNG,
  _$gCountryCodeNU,
  _$gCountryCodeNF,
  _$gCountryCodeKP,
  _$gCountryCodeMK,
  _$gCountryCodeMP,
  _$gCountryCodeNO,
  _$gCountryCodeOM,
  _$gCountryCodePK,
  _$gCountryCodePW,
  _$gCountryCodePS,
  _$gCountryCodePA,
  _$gCountryCodePG,
  _$gCountryCodePY,
  _$gCountryCodePE,
  _$gCountryCodePH,
  _$gCountryCodePN,
  _$gCountryCodePL,
  _$gCountryCodePT,
  _$gCountryCodePR,
  _$gCountryCodeQA,
  _$gCountryCodeRE,
  _$gCountryCodeRO,
  _$gCountryCodeRU,
  _$gCountryCodeRW,
  _$gCountryCodeBL,
  _$gCountryCodeSH,
  _$gCountryCodeKN,
  _$gCountryCodeLC,
  _$gCountryCodeMF,
  _$gCountryCodePM,
  _$gCountryCodeVC,
  _$gCountryCodeWS,
  _$gCountryCodeSM,
  _$gCountryCodeST,
  _$gCountryCodeSA,
  _$gCountryCodeSN,
  _$gCountryCodeRS,
  _$gCountryCodeSC,
  _$gCountryCodeSL,
  _$gCountryCodeSG,
  _$gCountryCodeSX,
  _$gCountryCodeSK,
  _$gCountryCodeSI,
  _$gCountryCodeSB,
  _$gCountryCodeSO,
  _$gCountryCodeZA,
  _$gCountryCodeGS,
  _$gCountryCodeKR,
  _$gCountryCodeSS,
  _$gCountryCodeES,
  _$gCountryCodeLK,
  _$gCountryCodeSD,
  _$gCountryCodeSR,
  _$gCountryCodeSJ,
  _$gCountryCodeSE,
  _$gCountryCodeCH,
  _$gCountryCodeSY,
  _$gCountryCodeTW,
  _$gCountryCodeTJ,
  _$gCountryCodeTZ,
  _$gCountryCodeTH,
  _$gCountryCodeTL,
  _$gCountryCodeTG,
  _$gCountryCodeTK,
  _$gCountryCodeTO,
  _$gCountryCodeTT,
  _$gCountryCodeTN,
  _$gCountryCodeTR,
  _$gCountryCodeTM,
  _$gCountryCodeTC,
  _$gCountryCodeTV,
  _$gCountryCodeUG,
  _$gCountryCodeUA,
  _$gCountryCodeAE,
  _$gCountryCodeGB,
  _$gCountryCodeUM,
  _$gCountryCodeUS,
  _$gCountryCodeUY,
  _$gCountryCodeUZ,
  _$gCountryCodeVU,
  _$gCountryCodeVE,
  _$gCountryCodeVN,
  _$gCountryCodeVG,
  _$gCountryCodeVI,
  _$gCountryCodeWF,
  _$gCountryCodeEH,
  _$gCountryCodeYE,
  _$gCountryCodeZM,
  _$gCountryCodeZW,
]);

const GCustomerEventsEnum _$gCustomerEventsEnumACCOUNT_CREATED =
    const GCustomerEventsEnum._('ACCOUNT_CREATED');
const GCustomerEventsEnum _$gCustomerEventsEnumPASSWORD_RESET_LINK_SENT =
    const GCustomerEventsEnum._('PASSWORD_RESET_LINK_SENT');
const GCustomerEventsEnum _$gCustomerEventsEnumPASSWORD_RESET =
    const GCustomerEventsEnum._('PASSWORD_RESET');
const GCustomerEventsEnum _$gCustomerEventsEnumEMAIL_CHANGED_REQUEST =
    const GCustomerEventsEnum._('EMAIL_CHANGED_REQUEST');
const GCustomerEventsEnum _$gCustomerEventsEnumPASSWORD_CHANGED =
    const GCustomerEventsEnum._('PASSWORD_CHANGED');
const GCustomerEventsEnum _$gCustomerEventsEnumEMAIL_CHANGED =
    const GCustomerEventsEnum._('EMAIL_CHANGED');
const GCustomerEventsEnum _$gCustomerEventsEnumPLACED_ORDER =
    const GCustomerEventsEnum._('PLACED_ORDER');
const GCustomerEventsEnum _$gCustomerEventsEnumNOTE_ADDED_TO_ORDER =
    const GCustomerEventsEnum._('NOTE_ADDED_TO_ORDER');
const GCustomerEventsEnum _$gCustomerEventsEnumDIGITAL_LINK_DOWNLOADED =
    const GCustomerEventsEnum._('DIGITAL_LINK_DOWNLOADED');
const GCustomerEventsEnum _$gCustomerEventsEnumCUSTOMER_DELETED =
    const GCustomerEventsEnum._('CUSTOMER_DELETED');
const GCustomerEventsEnum _$gCustomerEventsEnumNAME_ASSIGNED =
    const GCustomerEventsEnum._('NAME_ASSIGNED');
const GCustomerEventsEnum _$gCustomerEventsEnumEMAIL_ASSIGNED =
    const GCustomerEventsEnum._('EMAIL_ASSIGNED');
const GCustomerEventsEnum _$gCustomerEventsEnumNOTE_ADDED =
    const GCustomerEventsEnum._('NOTE_ADDED');

GCustomerEventsEnum _$gCustomerEventsEnumValueOf(String name) {
  switch (name) {
    case 'ACCOUNT_CREATED':
      return _$gCustomerEventsEnumACCOUNT_CREATED;
    case 'PASSWORD_RESET_LINK_SENT':
      return _$gCustomerEventsEnumPASSWORD_RESET_LINK_SENT;
    case 'PASSWORD_RESET':
      return _$gCustomerEventsEnumPASSWORD_RESET;
    case 'EMAIL_CHANGED_REQUEST':
      return _$gCustomerEventsEnumEMAIL_CHANGED_REQUEST;
    case 'PASSWORD_CHANGED':
      return _$gCustomerEventsEnumPASSWORD_CHANGED;
    case 'EMAIL_CHANGED':
      return _$gCustomerEventsEnumEMAIL_CHANGED;
    case 'PLACED_ORDER':
      return _$gCustomerEventsEnumPLACED_ORDER;
    case 'NOTE_ADDED_TO_ORDER':
      return _$gCustomerEventsEnumNOTE_ADDED_TO_ORDER;
    case 'DIGITAL_LINK_DOWNLOADED':
      return _$gCustomerEventsEnumDIGITAL_LINK_DOWNLOADED;
    case 'CUSTOMER_DELETED':
      return _$gCustomerEventsEnumCUSTOMER_DELETED;
    case 'NAME_ASSIGNED':
      return _$gCustomerEventsEnumNAME_ASSIGNED;
    case 'EMAIL_ASSIGNED':
      return _$gCustomerEventsEnumEMAIL_ASSIGNED;
    case 'NOTE_ADDED':
      return _$gCustomerEventsEnumNOTE_ADDED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCustomerEventsEnum> _$gCustomerEventsEnumValues =
    new BuiltSet<GCustomerEventsEnum>(const <GCustomerEventsEnum>[
  _$gCustomerEventsEnumACCOUNT_CREATED,
  _$gCustomerEventsEnumPASSWORD_RESET_LINK_SENT,
  _$gCustomerEventsEnumPASSWORD_RESET,
  _$gCustomerEventsEnumEMAIL_CHANGED_REQUEST,
  _$gCustomerEventsEnumPASSWORD_CHANGED,
  _$gCustomerEventsEnumEMAIL_CHANGED,
  _$gCustomerEventsEnumPLACED_ORDER,
  _$gCustomerEventsEnumNOTE_ADDED_TO_ORDER,
  _$gCustomerEventsEnumDIGITAL_LINK_DOWNLOADED,
  _$gCustomerEventsEnumCUSTOMER_DELETED,
  _$gCustomerEventsEnumNAME_ASSIGNED,
  _$gCustomerEventsEnumEMAIL_ASSIGNED,
  _$gCustomerEventsEnumNOTE_ADDED,
]);

const GDiscountErrorCode _$gDiscountErrorCodeALREADY_EXISTS =
    const GDiscountErrorCode._('ALREADY_EXISTS');
const GDiscountErrorCode _$gDiscountErrorCodeGRAPHQL_ERROR =
    const GDiscountErrorCode._('GRAPHQL_ERROR');
const GDiscountErrorCode _$gDiscountErrorCodeINVALID =
    const GDiscountErrorCode._('INVALID');
const GDiscountErrorCode _$gDiscountErrorCodeNOT_FOUND =
    const GDiscountErrorCode._('NOT_FOUND');
const GDiscountErrorCode _$gDiscountErrorCodeREQUIRED =
    const GDiscountErrorCode._('REQUIRED');
const GDiscountErrorCode _$gDiscountErrorCodeUNIQUE =
    const GDiscountErrorCode._('UNIQUE');

GDiscountErrorCode _$gDiscountErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gDiscountErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gDiscountErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gDiscountErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gDiscountErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gDiscountErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gDiscountErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDiscountErrorCode> _$gDiscountErrorCodeValues =
    new BuiltSet<GDiscountErrorCode>(const <GDiscountErrorCode>[
  _$gDiscountErrorCodeALREADY_EXISTS,
  _$gDiscountErrorCodeGRAPHQL_ERROR,
  _$gDiscountErrorCodeINVALID,
  _$gDiscountErrorCodeNOT_FOUND,
  _$gDiscountErrorCodeREQUIRED,
  _$gDiscountErrorCodeUNIQUE,
]);

const GDiscountStatusEnum _$gDiscountStatusEnumACTIVE =
    const GDiscountStatusEnum._('ACTIVE');
const GDiscountStatusEnum _$gDiscountStatusEnumEXPIRED =
    const GDiscountStatusEnum._('EXPIRED');
const GDiscountStatusEnum _$gDiscountStatusEnumSCHEDULED =
    const GDiscountStatusEnum._('SCHEDULED');

GDiscountStatusEnum _$gDiscountStatusEnumValueOf(String name) {
  switch (name) {
    case 'ACTIVE':
      return _$gDiscountStatusEnumACTIVE;
    case 'EXPIRED':
      return _$gDiscountStatusEnumEXPIRED;
    case 'SCHEDULED':
      return _$gDiscountStatusEnumSCHEDULED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDiscountStatusEnum> _$gDiscountStatusEnumValues =
    new BuiltSet<GDiscountStatusEnum>(const <GDiscountStatusEnum>[
  _$gDiscountStatusEnumACTIVE,
  _$gDiscountStatusEnumEXPIRED,
  _$gDiscountStatusEnumSCHEDULED,
]);

const GDiscountValueTypeEnum _$gDiscountValueTypeEnumFIXED =
    const GDiscountValueTypeEnum._('FIXED');
const GDiscountValueTypeEnum _$gDiscountValueTypeEnumPERCENTAGE =
    const GDiscountValueTypeEnum._('PERCENTAGE');

GDiscountValueTypeEnum _$gDiscountValueTypeEnumValueOf(String name) {
  switch (name) {
    case 'FIXED':
      return _$gDiscountValueTypeEnumFIXED;
    case 'PERCENTAGE':
      return _$gDiscountValueTypeEnumPERCENTAGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDiscountValueTypeEnum> _$gDiscountValueTypeEnumValues =
    new BuiltSet<GDiscountValueTypeEnum>(const <GDiscountValueTypeEnum>[
  _$gDiscountValueTypeEnumFIXED,
  _$gDiscountValueTypeEnumPERCENTAGE,
]);

const GFulfillmentStatus _$gFulfillmentStatusFULFILLED =
    const GFulfillmentStatus._('FULFILLED');
const GFulfillmentStatus _$gFulfillmentStatusCANCELED =
    const GFulfillmentStatus._('CANCELED');

GFulfillmentStatus _$gFulfillmentStatusValueOf(String name) {
  switch (name) {
    case 'FULFILLED':
      return _$gFulfillmentStatusFULFILLED;
    case 'CANCELED':
      return _$gFulfillmentStatusCANCELED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GFulfillmentStatus> _$gFulfillmentStatusValues =
    new BuiltSet<GFulfillmentStatus>(const <GFulfillmentStatus>[
  _$gFulfillmentStatusFULFILLED,
  _$gFulfillmentStatusCANCELED,
]);

const GGiftCardErrorCode _$gGiftCardErrorCodeALREADY_EXISTS =
    const GGiftCardErrorCode._('ALREADY_EXISTS');
const GGiftCardErrorCode _$gGiftCardErrorCodeGRAPHQL_ERROR =
    const GGiftCardErrorCode._('GRAPHQL_ERROR');
const GGiftCardErrorCode _$gGiftCardErrorCodeINVALID =
    const GGiftCardErrorCode._('INVALID');
const GGiftCardErrorCode _$gGiftCardErrorCodeNOT_FOUND =
    const GGiftCardErrorCode._('NOT_FOUND');
const GGiftCardErrorCode _$gGiftCardErrorCodeREQUIRED =
    const GGiftCardErrorCode._('REQUIRED');
const GGiftCardErrorCode _$gGiftCardErrorCodeUNIQUE =
    const GGiftCardErrorCode._('UNIQUE');

GGiftCardErrorCode _$gGiftCardErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gGiftCardErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gGiftCardErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gGiftCardErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gGiftCardErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gGiftCardErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gGiftCardErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGiftCardErrorCode> _$gGiftCardErrorCodeValues =
    new BuiltSet<GGiftCardErrorCode>(const <GGiftCardErrorCode>[
  _$gGiftCardErrorCodeALREADY_EXISTS,
  _$gGiftCardErrorCodeGRAPHQL_ERROR,
  _$gGiftCardErrorCodeINVALID,
  _$gGiftCardErrorCodeNOT_FOUND,
  _$gGiftCardErrorCodeREQUIRED,
  _$gGiftCardErrorCodeUNIQUE,
]);

const GLanguageCodeEnum _$gLanguageCodeEnumAR = const GLanguageCodeEnum._('AR');
const GLanguageCodeEnum _$gLanguageCodeEnumAZ = const GLanguageCodeEnum._('AZ');
const GLanguageCodeEnum _$gLanguageCodeEnumBG = const GLanguageCodeEnum._('BG');
const GLanguageCodeEnum _$gLanguageCodeEnumBN = const GLanguageCodeEnum._('BN');
const GLanguageCodeEnum _$gLanguageCodeEnumCA = const GLanguageCodeEnum._('CA');
const GLanguageCodeEnum _$gLanguageCodeEnumCS = const GLanguageCodeEnum._('CS');
const GLanguageCodeEnum _$gLanguageCodeEnumDA = const GLanguageCodeEnum._('DA');
const GLanguageCodeEnum _$gLanguageCodeEnumDE = const GLanguageCodeEnum._('DE');
const GLanguageCodeEnum _$gLanguageCodeEnumEL = const GLanguageCodeEnum._('EL');
const GLanguageCodeEnum _$gLanguageCodeEnumEN = const GLanguageCodeEnum._('EN');
const GLanguageCodeEnum _$gLanguageCodeEnumES = const GLanguageCodeEnum._('ES');
const GLanguageCodeEnum _$gLanguageCodeEnumES_CO =
    const GLanguageCodeEnum._('ES_CO');
const GLanguageCodeEnum _$gLanguageCodeEnumET = const GLanguageCodeEnum._('ET');
const GLanguageCodeEnum _$gLanguageCodeEnumFA = const GLanguageCodeEnum._('FA');
const GLanguageCodeEnum _$gLanguageCodeEnumFR = const GLanguageCodeEnum._('FR');
const GLanguageCodeEnum _$gLanguageCodeEnumHI = const GLanguageCodeEnum._('HI');
const GLanguageCodeEnum _$gLanguageCodeEnumHU = const GLanguageCodeEnum._('HU');
const GLanguageCodeEnum _$gLanguageCodeEnumHY = const GLanguageCodeEnum._('HY');
const GLanguageCodeEnum _$gLanguageCodeEnumID = const GLanguageCodeEnum._('ID');
const GLanguageCodeEnum _$gLanguageCodeEnumIS = const GLanguageCodeEnum._('IS');
const GLanguageCodeEnum _$gLanguageCodeEnumIT = const GLanguageCodeEnum._('IT');
const GLanguageCodeEnum _$gLanguageCodeEnumJA = const GLanguageCodeEnum._('JA');
const GLanguageCodeEnum _$gLanguageCodeEnumKO = const GLanguageCodeEnum._('KO');
const GLanguageCodeEnum _$gLanguageCodeEnumLT = const GLanguageCodeEnum._('LT');
const GLanguageCodeEnum _$gLanguageCodeEnumMN = const GLanguageCodeEnum._('MN');
const GLanguageCodeEnum _$gLanguageCodeEnumNB = const GLanguageCodeEnum._('NB');
const GLanguageCodeEnum _$gLanguageCodeEnumNL = const GLanguageCodeEnum._('NL');
const GLanguageCodeEnum _$gLanguageCodeEnumPL = const GLanguageCodeEnum._('PL');
const GLanguageCodeEnum _$gLanguageCodeEnumPT = const GLanguageCodeEnum._('PT');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_BR =
    const GLanguageCodeEnum._('PT_BR');
const GLanguageCodeEnum _$gLanguageCodeEnumRO = const GLanguageCodeEnum._('RO');
const GLanguageCodeEnum _$gLanguageCodeEnumRU = const GLanguageCodeEnum._('RU');
const GLanguageCodeEnum _$gLanguageCodeEnumSK = const GLanguageCodeEnum._('SK');
const GLanguageCodeEnum _$gLanguageCodeEnumSQ = const GLanguageCodeEnum._('SQ');
const GLanguageCodeEnum _$gLanguageCodeEnumSR = const GLanguageCodeEnum._('SR');
const GLanguageCodeEnum _$gLanguageCodeEnumSW = const GLanguageCodeEnum._('SW');
const GLanguageCodeEnum _$gLanguageCodeEnumSV = const GLanguageCodeEnum._('SV');
const GLanguageCodeEnum _$gLanguageCodeEnumTH = const GLanguageCodeEnum._('TH');
const GLanguageCodeEnum _$gLanguageCodeEnumTR = const GLanguageCodeEnum._('TR');
const GLanguageCodeEnum _$gLanguageCodeEnumUK = const GLanguageCodeEnum._('UK');
const GLanguageCodeEnum _$gLanguageCodeEnumVI = const GLanguageCodeEnum._('VI');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANS =
    const GLanguageCodeEnum._('ZH_HANS');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANT =
    const GLanguageCodeEnum._('ZH_HANT');

GLanguageCodeEnum _$gLanguageCodeEnumValueOf(String name) {
  switch (name) {
    case 'AR':
      return _$gLanguageCodeEnumAR;
    case 'AZ':
      return _$gLanguageCodeEnumAZ;
    case 'BG':
      return _$gLanguageCodeEnumBG;
    case 'BN':
      return _$gLanguageCodeEnumBN;
    case 'CA':
      return _$gLanguageCodeEnumCA;
    case 'CS':
      return _$gLanguageCodeEnumCS;
    case 'DA':
      return _$gLanguageCodeEnumDA;
    case 'DE':
      return _$gLanguageCodeEnumDE;
    case 'EL':
      return _$gLanguageCodeEnumEL;
    case 'EN':
      return _$gLanguageCodeEnumEN;
    case 'ES':
      return _$gLanguageCodeEnumES;
    case 'ES_CO':
      return _$gLanguageCodeEnumES_CO;
    case 'ET':
      return _$gLanguageCodeEnumET;
    case 'FA':
      return _$gLanguageCodeEnumFA;
    case 'FR':
      return _$gLanguageCodeEnumFR;
    case 'HI':
      return _$gLanguageCodeEnumHI;
    case 'HU':
      return _$gLanguageCodeEnumHU;
    case 'HY':
      return _$gLanguageCodeEnumHY;
    case 'ID':
      return _$gLanguageCodeEnumID;
    case 'IS':
      return _$gLanguageCodeEnumIS;
    case 'IT':
      return _$gLanguageCodeEnumIT;
    case 'JA':
      return _$gLanguageCodeEnumJA;
    case 'KO':
      return _$gLanguageCodeEnumKO;
    case 'LT':
      return _$gLanguageCodeEnumLT;
    case 'MN':
      return _$gLanguageCodeEnumMN;
    case 'NB':
      return _$gLanguageCodeEnumNB;
    case 'NL':
      return _$gLanguageCodeEnumNL;
    case 'PL':
      return _$gLanguageCodeEnumPL;
    case 'PT':
      return _$gLanguageCodeEnumPT;
    case 'PT_BR':
      return _$gLanguageCodeEnumPT_BR;
    case 'RO':
      return _$gLanguageCodeEnumRO;
    case 'RU':
      return _$gLanguageCodeEnumRU;
    case 'SK':
      return _$gLanguageCodeEnumSK;
    case 'SQ':
      return _$gLanguageCodeEnumSQ;
    case 'SR':
      return _$gLanguageCodeEnumSR;
    case 'SW':
      return _$gLanguageCodeEnumSW;
    case 'SV':
      return _$gLanguageCodeEnumSV;
    case 'TH':
      return _$gLanguageCodeEnumTH;
    case 'TR':
      return _$gLanguageCodeEnumTR;
    case 'UK':
      return _$gLanguageCodeEnumUK;
    case 'VI':
      return _$gLanguageCodeEnumVI;
    case 'ZH_HANS':
      return _$gLanguageCodeEnumZH_HANS;
    case 'ZH_HANT':
      return _$gLanguageCodeEnumZH_HANT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GLanguageCodeEnum> _$gLanguageCodeEnumValues =
    new BuiltSet<GLanguageCodeEnum>(const <GLanguageCodeEnum>[
  _$gLanguageCodeEnumAR,
  _$gLanguageCodeEnumAZ,
  _$gLanguageCodeEnumBG,
  _$gLanguageCodeEnumBN,
  _$gLanguageCodeEnumCA,
  _$gLanguageCodeEnumCS,
  _$gLanguageCodeEnumDA,
  _$gLanguageCodeEnumDE,
  _$gLanguageCodeEnumEL,
  _$gLanguageCodeEnumEN,
  _$gLanguageCodeEnumES,
  _$gLanguageCodeEnumES_CO,
  _$gLanguageCodeEnumET,
  _$gLanguageCodeEnumFA,
  _$gLanguageCodeEnumFR,
  _$gLanguageCodeEnumHI,
  _$gLanguageCodeEnumHU,
  _$gLanguageCodeEnumHY,
  _$gLanguageCodeEnumID,
  _$gLanguageCodeEnumIS,
  _$gLanguageCodeEnumIT,
  _$gLanguageCodeEnumJA,
  _$gLanguageCodeEnumKO,
  _$gLanguageCodeEnumLT,
  _$gLanguageCodeEnumMN,
  _$gLanguageCodeEnumNB,
  _$gLanguageCodeEnumNL,
  _$gLanguageCodeEnumPL,
  _$gLanguageCodeEnumPT,
  _$gLanguageCodeEnumPT_BR,
  _$gLanguageCodeEnumRO,
  _$gLanguageCodeEnumRU,
  _$gLanguageCodeEnumSK,
  _$gLanguageCodeEnumSQ,
  _$gLanguageCodeEnumSR,
  _$gLanguageCodeEnumSW,
  _$gLanguageCodeEnumSV,
  _$gLanguageCodeEnumTH,
  _$gLanguageCodeEnumTR,
  _$gLanguageCodeEnumUK,
  _$gLanguageCodeEnumVI,
  _$gLanguageCodeEnumZH_HANS,
  _$gLanguageCodeEnumZH_HANT,
]);

const GMenuErrorCode _$gMenuErrorCodeCANNOT_ASSIGN_NODE =
    const GMenuErrorCode._('CANNOT_ASSIGN_NODE');
const GMenuErrorCode _$gMenuErrorCodeGRAPHQL_ERROR =
    const GMenuErrorCode._('GRAPHQL_ERROR');
const GMenuErrorCode _$gMenuErrorCodeINVALID =
    const GMenuErrorCode._('INVALID');
const GMenuErrorCode _$gMenuErrorCodeINVALID_MENU_ITEM =
    const GMenuErrorCode._('INVALID_MENU_ITEM');
const GMenuErrorCode _$gMenuErrorCodeNO_MENU_ITEM_PROVIDED =
    const GMenuErrorCode._('NO_MENU_ITEM_PROVIDED');
const GMenuErrorCode _$gMenuErrorCodeNOT_FOUND =
    const GMenuErrorCode._('NOT_FOUND');
const GMenuErrorCode _$gMenuErrorCodeREQUIRED =
    const GMenuErrorCode._('REQUIRED');
const GMenuErrorCode _$gMenuErrorCodeTOO_MANY_MENU_ITEMS =
    const GMenuErrorCode._('TOO_MANY_MENU_ITEMS');
const GMenuErrorCode _$gMenuErrorCodeUNIQUE = const GMenuErrorCode._('UNIQUE');

GMenuErrorCode _$gMenuErrorCodeValueOf(String name) {
  switch (name) {
    case 'CANNOT_ASSIGN_NODE':
      return _$gMenuErrorCodeCANNOT_ASSIGN_NODE;
    case 'GRAPHQL_ERROR':
      return _$gMenuErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gMenuErrorCodeINVALID;
    case 'INVALID_MENU_ITEM':
      return _$gMenuErrorCodeINVALID_MENU_ITEM;
    case 'NO_MENU_ITEM_PROVIDED':
      return _$gMenuErrorCodeNO_MENU_ITEM_PROVIDED;
    case 'NOT_FOUND':
      return _$gMenuErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gMenuErrorCodeREQUIRED;
    case 'TOO_MANY_MENU_ITEMS':
      return _$gMenuErrorCodeTOO_MANY_MENU_ITEMS;
    case 'UNIQUE':
      return _$gMenuErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMenuErrorCode> _$gMenuErrorCodeValues =
    new BuiltSet<GMenuErrorCode>(const <GMenuErrorCode>[
  _$gMenuErrorCodeCANNOT_ASSIGN_NODE,
  _$gMenuErrorCodeGRAPHQL_ERROR,
  _$gMenuErrorCodeINVALID,
  _$gMenuErrorCodeINVALID_MENU_ITEM,
  _$gMenuErrorCodeNO_MENU_ITEM_PROVIDED,
  _$gMenuErrorCodeNOT_FOUND,
  _$gMenuErrorCodeREQUIRED,
  _$gMenuErrorCodeTOO_MANY_MENU_ITEMS,
  _$gMenuErrorCodeUNIQUE,
]);

const GMenuItemsSortField _$gMenuItemsSortFieldNAME =
    const GMenuItemsSortField._('NAME');

GMenuItemsSortField _$gMenuItemsSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gMenuItemsSortFieldNAME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMenuItemsSortField> _$gMenuItemsSortFieldValues =
    new BuiltSet<GMenuItemsSortField>(const <GMenuItemsSortField>[
  _$gMenuItemsSortFieldNAME,
]);

const GMenuSortField _$gMenuSortFieldNAME = const GMenuSortField._('NAME');
const GMenuSortField _$gMenuSortFieldITEMS_COUNT =
    const GMenuSortField._('ITEMS_COUNT');

GMenuSortField _$gMenuSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gMenuSortFieldNAME;
    case 'ITEMS_COUNT':
      return _$gMenuSortFieldITEMS_COUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMenuSortField> _$gMenuSortFieldValues =
    new BuiltSet<GMenuSortField>(const <GMenuSortField>[
  _$gMenuSortFieldNAME,
  _$gMenuSortFieldITEMS_COUNT,
]);

const GMetadataErrorCode _$gMetadataErrorCodeGRAPHQL_ERROR =
    const GMetadataErrorCode._('GRAPHQL_ERROR');
const GMetadataErrorCode _$gMetadataErrorCodeINVALID =
    const GMetadataErrorCode._('INVALID');
const GMetadataErrorCode _$gMetadataErrorCodeNOT_FOUND =
    const GMetadataErrorCode._('NOT_FOUND');

GMetadataErrorCode _$gMetadataErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gMetadataErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gMetadataErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gMetadataErrorCodeNOT_FOUND;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMetadataErrorCode> _$gMetadataErrorCodeValues =
    new BuiltSet<GMetadataErrorCode>(const <GMetadataErrorCode>[
  _$gMetadataErrorCodeGRAPHQL_ERROR,
  _$gMetadataErrorCodeINVALID,
  _$gMetadataErrorCodeNOT_FOUND,
]);

const GNavigationType _$gNavigationTypeMAIN = const GNavigationType._('MAIN');
const GNavigationType _$gNavigationTypeSECONDARY =
    const GNavigationType._('SECONDARY');

GNavigationType _$gNavigationTypeValueOf(String name) {
  switch (name) {
    case 'MAIN':
      return _$gNavigationTypeMAIN;
    case 'SECONDARY':
      return _$gNavigationTypeSECONDARY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GNavigationType> _$gNavigationTypeValues =
    new BuiltSet<GNavigationType>(const <GNavigationType>[
  _$gNavigationTypeMAIN,
  _$gNavigationTypeSECONDARY,
]);

const GOrderAction _$gOrderActionCAPTURE = const GOrderAction._('CAPTURE');
const GOrderAction _$gOrderActionMARK_AS_PAID =
    const GOrderAction._('MARK_AS_PAID');
const GOrderAction _$gOrderActionREFUND = const GOrderAction._('REFUND');
const GOrderAction _$gOrderActionVOID = const GOrderAction._('VOID');

GOrderAction _$gOrderActionValueOf(String name) {
  switch (name) {
    case 'CAPTURE':
      return _$gOrderActionCAPTURE;
    case 'MARK_AS_PAID':
      return _$gOrderActionMARK_AS_PAID;
    case 'REFUND':
      return _$gOrderActionREFUND;
    case 'VOID':
      return _$gOrderActionVOID;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderAction> _$gOrderActionValues =
    new BuiltSet<GOrderAction>(const <GOrderAction>[
  _$gOrderActionCAPTURE,
  _$gOrderActionMARK_AS_PAID,
  _$gOrderActionREFUND,
  _$gOrderActionVOID,
]);

const GOrderDirection _$gOrderDirectionASC = const GOrderDirection._('ASC');
const GOrderDirection _$gOrderDirectionDESC = const GOrderDirection._('DESC');

GOrderDirection _$gOrderDirectionValueOf(String name) {
  switch (name) {
    case 'ASC':
      return _$gOrderDirectionASC;
    case 'DESC':
      return _$gOrderDirectionDESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderDirection> _$gOrderDirectionValues =
    new BuiltSet<GOrderDirection>(const <GOrderDirection>[
  _$gOrderDirectionASC,
  _$gOrderDirectionDESC,
]);

const GOrderErrorCode _$gOrderErrorCodeBILLING_ADDRESS_NOT_SET =
    const GOrderErrorCode._('BILLING_ADDRESS_NOT_SET');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_CANCEL_FULFILLMENT =
    const GOrderErrorCode._('CANNOT_CANCEL_FULFILLMENT');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_CANCEL_ORDER =
    const GOrderErrorCode._('CANNOT_CANCEL_ORDER');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_DELETE =
    const GOrderErrorCode._('CANNOT_DELETE');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_REFUND =
    const GOrderErrorCode._('CANNOT_REFUND');
const GOrderErrorCode _$gOrderErrorCodeCAPTURE_INACTIVE_PAYMENT =
    const GOrderErrorCode._('CAPTURE_INACTIVE_PAYMENT');
const GOrderErrorCode _$gOrderErrorCodeNOT_EDITABLE =
    const GOrderErrorCode._('NOT_EDITABLE');
const GOrderErrorCode _$gOrderErrorCodeFULFILL_ORDER_LINE =
    const GOrderErrorCode._('FULFILL_ORDER_LINE');
const GOrderErrorCode _$gOrderErrorCodeGRAPHQL_ERROR =
    const GOrderErrorCode._('GRAPHQL_ERROR');
const GOrderErrorCode _$gOrderErrorCodeINVALID =
    const GOrderErrorCode._('INVALID');
const GOrderErrorCode _$gOrderErrorCodeNOT_FOUND =
    const GOrderErrorCode._('NOT_FOUND');
const GOrderErrorCode _$gOrderErrorCodeORDER_NO_SHIPPING_ADDRESS =
    const GOrderErrorCode._('ORDER_NO_SHIPPING_ADDRESS');
const GOrderErrorCode _$gOrderErrorCodePAYMENT_ERROR =
    const GOrderErrorCode._('PAYMENT_ERROR');
const GOrderErrorCode _$gOrderErrorCodePAYMENT_MISSING =
    const GOrderErrorCode._('PAYMENT_MISSING');
const GOrderErrorCode _$gOrderErrorCodeREQUIRED =
    const GOrderErrorCode._('REQUIRED');
const GOrderErrorCode _$gOrderErrorCodeSHIPPING_METHOD_NOT_APPLICABLE =
    const GOrderErrorCode._('SHIPPING_METHOD_NOT_APPLICABLE');
const GOrderErrorCode _$gOrderErrorCodeSHIPPING_METHOD_REQUIRED =
    const GOrderErrorCode._('SHIPPING_METHOD_REQUIRED');
const GOrderErrorCode _$gOrderErrorCodeUNIQUE =
    const GOrderErrorCode._('UNIQUE');
const GOrderErrorCode _$gOrderErrorCodeVOID_INACTIVE_PAYMENT =
    const GOrderErrorCode._('VOID_INACTIVE_PAYMENT');
const GOrderErrorCode _$gOrderErrorCodeZERO_QUANTITY =
    const GOrderErrorCode._('ZERO_QUANTITY');
const GOrderErrorCode _$gOrderErrorCodeINSUFFICIENT_STOCK =
    const GOrderErrorCode._('INSUFFICIENT_STOCK');
const GOrderErrorCode _$gOrderErrorCodeDUPLICATED_INPUT_ITEM =
    const GOrderErrorCode._('DUPLICATED_INPUT_ITEM');

GOrderErrorCode _$gOrderErrorCodeValueOf(String name) {
  switch (name) {
    case 'BILLING_ADDRESS_NOT_SET':
      return _$gOrderErrorCodeBILLING_ADDRESS_NOT_SET;
    case 'CANNOT_CANCEL_FULFILLMENT':
      return _$gOrderErrorCodeCANNOT_CANCEL_FULFILLMENT;
    case 'CANNOT_CANCEL_ORDER':
      return _$gOrderErrorCodeCANNOT_CANCEL_ORDER;
    case 'CANNOT_DELETE':
      return _$gOrderErrorCodeCANNOT_DELETE;
    case 'CANNOT_REFUND':
      return _$gOrderErrorCodeCANNOT_REFUND;
    case 'CAPTURE_INACTIVE_PAYMENT':
      return _$gOrderErrorCodeCAPTURE_INACTIVE_PAYMENT;
    case 'NOT_EDITABLE':
      return _$gOrderErrorCodeNOT_EDITABLE;
    case 'FULFILL_ORDER_LINE':
      return _$gOrderErrorCodeFULFILL_ORDER_LINE;
    case 'GRAPHQL_ERROR':
      return _$gOrderErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gOrderErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gOrderErrorCodeNOT_FOUND;
    case 'ORDER_NO_SHIPPING_ADDRESS':
      return _$gOrderErrorCodeORDER_NO_SHIPPING_ADDRESS;
    case 'PAYMENT_ERROR':
      return _$gOrderErrorCodePAYMENT_ERROR;
    case 'PAYMENT_MISSING':
      return _$gOrderErrorCodePAYMENT_MISSING;
    case 'REQUIRED':
      return _$gOrderErrorCodeREQUIRED;
    case 'SHIPPING_METHOD_NOT_APPLICABLE':
      return _$gOrderErrorCodeSHIPPING_METHOD_NOT_APPLICABLE;
    case 'SHIPPING_METHOD_REQUIRED':
      return _$gOrderErrorCodeSHIPPING_METHOD_REQUIRED;
    case 'UNIQUE':
      return _$gOrderErrorCodeUNIQUE;
    case 'VOID_INACTIVE_PAYMENT':
      return _$gOrderErrorCodeVOID_INACTIVE_PAYMENT;
    case 'ZERO_QUANTITY':
      return _$gOrderErrorCodeZERO_QUANTITY;
    case 'INSUFFICIENT_STOCK':
      return _$gOrderErrorCodeINSUFFICIENT_STOCK;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gOrderErrorCodeDUPLICATED_INPUT_ITEM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderErrorCode> _$gOrderErrorCodeValues =
    new BuiltSet<GOrderErrorCode>(const <GOrderErrorCode>[
  _$gOrderErrorCodeBILLING_ADDRESS_NOT_SET,
  _$gOrderErrorCodeCANNOT_CANCEL_FULFILLMENT,
  _$gOrderErrorCodeCANNOT_CANCEL_ORDER,
  _$gOrderErrorCodeCANNOT_DELETE,
  _$gOrderErrorCodeCANNOT_REFUND,
  _$gOrderErrorCodeCAPTURE_INACTIVE_PAYMENT,
  _$gOrderErrorCodeNOT_EDITABLE,
  _$gOrderErrorCodeFULFILL_ORDER_LINE,
  _$gOrderErrorCodeGRAPHQL_ERROR,
  _$gOrderErrorCodeINVALID,
  _$gOrderErrorCodeNOT_FOUND,
  _$gOrderErrorCodeORDER_NO_SHIPPING_ADDRESS,
  _$gOrderErrorCodePAYMENT_ERROR,
  _$gOrderErrorCodePAYMENT_MISSING,
  _$gOrderErrorCodeREQUIRED,
  _$gOrderErrorCodeSHIPPING_METHOD_NOT_APPLICABLE,
  _$gOrderErrorCodeSHIPPING_METHOD_REQUIRED,
  _$gOrderErrorCodeUNIQUE,
  _$gOrderErrorCodeVOID_INACTIVE_PAYMENT,
  _$gOrderErrorCodeZERO_QUANTITY,
  _$gOrderErrorCodeINSUFFICIENT_STOCK,
  _$gOrderErrorCodeDUPLICATED_INPUT_ITEM,
]);

const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumPAYMENT_CONFIRMATION =
    const GOrderEventsEmailsEnum._('PAYMENT_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumSHIPPING_CONFIRMATION =
    const GOrderEventsEmailsEnum._('SHIPPING_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumTRACKING_UPDATED =
    const GOrderEventsEmailsEnum._('TRACKING_UPDATED');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumORDER_CONFIRMATION =
    const GOrderEventsEmailsEnum._('ORDER_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumFULFILLMENT_CONFIRMATION =
    const GOrderEventsEmailsEnum._('FULFILLMENT_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumDIGITAL_LINKS =
    const GOrderEventsEmailsEnum._('DIGITAL_LINKS');

GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumValueOf(String name) {
  switch (name) {
    case 'PAYMENT_CONFIRMATION':
      return _$gOrderEventsEmailsEnumPAYMENT_CONFIRMATION;
    case 'SHIPPING_CONFIRMATION':
      return _$gOrderEventsEmailsEnumSHIPPING_CONFIRMATION;
    case 'TRACKING_UPDATED':
      return _$gOrderEventsEmailsEnumTRACKING_UPDATED;
    case 'ORDER_CONFIRMATION':
      return _$gOrderEventsEmailsEnumORDER_CONFIRMATION;
    case 'FULFILLMENT_CONFIRMATION':
      return _$gOrderEventsEmailsEnumFULFILLMENT_CONFIRMATION;
    case 'DIGITAL_LINKS':
      return _$gOrderEventsEmailsEnumDIGITAL_LINKS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderEventsEmailsEnum> _$gOrderEventsEmailsEnumValues =
    new BuiltSet<GOrderEventsEmailsEnum>(const <GOrderEventsEmailsEnum>[
  _$gOrderEventsEmailsEnumPAYMENT_CONFIRMATION,
  _$gOrderEventsEmailsEnumSHIPPING_CONFIRMATION,
  _$gOrderEventsEmailsEnumTRACKING_UPDATED,
  _$gOrderEventsEmailsEnumORDER_CONFIRMATION,
  _$gOrderEventsEmailsEnumFULFILLMENT_CONFIRMATION,
  _$gOrderEventsEmailsEnumDIGITAL_LINKS,
]);

const GOrderEventsEnum _$gOrderEventsEnumDRAFT_CREATED =
    const GOrderEventsEnum._('DRAFT_CREATED');
const GOrderEventsEnum _$gOrderEventsEnumDRAFT_ADDED_PRODUCTS =
    const GOrderEventsEnum._('DRAFT_ADDED_PRODUCTS');
const GOrderEventsEnum _$gOrderEventsEnumDRAFT_REMOVED_PRODUCTS =
    const GOrderEventsEnum._('DRAFT_REMOVED_PRODUCTS');
const GOrderEventsEnum _$gOrderEventsEnumPLACED =
    const GOrderEventsEnum._('PLACED');
const GOrderEventsEnum _$gOrderEventsEnumPLACED_FROM_DRAFT =
    const GOrderEventsEnum._('PLACED_FROM_DRAFT');
const GOrderEventsEnum _$gOrderEventsEnumOVERSOLD_ITEMS =
    const GOrderEventsEnum._('OVERSOLD_ITEMS');
const GOrderEventsEnum _$gOrderEventsEnumCANCELED =
    const GOrderEventsEnum._('CANCELED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_MARKED_AS_PAID =
    const GOrderEventsEnum._('ORDER_MARKED_AS_PAID');
const GOrderEventsEnum _$gOrderEventsEnumORDER_FULLY_PAID =
    const GOrderEventsEnum._('ORDER_FULLY_PAID');
const GOrderEventsEnum _$gOrderEventsEnumUPDATED_ADDRESS =
    const GOrderEventsEnum._('UPDATED_ADDRESS');
const GOrderEventsEnum _$gOrderEventsEnumEMAIL_SENT =
    const GOrderEventsEnum._('EMAIL_SENT');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_CAPTURED =
    const GOrderEventsEnum._('PAYMENT_CAPTURED');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_REFUNDED =
    const GOrderEventsEnum._('PAYMENT_REFUNDED');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_VOIDED =
    const GOrderEventsEnum._('PAYMENT_VOIDED');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_FAILED =
    const GOrderEventsEnum._('PAYMENT_FAILED');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_CANCELED =
    const GOrderEventsEnum._('FULFILLMENT_CANCELED');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_RESTOCKED_ITEMS =
    const GOrderEventsEnum._('FULFILLMENT_RESTOCKED_ITEMS');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_FULFILLED_ITEMS =
    const GOrderEventsEnum._('FULFILLMENT_FULFILLED_ITEMS');
const GOrderEventsEnum _$gOrderEventsEnumTRACKING_UPDATED =
    const GOrderEventsEnum._('TRACKING_UPDATED');
const GOrderEventsEnum _$gOrderEventsEnumNOTE_ADDED =
    const GOrderEventsEnum._('NOTE_ADDED');
const GOrderEventsEnum _$gOrderEventsEnumOTHER =
    const GOrderEventsEnum._('OTHER');

GOrderEventsEnum _$gOrderEventsEnumValueOf(String name) {
  switch (name) {
    case 'DRAFT_CREATED':
      return _$gOrderEventsEnumDRAFT_CREATED;
    case 'DRAFT_ADDED_PRODUCTS':
      return _$gOrderEventsEnumDRAFT_ADDED_PRODUCTS;
    case 'DRAFT_REMOVED_PRODUCTS':
      return _$gOrderEventsEnumDRAFT_REMOVED_PRODUCTS;
    case 'PLACED':
      return _$gOrderEventsEnumPLACED;
    case 'PLACED_FROM_DRAFT':
      return _$gOrderEventsEnumPLACED_FROM_DRAFT;
    case 'OVERSOLD_ITEMS':
      return _$gOrderEventsEnumOVERSOLD_ITEMS;
    case 'CANCELED':
      return _$gOrderEventsEnumCANCELED;
    case 'ORDER_MARKED_AS_PAID':
      return _$gOrderEventsEnumORDER_MARKED_AS_PAID;
    case 'ORDER_FULLY_PAID':
      return _$gOrderEventsEnumORDER_FULLY_PAID;
    case 'UPDATED_ADDRESS':
      return _$gOrderEventsEnumUPDATED_ADDRESS;
    case 'EMAIL_SENT':
      return _$gOrderEventsEnumEMAIL_SENT;
    case 'PAYMENT_CAPTURED':
      return _$gOrderEventsEnumPAYMENT_CAPTURED;
    case 'PAYMENT_REFUNDED':
      return _$gOrderEventsEnumPAYMENT_REFUNDED;
    case 'PAYMENT_VOIDED':
      return _$gOrderEventsEnumPAYMENT_VOIDED;
    case 'PAYMENT_FAILED':
      return _$gOrderEventsEnumPAYMENT_FAILED;
    case 'FULFILLMENT_CANCELED':
      return _$gOrderEventsEnumFULFILLMENT_CANCELED;
    case 'FULFILLMENT_RESTOCKED_ITEMS':
      return _$gOrderEventsEnumFULFILLMENT_RESTOCKED_ITEMS;
    case 'FULFILLMENT_FULFILLED_ITEMS':
      return _$gOrderEventsEnumFULFILLMENT_FULFILLED_ITEMS;
    case 'TRACKING_UPDATED':
      return _$gOrderEventsEnumTRACKING_UPDATED;
    case 'NOTE_ADDED':
      return _$gOrderEventsEnumNOTE_ADDED;
    case 'OTHER':
      return _$gOrderEventsEnumOTHER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderEventsEnum> _$gOrderEventsEnumValues =
    new BuiltSet<GOrderEventsEnum>(const <GOrderEventsEnum>[
  _$gOrderEventsEnumDRAFT_CREATED,
  _$gOrderEventsEnumDRAFT_ADDED_PRODUCTS,
  _$gOrderEventsEnumDRAFT_REMOVED_PRODUCTS,
  _$gOrderEventsEnumPLACED,
  _$gOrderEventsEnumPLACED_FROM_DRAFT,
  _$gOrderEventsEnumOVERSOLD_ITEMS,
  _$gOrderEventsEnumCANCELED,
  _$gOrderEventsEnumORDER_MARKED_AS_PAID,
  _$gOrderEventsEnumORDER_FULLY_PAID,
  _$gOrderEventsEnumUPDATED_ADDRESS,
  _$gOrderEventsEnumEMAIL_SENT,
  _$gOrderEventsEnumPAYMENT_CAPTURED,
  _$gOrderEventsEnumPAYMENT_REFUNDED,
  _$gOrderEventsEnumPAYMENT_VOIDED,
  _$gOrderEventsEnumPAYMENT_FAILED,
  _$gOrderEventsEnumFULFILLMENT_CANCELED,
  _$gOrderEventsEnumFULFILLMENT_RESTOCKED_ITEMS,
  _$gOrderEventsEnumFULFILLMENT_FULFILLED_ITEMS,
  _$gOrderEventsEnumTRACKING_UPDATED,
  _$gOrderEventsEnumNOTE_ADDED,
  _$gOrderEventsEnumOTHER,
]);

const GOrderSortField _$gOrderSortFieldNUMBER =
    const GOrderSortField._('NUMBER');
const GOrderSortField _$gOrderSortFieldCREATION_DATE =
    const GOrderSortField._('CREATION_DATE');
const GOrderSortField _$gOrderSortFieldCUSTOMER =
    const GOrderSortField._('CUSTOMER');
const GOrderSortField _$gOrderSortFieldPAYMENT =
    const GOrderSortField._('PAYMENT');
const GOrderSortField _$gOrderSortFieldFULFILLMENT_STATUS =
    const GOrderSortField._('FULFILLMENT_STATUS');
const GOrderSortField _$gOrderSortFieldTOTAL = const GOrderSortField._('TOTAL');

GOrderSortField _$gOrderSortFieldValueOf(String name) {
  switch (name) {
    case 'NUMBER':
      return _$gOrderSortFieldNUMBER;
    case 'CREATION_DATE':
      return _$gOrderSortFieldCREATION_DATE;
    case 'CUSTOMER':
      return _$gOrderSortFieldCUSTOMER;
    case 'PAYMENT':
      return _$gOrderSortFieldPAYMENT;
    case 'FULFILLMENT_STATUS':
      return _$gOrderSortFieldFULFILLMENT_STATUS;
    case 'TOTAL':
      return _$gOrderSortFieldTOTAL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderSortField> _$gOrderSortFieldValues =
    new BuiltSet<GOrderSortField>(const <GOrderSortField>[
  _$gOrderSortFieldNUMBER,
  _$gOrderSortFieldCREATION_DATE,
  _$gOrderSortFieldCUSTOMER,
  _$gOrderSortFieldPAYMENT,
  _$gOrderSortFieldFULFILLMENT_STATUS,
  _$gOrderSortFieldTOTAL,
]);

const GOrderStatus _$gOrderStatusDRAFT = const GOrderStatus._('DRAFT');
const GOrderStatus _$gOrderStatusUNFULFILLED =
    const GOrderStatus._('UNFULFILLED');
const GOrderStatus _$gOrderStatusPARTIALLY_FULFILLED =
    const GOrderStatus._('PARTIALLY_FULFILLED');
const GOrderStatus _$gOrderStatusFULFILLED = const GOrderStatus._('FULFILLED');
const GOrderStatus _$gOrderStatusCANCELED = const GOrderStatus._('CANCELED');

GOrderStatus _$gOrderStatusValueOf(String name) {
  switch (name) {
    case 'DRAFT':
      return _$gOrderStatusDRAFT;
    case 'UNFULFILLED':
      return _$gOrderStatusUNFULFILLED;
    case 'PARTIALLY_FULFILLED':
      return _$gOrderStatusPARTIALLY_FULFILLED;
    case 'FULFILLED':
      return _$gOrderStatusFULFILLED;
    case 'CANCELED':
      return _$gOrderStatusCANCELED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderStatus> _$gOrderStatusValues =
    new BuiltSet<GOrderStatus>(const <GOrderStatus>[
  _$gOrderStatusDRAFT,
  _$gOrderStatusUNFULFILLED,
  _$gOrderStatusPARTIALLY_FULFILLED,
  _$gOrderStatusFULFILLED,
  _$gOrderStatusCANCELED,
]);

const GOrderStatusFilter _$gOrderStatusFilterREADY_TO_FULFILL =
    const GOrderStatusFilter._('READY_TO_FULFILL');
const GOrderStatusFilter _$gOrderStatusFilterREADY_TO_CAPTURE =
    const GOrderStatusFilter._('READY_TO_CAPTURE');
const GOrderStatusFilter _$gOrderStatusFilterUNFULFILLED =
    const GOrderStatusFilter._('UNFULFILLED');
const GOrderStatusFilter _$gOrderStatusFilterPARTIALLY_FULFILLED =
    const GOrderStatusFilter._('PARTIALLY_FULFILLED');
const GOrderStatusFilter _$gOrderStatusFilterFULFILLED =
    const GOrderStatusFilter._('FULFILLED');
const GOrderStatusFilter _$gOrderStatusFilterCANCELED =
    const GOrderStatusFilter._('CANCELED');

GOrderStatusFilter _$gOrderStatusFilterValueOf(String name) {
  switch (name) {
    case 'READY_TO_FULFILL':
      return _$gOrderStatusFilterREADY_TO_FULFILL;
    case 'READY_TO_CAPTURE':
      return _$gOrderStatusFilterREADY_TO_CAPTURE;
    case 'UNFULFILLED':
      return _$gOrderStatusFilterUNFULFILLED;
    case 'PARTIALLY_FULFILLED':
      return _$gOrderStatusFilterPARTIALLY_FULFILLED;
    case 'FULFILLED':
      return _$gOrderStatusFilterFULFILLED;
    case 'CANCELED':
      return _$gOrderStatusFilterCANCELED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderStatusFilter> _$gOrderStatusFilterValues =
    new BuiltSet<GOrderStatusFilter>(const <GOrderStatusFilter>[
  _$gOrderStatusFilterREADY_TO_FULFILL,
  _$gOrderStatusFilterREADY_TO_CAPTURE,
  _$gOrderStatusFilterUNFULFILLED,
  _$gOrderStatusFilterPARTIALLY_FULFILLED,
  _$gOrderStatusFilterFULFILLED,
  _$gOrderStatusFilterCANCELED,
]);

const GPageErrorCode _$gPageErrorCodeGRAPHQL_ERROR =
    const GPageErrorCode._('GRAPHQL_ERROR');
const GPageErrorCode _$gPageErrorCodeINVALID =
    const GPageErrorCode._('INVALID');
const GPageErrorCode _$gPageErrorCodeNOT_FOUND =
    const GPageErrorCode._('NOT_FOUND');
const GPageErrorCode _$gPageErrorCodeREQUIRED =
    const GPageErrorCode._('REQUIRED');
const GPageErrorCode _$gPageErrorCodeUNIQUE = const GPageErrorCode._('UNIQUE');

GPageErrorCode _$gPageErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gPageErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gPageErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gPageErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gPageErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPageErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPageErrorCode> _$gPageErrorCodeValues =
    new BuiltSet<GPageErrorCode>(const <GPageErrorCode>[
  _$gPageErrorCodeGRAPHQL_ERROR,
  _$gPageErrorCodeINVALID,
  _$gPageErrorCodeNOT_FOUND,
  _$gPageErrorCodeREQUIRED,
  _$gPageErrorCodeUNIQUE,
]);

const GPageSortField _$gPageSortFieldTITLE = const GPageSortField._('TITLE');
const GPageSortField _$gPageSortFieldSLUG = const GPageSortField._('SLUG');
const GPageSortField _$gPageSortFieldVISIBILITY =
    const GPageSortField._('VISIBILITY');
const GPageSortField _$gPageSortFieldCREATION_DATE =
    const GPageSortField._('CREATION_DATE');
const GPageSortField _$gPageSortFieldPUBLICATION_DATE =
    const GPageSortField._('PUBLICATION_DATE');

GPageSortField _$gPageSortFieldValueOf(String name) {
  switch (name) {
    case 'TITLE':
      return _$gPageSortFieldTITLE;
    case 'SLUG':
      return _$gPageSortFieldSLUG;
    case 'VISIBILITY':
      return _$gPageSortFieldVISIBILITY;
    case 'CREATION_DATE':
      return _$gPageSortFieldCREATION_DATE;
    case 'PUBLICATION_DATE':
      return _$gPageSortFieldPUBLICATION_DATE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPageSortField> _$gPageSortFieldValues =
    new BuiltSet<GPageSortField>(const <GPageSortField>[
  _$gPageSortFieldTITLE,
  _$gPageSortFieldSLUG,
  _$gPageSortFieldVISIBILITY,
  _$gPageSortFieldCREATION_DATE,
  _$gPageSortFieldPUBLICATION_DATE,
]);

const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumNOT_CHARGED =
    const GPaymentChargeStatusEnum._('NOT_CHARGED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumPARTIALLY_CHARGED =
    const GPaymentChargeStatusEnum._('PARTIALLY_CHARGED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumFULLY_CHARGED =
    const GPaymentChargeStatusEnum._('FULLY_CHARGED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumPARTIALLY_REFUNDED =
    const GPaymentChargeStatusEnum._('PARTIALLY_REFUNDED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumFULLY_REFUNDED =
    const GPaymentChargeStatusEnum._('FULLY_REFUNDED');

GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumValueOf(String name) {
  switch (name) {
    case 'NOT_CHARGED':
      return _$gPaymentChargeStatusEnumNOT_CHARGED;
    case 'PARTIALLY_CHARGED':
      return _$gPaymentChargeStatusEnumPARTIALLY_CHARGED;
    case 'FULLY_CHARGED':
      return _$gPaymentChargeStatusEnumFULLY_CHARGED;
    case 'PARTIALLY_REFUNDED':
      return _$gPaymentChargeStatusEnumPARTIALLY_REFUNDED;
    case 'FULLY_REFUNDED':
      return _$gPaymentChargeStatusEnumFULLY_REFUNDED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPaymentChargeStatusEnum> _$gPaymentChargeStatusEnumValues =
    new BuiltSet<GPaymentChargeStatusEnum>(const <GPaymentChargeStatusEnum>[
  _$gPaymentChargeStatusEnumNOT_CHARGED,
  _$gPaymentChargeStatusEnumPARTIALLY_CHARGED,
  _$gPaymentChargeStatusEnumFULLY_CHARGED,
  _$gPaymentChargeStatusEnumPARTIALLY_REFUNDED,
  _$gPaymentChargeStatusEnumFULLY_REFUNDED,
]);

const GPaymentErrorCode _$gPaymentErrorCodeBILLING_ADDRESS_NOT_SET =
    const GPaymentErrorCode._('BILLING_ADDRESS_NOT_SET');
const GPaymentErrorCode _$gPaymentErrorCodeGRAPHQL_ERROR =
    const GPaymentErrorCode._('GRAPHQL_ERROR');
const GPaymentErrorCode _$gPaymentErrorCodeINVALID =
    const GPaymentErrorCode._('INVALID');
const GPaymentErrorCode _$gPaymentErrorCodeNOT_FOUND =
    const GPaymentErrorCode._('NOT_FOUND');
const GPaymentErrorCode _$gPaymentErrorCodePARTIAL_PAYMENT_NOT_ALLOWED =
    const GPaymentErrorCode._('PARTIAL_PAYMENT_NOT_ALLOWED');
const GPaymentErrorCode _$gPaymentErrorCodePAYMENT_ERROR =
    const GPaymentErrorCode._('PAYMENT_ERROR');
const GPaymentErrorCode _$gPaymentErrorCodeREQUIRED =
    const GPaymentErrorCode._('REQUIRED');
const GPaymentErrorCode _$gPaymentErrorCodeUNIQUE =
    const GPaymentErrorCode._('UNIQUE');

GPaymentErrorCode _$gPaymentErrorCodeValueOf(String name) {
  switch (name) {
    case 'BILLING_ADDRESS_NOT_SET':
      return _$gPaymentErrorCodeBILLING_ADDRESS_NOT_SET;
    case 'GRAPHQL_ERROR':
      return _$gPaymentErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gPaymentErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gPaymentErrorCodeNOT_FOUND;
    case 'PARTIAL_PAYMENT_NOT_ALLOWED':
      return _$gPaymentErrorCodePARTIAL_PAYMENT_NOT_ALLOWED;
    case 'PAYMENT_ERROR':
      return _$gPaymentErrorCodePAYMENT_ERROR;
    case 'REQUIRED':
      return _$gPaymentErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPaymentErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPaymentErrorCode> _$gPaymentErrorCodeValues =
    new BuiltSet<GPaymentErrorCode>(const <GPaymentErrorCode>[
  _$gPaymentErrorCodeBILLING_ADDRESS_NOT_SET,
  _$gPaymentErrorCodeGRAPHQL_ERROR,
  _$gPaymentErrorCodeINVALID,
  _$gPaymentErrorCodeNOT_FOUND,
  _$gPaymentErrorCodePARTIAL_PAYMENT_NOT_ALLOWED,
  _$gPaymentErrorCodePAYMENT_ERROR,
  _$gPaymentErrorCodeREQUIRED,
  _$gPaymentErrorCodeUNIQUE,
]);

const GPermissionEnum _$gPermissionEnumMANAGE_USERS =
    const GPermissionEnum._('MANAGE_USERS');
const GPermissionEnum _$gPermissionEnumMANAGE_STAFF =
    const GPermissionEnum._('MANAGE_STAFF');
const GPermissionEnum _$gPermissionEnumMANAGE_SERVICE_ACCOUNTS =
    const GPermissionEnum._('MANAGE_SERVICE_ACCOUNTS');
const GPermissionEnum _$gPermissionEnumMANAGE_APPS =
    const GPermissionEnum._('MANAGE_APPS');
const GPermissionEnum _$gPermissionEnumMANAGE_DISCOUNTS =
    const GPermissionEnum._('MANAGE_DISCOUNTS');
const GPermissionEnum _$gPermissionEnumMANAGE_PLUGINS =
    const GPermissionEnum._('MANAGE_PLUGINS');
const GPermissionEnum _$gPermissionEnumMANAGE_GIFT_CARD =
    const GPermissionEnum._('MANAGE_GIFT_CARD');
const GPermissionEnum _$gPermissionEnumMANAGE_MENUS =
    const GPermissionEnum._('MANAGE_MENUS');
const GPermissionEnum _$gPermissionEnumMANAGE_ORDERS =
    const GPermissionEnum._('MANAGE_ORDERS');
const GPermissionEnum _$gPermissionEnumMANAGE_PAGES =
    const GPermissionEnum._('MANAGE_PAGES');
const GPermissionEnum _$gPermissionEnumMANAGE_PRODUCTS =
    const GPermissionEnum._('MANAGE_PRODUCTS');
const GPermissionEnum _$gPermissionEnumMANAGE_SHIPPING =
    const GPermissionEnum._('MANAGE_SHIPPING');
const GPermissionEnum _$gPermissionEnumMANAGE_SETTINGS =
    const GPermissionEnum._('MANAGE_SETTINGS');
const GPermissionEnum _$gPermissionEnumMANAGE_TRANSLATIONS =
    const GPermissionEnum._('MANAGE_TRANSLATIONS');
const GPermissionEnum _$gPermissionEnumMANAGE_WEBHOOKS =
    const GPermissionEnum._('MANAGE_WEBHOOKS');
const GPermissionEnum _$gPermissionEnumMANAGE_CHECKOUTS =
    const GPermissionEnum._('MANAGE_CHECKOUTS');

GPermissionEnum _$gPermissionEnumValueOf(String name) {
  switch (name) {
    case 'MANAGE_USERS':
      return _$gPermissionEnumMANAGE_USERS;
    case 'MANAGE_STAFF':
      return _$gPermissionEnumMANAGE_STAFF;
    case 'MANAGE_SERVICE_ACCOUNTS':
      return _$gPermissionEnumMANAGE_SERVICE_ACCOUNTS;
    case 'MANAGE_APPS':
      return _$gPermissionEnumMANAGE_APPS;
    case 'MANAGE_DISCOUNTS':
      return _$gPermissionEnumMANAGE_DISCOUNTS;
    case 'MANAGE_PLUGINS':
      return _$gPermissionEnumMANAGE_PLUGINS;
    case 'MANAGE_GIFT_CARD':
      return _$gPermissionEnumMANAGE_GIFT_CARD;
    case 'MANAGE_MENUS':
      return _$gPermissionEnumMANAGE_MENUS;
    case 'MANAGE_ORDERS':
      return _$gPermissionEnumMANAGE_ORDERS;
    case 'MANAGE_PAGES':
      return _$gPermissionEnumMANAGE_PAGES;
    case 'MANAGE_PRODUCTS':
      return _$gPermissionEnumMANAGE_PRODUCTS;
    case 'MANAGE_SHIPPING':
      return _$gPermissionEnumMANAGE_SHIPPING;
    case 'MANAGE_SETTINGS':
      return _$gPermissionEnumMANAGE_SETTINGS;
    case 'MANAGE_TRANSLATIONS':
      return _$gPermissionEnumMANAGE_TRANSLATIONS;
    case 'MANAGE_WEBHOOKS':
      return _$gPermissionEnumMANAGE_WEBHOOKS;
    case 'MANAGE_CHECKOUTS':
      return _$gPermissionEnumMANAGE_CHECKOUTS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPermissionEnum> _$gPermissionEnumValues =
    new BuiltSet<GPermissionEnum>(const <GPermissionEnum>[
  _$gPermissionEnumMANAGE_USERS,
  _$gPermissionEnumMANAGE_STAFF,
  _$gPermissionEnumMANAGE_SERVICE_ACCOUNTS,
  _$gPermissionEnumMANAGE_APPS,
  _$gPermissionEnumMANAGE_DISCOUNTS,
  _$gPermissionEnumMANAGE_PLUGINS,
  _$gPermissionEnumMANAGE_GIFT_CARD,
  _$gPermissionEnumMANAGE_MENUS,
  _$gPermissionEnumMANAGE_ORDERS,
  _$gPermissionEnumMANAGE_PAGES,
  _$gPermissionEnumMANAGE_PRODUCTS,
  _$gPermissionEnumMANAGE_SHIPPING,
  _$gPermissionEnumMANAGE_SETTINGS,
  _$gPermissionEnumMANAGE_TRANSLATIONS,
  _$gPermissionEnumMANAGE_WEBHOOKS,
  _$gPermissionEnumMANAGE_CHECKOUTS,
]);

const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeASSIGN_NON_STAFF_MEMBER =
    const GPermissionGroupErrorCode._('ASSIGN_NON_STAFF_MEMBER');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeDUPLICATED_INPUT_ITEM =
    const GPermissionGroupErrorCode._('DUPLICATED_INPUT_ITEM');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeCANNOT_REMOVE_FROM_LAST_GROUP =
    const GPermissionGroupErrorCode._('CANNOT_REMOVE_FROM_LAST_GROUP');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION =
    const GPermissionGroupErrorCode._('LEFT_NOT_MANAGEABLE_PERMISSION');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeOUT_OF_SCOPE_PERMISSION =
    const GPermissionGroupErrorCode._('OUT_OF_SCOPE_PERMISSION');
const GPermissionGroupErrorCode _$gPermissionGroupErrorCodeOUT_OF_SCOPE_USER =
    const GPermissionGroupErrorCode._('OUT_OF_SCOPE_USER');
const GPermissionGroupErrorCode _$gPermissionGroupErrorCodeREQUIRED =
    const GPermissionGroupErrorCode._('REQUIRED');
const GPermissionGroupErrorCode _$gPermissionGroupErrorCodeUNIQUE =
    const GPermissionGroupErrorCode._('UNIQUE');

GPermissionGroupErrorCode _$gPermissionGroupErrorCodeValueOf(String name) {
  switch (name) {
    case 'ASSIGN_NON_STAFF_MEMBER':
      return _$gPermissionGroupErrorCodeASSIGN_NON_STAFF_MEMBER;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gPermissionGroupErrorCodeDUPLICATED_INPUT_ITEM;
    case 'CANNOT_REMOVE_FROM_LAST_GROUP':
      return _$gPermissionGroupErrorCodeCANNOT_REMOVE_FROM_LAST_GROUP;
    case 'LEFT_NOT_MANAGEABLE_PERMISSION':
      return _$gPermissionGroupErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION;
    case 'OUT_OF_SCOPE_PERMISSION':
      return _$gPermissionGroupErrorCodeOUT_OF_SCOPE_PERMISSION;
    case 'OUT_OF_SCOPE_USER':
      return _$gPermissionGroupErrorCodeOUT_OF_SCOPE_USER;
    case 'REQUIRED':
      return _$gPermissionGroupErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPermissionGroupErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPermissionGroupErrorCode> _$gPermissionGroupErrorCodeValues =
    new BuiltSet<GPermissionGroupErrorCode>(const <GPermissionGroupErrorCode>[
  _$gPermissionGroupErrorCodeASSIGN_NON_STAFF_MEMBER,
  _$gPermissionGroupErrorCodeDUPLICATED_INPUT_ITEM,
  _$gPermissionGroupErrorCodeCANNOT_REMOVE_FROM_LAST_GROUP,
  _$gPermissionGroupErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION,
  _$gPermissionGroupErrorCodeOUT_OF_SCOPE_PERMISSION,
  _$gPermissionGroupErrorCodeOUT_OF_SCOPE_USER,
  _$gPermissionGroupErrorCodeREQUIRED,
  _$gPermissionGroupErrorCodeUNIQUE,
]);

const GPermissionGroupSortField _$gPermissionGroupSortFieldNAME =
    const GPermissionGroupSortField._('NAME');

GPermissionGroupSortField _$gPermissionGroupSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gPermissionGroupSortFieldNAME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPermissionGroupSortField> _$gPermissionGroupSortFieldValues =
    new BuiltSet<GPermissionGroupSortField>(const <GPermissionGroupSortField>[
  _$gPermissionGroupSortFieldNAME,
]);

const GPluginErrorCode _$gPluginErrorCodeGRAPHQL_ERROR =
    const GPluginErrorCode._('GRAPHQL_ERROR');
const GPluginErrorCode _$gPluginErrorCodeINVALID =
    const GPluginErrorCode._('INVALID');
const GPluginErrorCode _$gPluginErrorCodePLUGIN_MISCONFIGURED =
    const GPluginErrorCode._('PLUGIN_MISCONFIGURED');
const GPluginErrorCode _$gPluginErrorCodeNOT_FOUND =
    const GPluginErrorCode._('NOT_FOUND');
const GPluginErrorCode _$gPluginErrorCodeREQUIRED =
    const GPluginErrorCode._('REQUIRED');
const GPluginErrorCode _$gPluginErrorCodeUNIQUE =
    const GPluginErrorCode._('UNIQUE');

GPluginErrorCode _$gPluginErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gPluginErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gPluginErrorCodeINVALID;
    case 'PLUGIN_MISCONFIGURED':
      return _$gPluginErrorCodePLUGIN_MISCONFIGURED;
    case 'NOT_FOUND':
      return _$gPluginErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gPluginErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPluginErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPluginErrorCode> _$gPluginErrorCodeValues =
    new BuiltSet<GPluginErrorCode>(const <GPluginErrorCode>[
  _$gPluginErrorCodeGRAPHQL_ERROR,
  _$gPluginErrorCodeINVALID,
  _$gPluginErrorCodePLUGIN_MISCONFIGURED,
  _$gPluginErrorCodeNOT_FOUND,
  _$gPluginErrorCodeREQUIRED,
  _$gPluginErrorCodeUNIQUE,
]);

const GPluginSortField _$gPluginSortFieldNAME =
    const GPluginSortField._('NAME');
const GPluginSortField _$gPluginSortFieldIS_ACTIVE =
    const GPluginSortField._('IS_ACTIVE');

GPluginSortField _$gPluginSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gPluginSortFieldNAME;
    case 'IS_ACTIVE':
      return _$gPluginSortFieldIS_ACTIVE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPluginSortField> _$gPluginSortFieldValues =
    new BuiltSet<GPluginSortField>(const <GPluginSortField>[
  _$gPluginSortFieldNAME,
  _$gPluginSortFieldIS_ACTIVE,
]);

const GProductErrorCode _$gProductErrorCodeALREADY_EXISTS =
    const GProductErrorCode._('ALREADY_EXISTS');
const GProductErrorCode _$gProductErrorCodeATTRIBUTE_ALREADY_ASSIGNED =
    const GProductErrorCode._('ATTRIBUTE_ALREADY_ASSIGNED');
const GProductErrorCode _$gProductErrorCodeATTRIBUTE_CANNOT_BE_ASSIGNED =
    const GProductErrorCode._('ATTRIBUTE_CANNOT_BE_ASSIGNED');
const GProductErrorCode _$gProductErrorCodeATTRIBUTE_VARIANTS_DISABLED =
    const GProductErrorCode._('ATTRIBUTE_VARIANTS_DISABLED');
const GProductErrorCode _$gProductErrorCodeDUPLICATED_INPUT_ITEM =
    const GProductErrorCode._('DUPLICATED_INPUT_ITEM');
const GProductErrorCode _$gProductErrorCodeGRAPHQL_ERROR =
    const GProductErrorCode._('GRAPHQL_ERROR');
const GProductErrorCode _$gProductErrorCodeINVALID =
    const GProductErrorCode._('INVALID');
const GProductErrorCode _$gProductErrorCodeNOT_PRODUCTS_IMAGE =
    const GProductErrorCode._('NOT_PRODUCTS_IMAGE');
const GProductErrorCode _$gProductErrorCodeNOT_FOUND =
    const GProductErrorCode._('NOT_FOUND');
const GProductErrorCode _$gProductErrorCodeREQUIRED =
    const GProductErrorCode._('REQUIRED');
const GProductErrorCode _$gProductErrorCodeUNIQUE =
    const GProductErrorCode._('UNIQUE');
const GProductErrorCode _$gProductErrorCodeVARIANT_NO_DIGITAL_CONTENT =
    const GProductErrorCode._('VARIANT_NO_DIGITAL_CONTENT');

GProductErrorCode _$gProductErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gProductErrorCodeALREADY_EXISTS;
    case 'ATTRIBUTE_ALREADY_ASSIGNED':
      return _$gProductErrorCodeATTRIBUTE_ALREADY_ASSIGNED;
    case 'ATTRIBUTE_CANNOT_BE_ASSIGNED':
      return _$gProductErrorCodeATTRIBUTE_CANNOT_BE_ASSIGNED;
    case 'ATTRIBUTE_VARIANTS_DISABLED':
      return _$gProductErrorCodeATTRIBUTE_VARIANTS_DISABLED;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gProductErrorCodeDUPLICATED_INPUT_ITEM;
    case 'GRAPHQL_ERROR':
      return _$gProductErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gProductErrorCodeINVALID;
    case 'NOT_PRODUCTS_IMAGE':
      return _$gProductErrorCodeNOT_PRODUCTS_IMAGE;
    case 'NOT_FOUND':
      return _$gProductErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gProductErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gProductErrorCodeUNIQUE;
    case 'VARIANT_NO_DIGITAL_CONTENT':
      return _$gProductErrorCodeVARIANT_NO_DIGITAL_CONTENT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductErrorCode> _$gProductErrorCodeValues =
    new BuiltSet<GProductErrorCode>(const <GProductErrorCode>[
  _$gProductErrorCodeALREADY_EXISTS,
  _$gProductErrorCodeATTRIBUTE_ALREADY_ASSIGNED,
  _$gProductErrorCodeATTRIBUTE_CANNOT_BE_ASSIGNED,
  _$gProductErrorCodeATTRIBUTE_VARIANTS_DISABLED,
  _$gProductErrorCodeDUPLICATED_INPUT_ITEM,
  _$gProductErrorCodeGRAPHQL_ERROR,
  _$gProductErrorCodeINVALID,
  _$gProductErrorCodeNOT_PRODUCTS_IMAGE,
  _$gProductErrorCodeNOT_FOUND,
  _$gProductErrorCodeREQUIRED,
  _$gProductErrorCodeUNIQUE,
  _$gProductErrorCodeVARIANT_NO_DIGITAL_CONTENT,
]);

const GProductOrderField _$gProductOrderFieldNAME =
    const GProductOrderField._('NAME');
const GProductOrderField _$gProductOrderFieldPRICE =
    const GProductOrderField._('PRICE');
const GProductOrderField _$gProductOrderFieldMINIMAL_PRICE =
    const GProductOrderField._('MINIMAL_PRICE');
const GProductOrderField _$gProductOrderFieldDATE =
    const GProductOrderField._('DATE');
const GProductOrderField _$gProductOrderFieldTYPE =
    const GProductOrderField._('TYPE');
const GProductOrderField _$gProductOrderFieldPUBLISHED =
    const GProductOrderField._('PUBLISHED');

GProductOrderField _$gProductOrderFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gProductOrderFieldNAME;
    case 'PRICE':
      return _$gProductOrderFieldPRICE;
    case 'MINIMAL_PRICE':
      return _$gProductOrderFieldMINIMAL_PRICE;
    case 'DATE':
      return _$gProductOrderFieldDATE;
    case 'TYPE':
      return _$gProductOrderFieldTYPE;
    case 'PUBLISHED':
      return _$gProductOrderFieldPUBLISHED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductOrderField> _$gProductOrderFieldValues =
    new BuiltSet<GProductOrderField>(const <GProductOrderField>[
  _$gProductOrderFieldNAME,
  _$gProductOrderFieldPRICE,
  _$gProductOrderFieldMINIMAL_PRICE,
  _$gProductOrderFieldDATE,
  _$gProductOrderFieldTYPE,
  _$gProductOrderFieldPUBLISHED,
]);

const GProductTypeConfigurable _$gProductTypeConfigurableCONFIGURABLE =
    const GProductTypeConfigurable._('CONFIGURABLE');
const GProductTypeConfigurable _$gProductTypeConfigurableSIMPLE =
    const GProductTypeConfigurable._('SIMPLE');

GProductTypeConfigurable _$gProductTypeConfigurableValueOf(String name) {
  switch (name) {
    case 'CONFIGURABLE':
      return _$gProductTypeConfigurableCONFIGURABLE;
    case 'SIMPLE':
      return _$gProductTypeConfigurableSIMPLE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductTypeConfigurable> _$gProductTypeConfigurableValues =
    new BuiltSet<GProductTypeConfigurable>(const <GProductTypeConfigurable>[
  _$gProductTypeConfigurableCONFIGURABLE,
  _$gProductTypeConfigurableSIMPLE,
]);

const GProductTypeEnum _$gProductTypeEnumDIGITAL =
    const GProductTypeEnum._('DIGITAL');
const GProductTypeEnum _$gProductTypeEnumSHIPPABLE =
    const GProductTypeEnum._('SHIPPABLE');

GProductTypeEnum _$gProductTypeEnumValueOf(String name) {
  switch (name) {
    case 'DIGITAL':
      return _$gProductTypeEnumDIGITAL;
    case 'SHIPPABLE':
      return _$gProductTypeEnumSHIPPABLE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductTypeEnum> _$gProductTypeEnumValues =
    new BuiltSet<GProductTypeEnum>(const <GProductTypeEnum>[
  _$gProductTypeEnumDIGITAL,
  _$gProductTypeEnumSHIPPABLE,
]);

const GProductTypeSortField _$gProductTypeSortFieldNAME =
    const GProductTypeSortField._('NAME');
const GProductTypeSortField _$gProductTypeSortFieldDIGITAL =
    const GProductTypeSortField._('DIGITAL');
const GProductTypeSortField _$gProductTypeSortFieldSHIPPING_REQUIRED =
    const GProductTypeSortField._('SHIPPING_REQUIRED');

GProductTypeSortField _$gProductTypeSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gProductTypeSortFieldNAME;
    case 'DIGITAL':
      return _$gProductTypeSortFieldDIGITAL;
    case 'SHIPPING_REQUIRED':
      return _$gProductTypeSortFieldSHIPPING_REQUIRED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductTypeSortField> _$gProductTypeSortFieldValues =
    new BuiltSet<GProductTypeSortField>(const <GProductTypeSortField>[
  _$gProductTypeSortFieldNAME,
  _$gProductTypeSortFieldDIGITAL,
  _$gProductTypeSortFieldSHIPPING_REQUIRED,
]);

const GReportingPeriod _$gReportingPeriodTODAY =
    const GReportingPeriod._('TODAY');
const GReportingPeriod _$gReportingPeriodTHIS_MONTH =
    const GReportingPeriod._('THIS_MONTH');

GReportingPeriod _$gReportingPeriodValueOf(String name) {
  switch (name) {
    case 'TODAY':
      return _$gReportingPeriodTODAY;
    case 'THIS_MONTH':
      return _$gReportingPeriodTHIS_MONTH;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GReportingPeriod> _$gReportingPeriodValues =
    new BuiltSet<GReportingPeriod>(const <GReportingPeriod>[
  _$gReportingPeriodTODAY,
  _$gReportingPeriodTHIS_MONTH,
]);

const GSaleSortField _$gSaleSortFieldNAME = const GSaleSortField._('NAME');
const GSaleSortField _$gSaleSortFieldSTART_DATE =
    const GSaleSortField._('START_DATE');
const GSaleSortField _$gSaleSortFieldEND_DATE =
    const GSaleSortField._('END_DATE');
const GSaleSortField _$gSaleSortFieldVALUE = const GSaleSortField._('VALUE');
const GSaleSortField _$gSaleSortFieldTYPE = const GSaleSortField._('TYPE');

GSaleSortField _$gSaleSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gSaleSortFieldNAME;
    case 'START_DATE':
      return _$gSaleSortFieldSTART_DATE;
    case 'END_DATE':
      return _$gSaleSortFieldEND_DATE;
    case 'VALUE':
      return _$gSaleSortFieldVALUE;
    case 'TYPE':
      return _$gSaleSortFieldTYPE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSaleSortField> _$gSaleSortFieldValues =
    new BuiltSet<GSaleSortField>(const <GSaleSortField>[
  _$gSaleSortFieldNAME,
  _$gSaleSortFieldSTART_DATE,
  _$gSaleSortFieldEND_DATE,
  _$gSaleSortFieldVALUE,
  _$gSaleSortFieldTYPE,
]);

const GSaleType _$gSaleTypeFIXED = const GSaleType._('FIXED');
const GSaleType _$gSaleTypePERCENTAGE = const GSaleType._('PERCENTAGE');

GSaleType _$gSaleTypeValueOf(String name) {
  switch (name) {
    case 'FIXED':
      return _$gSaleTypeFIXED;
    case 'PERCENTAGE':
      return _$gSaleTypePERCENTAGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSaleType> _$gSaleTypeValues =
    new BuiltSet<GSaleType>(const <GSaleType>[
  _$gSaleTypeFIXED,
  _$gSaleTypePERCENTAGE,
]);

const GServiceAccountSortField _$gServiceAccountSortFieldNAME =
    const GServiceAccountSortField._('NAME');
const GServiceAccountSortField _$gServiceAccountSortFieldCREATION_DATE =
    const GServiceAccountSortField._('CREATION_DATE');

GServiceAccountSortField _$gServiceAccountSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gServiceAccountSortFieldNAME;
    case 'CREATION_DATE':
      return _$gServiceAccountSortFieldCREATION_DATE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GServiceAccountSortField> _$gServiceAccountSortFieldValues =
    new BuiltSet<GServiceAccountSortField>(const <GServiceAccountSortField>[
  _$gServiceAccountSortFieldNAME,
  _$gServiceAccountSortFieldCREATION_DATE,
]);

const GShippingErrorCode _$gShippingErrorCodeALREADY_EXISTS =
    const GShippingErrorCode._('ALREADY_EXISTS');
const GShippingErrorCode _$gShippingErrorCodeGRAPHQL_ERROR =
    const GShippingErrorCode._('GRAPHQL_ERROR');
const GShippingErrorCode _$gShippingErrorCodeINVALID =
    const GShippingErrorCode._('INVALID');
const GShippingErrorCode _$gShippingErrorCodeMAX_LESS_THAN_MIN =
    const GShippingErrorCode._('MAX_LESS_THAN_MIN');
const GShippingErrorCode _$gShippingErrorCodeNOT_FOUND =
    const GShippingErrorCode._('NOT_FOUND');
const GShippingErrorCode _$gShippingErrorCodeREQUIRED =
    const GShippingErrorCode._('REQUIRED');
const GShippingErrorCode _$gShippingErrorCodeUNIQUE =
    const GShippingErrorCode._('UNIQUE');
const GShippingErrorCode _$gShippingErrorCodeDUPLICATED_INPUT_ITEM =
    const GShippingErrorCode._('DUPLICATED_INPUT_ITEM');

GShippingErrorCode _$gShippingErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gShippingErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gShippingErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gShippingErrorCodeINVALID;
    case 'MAX_LESS_THAN_MIN':
      return _$gShippingErrorCodeMAX_LESS_THAN_MIN;
    case 'NOT_FOUND':
      return _$gShippingErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gShippingErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gShippingErrorCodeUNIQUE;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gShippingErrorCodeDUPLICATED_INPUT_ITEM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GShippingErrorCode> _$gShippingErrorCodeValues =
    new BuiltSet<GShippingErrorCode>(const <GShippingErrorCode>[
  _$gShippingErrorCodeALREADY_EXISTS,
  _$gShippingErrorCodeGRAPHQL_ERROR,
  _$gShippingErrorCodeINVALID,
  _$gShippingErrorCodeMAX_LESS_THAN_MIN,
  _$gShippingErrorCodeNOT_FOUND,
  _$gShippingErrorCodeREQUIRED,
  _$gShippingErrorCodeUNIQUE,
  _$gShippingErrorCodeDUPLICATED_INPUT_ITEM,
]);

const GShippingMethodTypeEnum _$gShippingMethodTypeEnumPRICE =
    const GShippingMethodTypeEnum._('PRICE');
const GShippingMethodTypeEnum _$gShippingMethodTypeEnumWEIGHT =
    const GShippingMethodTypeEnum._('WEIGHT');

GShippingMethodTypeEnum _$gShippingMethodTypeEnumValueOf(String name) {
  switch (name) {
    case 'PRICE':
      return _$gShippingMethodTypeEnumPRICE;
    case 'WEIGHT':
      return _$gShippingMethodTypeEnumWEIGHT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GShippingMethodTypeEnum> _$gShippingMethodTypeEnumValues =
    new BuiltSet<GShippingMethodTypeEnum>(const <GShippingMethodTypeEnum>[
  _$gShippingMethodTypeEnumPRICE,
  _$gShippingMethodTypeEnumWEIGHT,
]);

const GShopErrorCode _$gShopErrorCodeALREADY_EXISTS =
    const GShopErrorCode._('ALREADY_EXISTS');
const GShopErrorCode _$gShopErrorCodeCANNOT_FETCH_TAX_RATES =
    const GShopErrorCode._('CANNOT_FETCH_TAX_RATES');
const GShopErrorCode _$gShopErrorCodeGRAPHQL_ERROR =
    const GShopErrorCode._('GRAPHQL_ERROR');
const GShopErrorCode _$gShopErrorCodeINVALID =
    const GShopErrorCode._('INVALID');
const GShopErrorCode _$gShopErrorCodeNOT_FOUND =
    const GShopErrorCode._('NOT_FOUND');
const GShopErrorCode _$gShopErrorCodeREQUIRED =
    const GShopErrorCode._('REQUIRED');
const GShopErrorCode _$gShopErrorCodeUNIQUE = const GShopErrorCode._('UNIQUE');

GShopErrorCode _$gShopErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gShopErrorCodeALREADY_EXISTS;
    case 'CANNOT_FETCH_TAX_RATES':
      return _$gShopErrorCodeCANNOT_FETCH_TAX_RATES;
    case 'GRAPHQL_ERROR':
      return _$gShopErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gShopErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gShopErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gShopErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gShopErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GShopErrorCode> _$gShopErrorCodeValues =
    new BuiltSet<GShopErrorCode>(const <GShopErrorCode>[
  _$gShopErrorCodeALREADY_EXISTS,
  _$gShopErrorCodeCANNOT_FETCH_TAX_RATES,
  _$gShopErrorCodeGRAPHQL_ERROR,
  _$gShopErrorCodeINVALID,
  _$gShopErrorCodeNOT_FOUND,
  _$gShopErrorCodeREQUIRED,
  _$gShopErrorCodeUNIQUE,
]);

const GStaffMemberStatus _$gStaffMemberStatusACTIVE =
    const GStaffMemberStatus._('ACTIVE');
const GStaffMemberStatus _$gStaffMemberStatusDEACTIVATED =
    const GStaffMemberStatus._('DEACTIVATED');

GStaffMemberStatus _$gStaffMemberStatusValueOf(String name) {
  switch (name) {
    case 'ACTIVE':
      return _$gStaffMemberStatusACTIVE;
    case 'DEACTIVATED':
      return _$gStaffMemberStatusDEACTIVATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GStaffMemberStatus> _$gStaffMemberStatusValues =
    new BuiltSet<GStaffMemberStatus>(const <GStaffMemberStatus>[
  _$gStaffMemberStatusACTIVE,
  _$gStaffMemberStatusDEACTIVATED,
]);

const GStockAvailability _$gStockAvailabilityIN_STOCK =
    const GStockAvailability._('IN_STOCK');
const GStockAvailability _$gStockAvailabilityOUT_OF_STOCK =
    const GStockAvailability._('OUT_OF_STOCK');

GStockAvailability _$gStockAvailabilityValueOf(String name) {
  switch (name) {
    case 'IN_STOCK':
      return _$gStockAvailabilityIN_STOCK;
    case 'OUT_OF_STOCK':
      return _$gStockAvailabilityOUT_OF_STOCK;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GStockAvailability> _$gStockAvailabilityValues =
    new BuiltSet<GStockAvailability>(const <GStockAvailability>[
  _$gStockAvailabilityIN_STOCK,
  _$gStockAvailabilityOUT_OF_STOCK,
]);

const GStockErrorCode _$gStockErrorCodeALREADY_EXISTS =
    const GStockErrorCode._('ALREADY_EXISTS');
const GStockErrorCode _$gStockErrorCodeGRAPHQL_ERROR =
    const GStockErrorCode._('GRAPHQL_ERROR');
const GStockErrorCode _$gStockErrorCodeINVALID =
    const GStockErrorCode._('INVALID');
const GStockErrorCode _$gStockErrorCodeNOT_FOUND =
    const GStockErrorCode._('NOT_FOUND');
const GStockErrorCode _$gStockErrorCodeREQUIRED =
    const GStockErrorCode._('REQUIRED');
const GStockErrorCode _$gStockErrorCodeUNIQUE =
    const GStockErrorCode._('UNIQUE');

GStockErrorCode _$gStockErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gStockErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gStockErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gStockErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gStockErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gStockErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gStockErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GStockErrorCode> _$gStockErrorCodeValues =
    new BuiltSet<GStockErrorCode>(const <GStockErrorCode>[
  _$gStockErrorCodeALREADY_EXISTS,
  _$gStockErrorCodeGRAPHQL_ERROR,
  _$gStockErrorCodeINVALID,
  _$gStockErrorCodeNOT_FOUND,
  _$gStockErrorCodeREQUIRED,
  _$gStockErrorCodeUNIQUE,
]);

const GTaxRateType _$gTaxRateTypeACCOMMODATION =
    const GTaxRateType._('ACCOMMODATION');
const GTaxRateType _$gTaxRateTypeADMISSION_TO_CULTURAL_EVENTS =
    const GTaxRateType._('ADMISSION_TO_CULTURAL_EVENTS');
const GTaxRateType _$gTaxRateTypeADMISSION_TO_ENTERTAINMENT_EVENTS =
    const GTaxRateType._('ADMISSION_TO_ENTERTAINMENT_EVENTS');
const GTaxRateType _$gTaxRateTypeADMISSION_TO_SPORTING_EVENTS =
    const GTaxRateType._('ADMISSION_TO_SPORTING_EVENTS');
const GTaxRateType _$gTaxRateTypeADVERTISING =
    const GTaxRateType._('ADVERTISING');
const GTaxRateType _$gTaxRateTypeAGRICULTURAL_SUPPLIES =
    const GTaxRateType._('AGRICULTURAL_SUPPLIES');
const GTaxRateType _$gTaxRateTypeBABY_FOODSTUFFS =
    const GTaxRateType._('BABY_FOODSTUFFS');
const GTaxRateType _$gTaxRateTypeBIKES = const GTaxRateType._('BIKES');
const GTaxRateType _$gTaxRateTypeBOOKS = const GTaxRateType._('BOOKS');
const GTaxRateType _$gTaxRateTypeCHILDRENS_CLOTHING =
    const GTaxRateType._('CHILDRENS_CLOTHING');
const GTaxRateType _$gTaxRateTypeDOMESTIC_FUEL =
    const GTaxRateType._('DOMESTIC_FUEL');
const GTaxRateType _$gTaxRateTypeDOMESTIC_SERVICES =
    const GTaxRateType._('DOMESTIC_SERVICES');
const GTaxRateType _$gTaxRateTypeE_BOOKS = const GTaxRateType._('E_BOOKS');
const GTaxRateType _$gTaxRateTypeFOODSTUFFS =
    const GTaxRateType._('FOODSTUFFS');
const GTaxRateType _$gTaxRateTypeHOTELS = const GTaxRateType._('HOTELS');
const GTaxRateType _$gTaxRateTypeMEDICAL = const GTaxRateType._('MEDICAL');
const GTaxRateType _$gTaxRateTypeNEWSPAPERS =
    const GTaxRateType._('NEWSPAPERS');
const GTaxRateType _$gTaxRateTypePASSENGER_TRANSPORT =
    const GTaxRateType._('PASSENGER_TRANSPORT');
const GTaxRateType _$gTaxRateTypePHARMACEUTICALS =
    const GTaxRateType._('PHARMACEUTICALS');
const GTaxRateType _$gTaxRateTypePROPERTY_RENOVATIONS =
    const GTaxRateType._('PROPERTY_RENOVATIONS');
const GTaxRateType _$gTaxRateTypeRESTAURANTS =
    const GTaxRateType._('RESTAURANTS');
const GTaxRateType _$gTaxRateTypeSOCIAL_HOUSING =
    const GTaxRateType._('SOCIAL_HOUSING');
const GTaxRateType _$gTaxRateTypeSTANDARD = const GTaxRateType._('STANDARD');
const GTaxRateType _$gTaxRateTypeWATER = const GTaxRateType._('WATER');
const GTaxRateType _$gTaxRateTypeWINE = const GTaxRateType._('WINE');

GTaxRateType _$gTaxRateTypeValueOf(String name) {
  switch (name) {
    case 'ACCOMMODATION':
      return _$gTaxRateTypeACCOMMODATION;
    case 'ADMISSION_TO_CULTURAL_EVENTS':
      return _$gTaxRateTypeADMISSION_TO_CULTURAL_EVENTS;
    case 'ADMISSION_TO_ENTERTAINMENT_EVENTS':
      return _$gTaxRateTypeADMISSION_TO_ENTERTAINMENT_EVENTS;
    case 'ADMISSION_TO_SPORTING_EVENTS':
      return _$gTaxRateTypeADMISSION_TO_SPORTING_EVENTS;
    case 'ADVERTISING':
      return _$gTaxRateTypeADVERTISING;
    case 'AGRICULTURAL_SUPPLIES':
      return _$gTaxRateTypeAGRICULTURAL_SUPPLIES;
    case 'BABY_FOODSTUFFS':
      return _$gTaxRateTypeBABY_FOODSTUFFS;
    case 'BIKES':
      return _$gTaxRateTypeBIKES;
    case 'BOOKS':
      return _$gTaxRateTypeBOOKS;
    case 'CHILDRENS_CLOTHING':
      return _$gTaxRateTypeCHILDRENS_CLOTHING;
    case 'DOMESTIC_FUEL':
      return _$gTaxRateTypeDOMESTIC_FUEL;
    case 'DOMESTIC_SERVICES':
      return _$gTaxRateTypeDOMESTIC_SERVICES;
    case 'E_BOOKS':
      return _$gTaxRateTypeE_BOOKS;
    case 'FOODSTUFFS':
      return _$gTaxRateTypeFOODSTUFFS;
    case 'HOTELS':
      return _$gTaxRateTypeHOTELS;
    case 'MEDICAL':
      return _$gTaxRateTypeMEDICAL;
    case 'NEWSPAPERS':
      return _$gTaxRateTypeNEWSPAPERS;
    case 'PASSENGER_TRANSPORT':
      return _$gTaxRateTypePASSENGER_TRANSPORT;
    case 'PHARMACEUTICALS':
      return _$gTaxRateTypePHARMACEUTICALS;
    case 'PROPERTY_RENOVATIONS':
      return _$gTaxRateTypePROPERTY_RENOVATIONS;
    case 'RESTAURANTS':
      return _$gTaxRateTypeRESTAURANTS;
    case 'SOCIAL_HOUSING':
      return _$gTaxRateTypeSOCIAL_HOUSING;
    case 'STANDARD':
      return _$gTaxRateTypeSTANDARD;
    case 'WATER':
      return _$gTaxRateTypeWATER;
    case 'WINE':
      return _$gTaxRateTypeWINE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTaxRateType> _$gTaxRateTypeValues =
    new BuiltSet<GTaxRateType>(const <GTaxRateType>[
  _$gTaxRateTypeACCOMMODATION,
  _$gTaxRateTypeADMISSION_TO_CULTURAL_EVENTS,
  _$gTaxRateTypeADMISSION_TO_ENTERTAINMENT_EVENTS,
  _$gTaxRateTypeADMISSION_TO_SPORTING_EVENTS,
  _$gTaxRateTypeADVERTISING,
  _$gTaxRateTypeAGRICULTURAL_SUPPLIES,
  _$gTaxRateTypeBABY_FOODSTUFFS,
  _$gTaxRateTypeBIKES,
  _$gTaxRateTypeBOOKS,
  _$gTaxRateTypeCHILDRENS_CLOTHING,
  _$gTaxRateTypeDOMESTIC_FUEL,
  _$gTaxRateTypeDOMESTIC_SERVICES,
  _$gTaxRateTypeE_BOOKS,
  _$gTaxRateTypeFOODSTUFFS,
  _$gTaxRateTypeHOTELS,
  _$gTaxRateTypeMEDICAL,
  _$gTaxRateTypeNEWSPAPERS,
  _$gTaxRateTypePASSENGER_TRANSPORT,
  _$gTaxRateTypePHARMACEUTICALS,
  _$gTaxRateTypePROPERTY_RENOVATIONS,
  _$gTaxRateTypeRESTAURANTS,
  _$gTaxRateTypeSOCIAL_HOUSING,
  _$gTaxRateTypeSTANDARD,
  _$gTaxRateTypeWATER,
  _$gTaxRateTypeWINE,
]);

const GTransactionError _$gTransactionErrorTRANSACTIONERROR_INCORRECT_NUMBER =
    const GTransactionError._('TRANSACTIONERROR_INCORRECT_NUMBER');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_INVALID_NUMBER =
    const GTransactionError._('TRANSACTIONERROR_INVALID_NUMBER');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_INCORRECT_CVV =
    const GTransactionError._('TRANSACTIONERROR_INCORRECT_CVV');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_INVALID_CVV =
    const GTransactionError._('TRANSACTIONERROR_INVALID_CVV');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_INCORRECT_ZIP =
    const GTransactionError._('TRANSACTIONERROR_INCORRECT_ZIP');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_INCORRECT_ADDRESS =
    const GTransactionError._('TRANSACTIONERROR_INCORRECT_ADDRESS');
const GTransactionError
    _$gTransactionErrorTRANSACTIONERROR_INVALID_EXPIRY_DATE =
    const GTransactionError._('TRANSACTIONERROR_INVALID_EXPIRY_DATE');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_EXPIRED =
    const GTransactionError._('TRANSACTIONERROR_EXPIRED');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_PROCESSING_ERROR =
    const GTransactionError._('TRANSACTIONERROR_PROCESSING_ERROR');
const GTransactionError _$gTransactionErrorTRANSACTIONERROR_DECLINED =
    const GTransactionError._('TRANSACTIONERROR_DECLINED');

GTransactionError _$gTransactionErrorValueOf(String name) {
  switch (name) {
    case 'TRANSACTIONERROR_INCORRECT_NUMBER':
      return _$gTransactionErrorTRANSACTIONERROR_INCORRECT_NUMBER;
    case 'TRANSACTIONERROR_INVALID_NUMBER':
      return _$gTransactionErrorTRANSACTIONERROR_INVALID_NUMBER;
    case 'TRANSACTIONERROR_INCORRECT_CVV':
      return _$gTransactionErrorTRANSACTIONERROR_INCORRECT_CVV;
    case 'TRANSACTIONERROR_INVALID_CVV':
      return _$gTransactionErrorTRANSACTIONERROR_INVALID_CVV;
    case 'TRANSACTIONERROR_INCORRECT_ZIP':
      return _$gTransactionErrorTRANSACTIONERROR_INCORRECT_ZIP;
    case 'TRANSACTIONERROR_INCORRECT_ADDRESS':
      return _$gTransactionErrorTRANSACTIONERROR_INCORRECT_ADDRESS;
    case 'TRANSACTIONERROR_INVALID_EXPIRY_DATE':
      return _$gTransactionErrorTRANSACTIONERROR_INVALID_EXPIRY_DATE;
    case 'TRANSACTIONERROR_EXPIRED':
      return _$gTransactionErrorTRANSACTIONERROR_EXPIRED;
    case 'TRANSACTIONERROR_PROCESSING_ERROR':
      return _$gTransactionErrorTRANSACTIONERROR_PROCESSING_ERROR;
    case 'TRANSACTIONERROR_DECLINED':
      return _$gTransactionErrorTRANSACTIONERROR_DECLINED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionError> _$gTransactionErrorValues =
    new BuiltSet<GTransactionError>(const <GTransactionError>[
  _$gTransactionErrorTRANSACTIONERROR_INCORRECT_NUMBER,
  _$gTransactionErrorTRANSACTIONERROR_INVALID_NUMBER,
  _$gTransactionErrorTRANSACTIONERROR_INCORRECT_CVV,
  _$gTransactionErrorTRANSACTIONERROR_INVALID_CVV,
  _$gTransactionErrorTRANSACTIONERROR_INCORRECT_ZIP,
  _$gTransactionErrorTRANSACTIONERROR_INCORRECT_ADDRESS,
  _$gTransactionErrorTRANSACTIONERROR_INVALID_EXPIRY_DATE,
  _$gTransactionErrorTRANSACTIONERROR_EXPIRED,
  _$gTransactionErrorTRANSACTIONERROR_PROCESSING_ERROR,
  _$gTransactionErrorTRANSACTIONERROR_DECLINED,
]);

const GTransactionKind _$gTransactionKindAUTH =
    const GTransactionKind._('AUTH');
const GTransactionKind _$gTransactionKindREFUND =
    const GTransactionKind._('REFUND');
const GTransactionKind _$gTransactionKindCAPTURE =
    const GTransactionKind._('CAPTURE');
const GTransactionKind _$gTransactionKindVOID =
    const GTransactionKind._('VOID');
const GTransactionKind _$gTransactionKindCONFIRM =
    const GTransactionKind._('CONFIRM');

GTransactionKind _$gTransactionKindValueOf(String name) {
  switch (name) {
    case 'AUTH':
      return _$gTransactionKindAUTH;
    case 'REFUND':
      return _$gTransactionKindREFUND;
    case 'CAPTURE':
      return _$gTransactionKindCAPTURE;
    case 'VOID':
      return _$gTransactionKindVOID;
    case 'CONFIRM':
      return _$gTransactionKindCONFIRM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionKind> _$gTransactionKindValues =
    new BuiltSet<GTransactionKind>(const <GTransactionKind>[
  _$gTransactionKindAUTH,
  _$gTransactionKindREFUND,
  _$gTransactionKindCAPTURE,
  _$gTransactionKindVOID,
  _$gTransactionKindCONFIRM,
]);

const GTranslatableKinds _$gTranslatableKindsATTRIBUTE =
    const GTranslatableKinds._('ATTRIBUTE');
const GTranslatableKinds _$gTranslatableKindsATTRIBUTE_VALUE =
    const GTranslatableKinds._('ATTRIBUTE_VALUE');
const GTranslatableKinds _$gTranslatableKindsCATEGORY =
    const GTranslatableKinds._('CATEGORY');
const GTranslatableKinds _$gTranslatableKindsCOLLECTION =
    const GTranslatableKinds._('COLLECTION');
const GTranslatableKinds _$gTranslatableKindsMENU_ITEM =
    const GTranslatableKinds._('MENU_ITEM');
const GTranslatableKinds _$gTranslatableKindsPAGE =
    const GTranslatableKinds._('PAGE');
const GTranslatableKinds _$gTranslatableKindsPRODUCT =
    const GTranslatableKinds._('PRODUCT');
const GTranslatableKinds _$gTranslatableKindsSALE =
    const GTranslatableKinds._('SALE');
const GTranslatableKinds _$gTranslatableKindsSHIPPING_METHOD =
    const GTranslatableKinds._('SHIPPING_METHOD');
const GTranslatableKinds _$gTranslatableKindsVARIANT =
    const GTranslatableKinds._('VARIANT');
const GTranslatableKinds _$gTranslatableKindsVOUCHER =
    const GTranslatableKinds._('VOUCHER');

GTranslatableKinds _$gTranslatableKindsValueOf(String name) {
  switch (name) {
    case 'ATTRIBUTE':
      return _$gTranslatableKindsATTRIBUTE;
    case 'ATTRIBUTE_VALUE':
      return _$gTranslatableKindsATTRIBUTE_VALUE;
    case 'CATEGORY':
      return _$gTranslatableKindsCATEGORY;
    case 'COLLECTION':
      return _$gTranslatableKindsCOLLECTION;
    case 'MENU_ITEM':
      return _$gTranslatableKindsMENU_ITEM;
    case 'PAGE':
      return _$gTranslatableKindsPAGE;
    case 'PRODUCT':
      return _$gTranslatableKindsPRODUCT;
    case 'SALE':
      return _$gTranslatableKindsSALE;
    case 'SHIPPING_METHOD':
      return _$gTranslatableKindsSHIPPING_METHOD;
    case 'VARIANT':
      return _$gTranslatableKindsVARIANT;
    case 'VOUCHER':
      return _$gTranslatableKindsVOUCHER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTranslatableKinds> _$gTranslatableKindsValues =
    new BuiltSet<GTranslatableKinds>(const <GTranslatableKinds>[
  _$gTranslatableKindsATTRIBUTE,
  _$gTranslatableKindsATTRIBUTE_VALUE,
  _$gTranslatableKindsCATEGORY,
  _$gTranslatableKindsCOLLECTION,
  _$gTranslatableKindsMENU_ITEM,
  _$gTranslatableKindsPAGE,
  _$gTranslatableKindsPRODUCT,
  _$gTranslatableKindsSALE,
  _$gTranslatableKindsSHIPPING_METHOD,
  _$gTranslatableKindsVARIANT,
  _$gTranslatableKindsVOUCHER,
]);

const GTranslationErrorCode _$gTranslationErrorCodeGRAPHQL_ERROR =
    const GTranslationErrorCode._('GRAPHQL_ERROR');
const GTranslationErrorCode _$gTranslationErrorCodeNOT_FOUND =
    const GTranslationErrorCode._('NOT_FOUND');
const GTranslationErrorCode _$gTranslationErrorCodeREQUIRED =
    const GTranslationErrorCode._('REQUIRED');

GTranslationErrorCode _$gTranslationErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gTranslationErrorCodeGRAPHQL_ERROR;
    case 'NOT_FOUND':
      return _$gTranslationErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gTranslationErrorCodeREQUIRED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTranslationErrorCode> _$gTranslationErrorCodeValues =
    new BuiltSet<GTranslationErrorCode>(const <GTranslationErrorCode>[
  _$gTranslationErrorCodeGRAPHQL_ERROR,
  _$gTranslationErrorCodeNOT_FOUND,
  _$gTranslationErrorCodeREQUIRED,
]);

const GUserSortField _$gUserSortFieldFIRST_NAME =
    const GUserSortField._('FIRST_NAME');
const GUserSortField _$gUserSortFieldLAST_NAME =
    const GUserSortField._('LAST_NAME');
const GUserSortField _$gUserSortFieldEMAIL = const GUserSortField._('EMAIL');
const GUserSortField _$gUserSortFieldORDER_COUNT =
    const GUserSortField._('ORDER_COUNT');

GUserSortField _$gUserSortFieldValueOf(String name) {
  switch (name) {
    case 'FIRST_NAME':
      return _$gUserSortFieldFIRST_NAME;
    case 'LAST_NAME':
      return _$gUserSortFieldLAST_NAME;
    case 'EMAIL':
      return _$gUserSortFieldEMAIL;
    case 'ORDER_COUNT':
      return _$gUserSortFieldORDER_COUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GUserSortField> _$gUserSortFieldValues =
    new BuiltSet<GUserSortField>(const <GUserSortField>[
  _$gUserSortFieldFIRST_NAME,
  _$gUserSortFieldLAST_NAME,
  _$gUserSortFieldEMAIL,
  _$gUserSortFieldORDER_COUNT,
]);

const GVoucherDiscountType _$gVoucherDiscountTypeFIXED =
    const GVoucherDiscountType._('FIXED');
const GVoucherDiscountType _$gVoucherDiscountTypePERCENTAGE =
    const GVoucherDiscountType._('PERCENTAGE');
const GVoucherDiscountType _$gVoucherDiscountTypeSHIPPING =
    const GVoucherDiscountType._('SHIPPING');

GVoucherDiscountType _$gVoucherDiscountTypeValueOf(String name) {
  switch (name) {
    case 'FIXED':
      return _$gVoucherDiscountTypeFIXED;
    case 'PERCENTAGE':
      return _$gVoucherDiscountTypePERCENTAGE;
    case 'SHIPPING':
      return _$gVoucherDiscountTypeSHIPPING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVoucherDiscountType> _$gVoucherDiscountTypeValues =
    new BuiltSet<GVoucherDiscountType>(const <GVoucherDiscountType>[
  _$gVoucherDiscountTypeFIXED,
  _$gVoucherDiscountTypePERCENTAGE,
  _$gVoucherDiscountTypeSHIPPING,
]);

const GVoucherSortField _$gVoucherSortFieldCODE =
    const GVoucherSortField._('CODE');
const GVoucherSortField _$gVoucherSortFieldSTART_DATE =
    const GVoucherSortField._('START_DATE');
const GVoucherSortField _$gVoucherSortFieldEND_DATE =
    const GVoucherSortField._('END_DATE');
const GVoucherSortField _$gVoucherSortFieldVALUE =
    const GVoucherSortField._('VALUE');
const GVoucherSortField _$gVoucherSortFieldTYPE =
    const GVoucherSortField._('TYPE');
const GVoucherSortField _$gVoucherSortFieldUSAGE_LIMIT =
    const GVoucherSortField._('USAGE_LIMIT');
const GVoucherSortField _$gVoucherSortFieldMINIMUM_SPENT_AMOUNT =
    const GVoucherSortField._('MINIMUM_SPENT_AMOUNT');

GVoucherSortField _$gVoucherSortFieldValueOf(String name) {
  switch (name) {
    case 'CODE':
      return _$gVoucherSortFieldCODE;
    case 'START_DATE':
      return _$gVoucherSortFieldSTART_DATE;
    case 'END_DATE':
      return _$gVoucherSortFieldEND_DATE;
    case 'VALUE':
      return _$gVoucherSortFieldVALUE;
    case 'TYPE':
      return _$gVoucherSortFieldTYPE;
    case 'USAGE_LIMIT':
      return _$gVoucherSortFieldUSAGE_LIMIT;
    case 'MINIMUM_SPENT_AMOUNT':
      return _$gVoucherSortFieldMINIMUM_SPENT_AMOUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVoucherSortField> _$gVoucherSortFieldValues =
    new BuiltSet<GVoucherSortField>(const <GVoucherSortField>[
  _$gVoucherSortFieldCODE,
  _$gVoucherSortFieldSTART_DATE,
  _$gVoucherSortFieldEND_DATE,
  _$gVoucherSortFieldVALUE,
  _$gVoucherSortFieldTYPE,
  _$gVoucherSortFieldUSAGE_LIMIT,
  _$gVoucherSortFieldMINIMUM_SPENT_AMOUNT,
]);

const GVoucherTypeEnum _$gVoucherTypeEnumSHIPPING =
    const GVoucherTypeEnum._('SHIPPING');
const GVoucherTypeEnum _$gVoucherTypeEnumENTIRE_ORDER =
    const GVoucherTypeEnum._('ENTIRE_ORDER');
const GVoucherTypeEnum _$gVoucherTypeEnumSPECIFIC_PRODUCT =
    const GVoucherTypeEnum._('SPECIFIC_PRODUCT');

GVoucherTypeEnum _$gVoucherTypeEnumValueOf(String name) {
  switch (name) {
    case 'SHIPPING':
      return _$gVoucherTypeEnumSHIPPING;
    case 'ENTIRE_ORDER':
      return _$gVoucherTypeEnumENTIRE_ORDER;
    case 'SPECIFIC_PRODUCT':
      return _$gVoucherTypeEnumSPECIFIC_PRODUCT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVoucherTypeEnum> _$gVoucherTypeEnumValues =
    new BuiltSet<GVoucherTypeEnum>(const <GVoucherTypeEnum>[
  _$gVoucherTypeEnumSHIPPING,
  _$gVoucherTypeEnumENTIRE_ORDER,
  _$gVoucherTypeEnumSPECIFIC_PRODUCT,
]);

const GWarehouseErrorCode _$gWarehouseErrorCodeALREADY_EXISTS =
    const GWarehouseErrorCode._('ALREADY_EXISTS');
const GWarehouseErrorCode _$gWarehouseErrorCodeGRAPHQL_ERROR =
    const GWarehouseErrorCode._('GRAPHQL_ERROR');
const GWarehouseErrorCode _$gWarehouseErrorCodeINVALID =
    const GWarehouseErrorCode._('INVALID');
const GWarehouseErrorCode _$gWarehouseErrorCodeNOT_FOUND =
    const GWarehouseErrorCode._('NOT_FOUND');
const GWarehouseErrorCode _$gWarehouseErrorCodeREQUIRED =
    const GWarehouseErrorCode._('REQUIRED');
const GWarehouseErrorCode _$gWarehouseErrorCodeUNIQUE =
    const GWarehouseErrorCode._('UNIQUE');

GWarehouseErrorCode _$gWarehouseErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gWarehouseErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gWarehouseErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gWarehouseErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gWarehouseErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gWarehouseErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gWarehouseErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWarehouseErrorCode> _$gWarehouseErrorCodeValues =
    new BuiltSet<GWarehouseErrorCode>(const <GWarehouseErrorCode>[
  _$gWarehouseErrorCodeALREADY_EXISTS,
  _$gWarehouseErrorCodeGRAPHQL_ERROR,
  _$gWarehouseErrorCodeINVALID,
  _$gWarehouseErrorCodeNOT_FOUND,
  _$gWarehouseErrorCodeREQUIRED,
  _$gWarehouseErrorCodeUNIQUE,
]);

const GWarehouseSortField _$gWarehouseSortFieldNAME =
    const GWarehouseSortField._('NAME');

GWarehouseSortField _$gWarehouseSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gWarehouseSortFieldNAME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWarehouseSortField> _$gWarehouseSortFieldValues =
    new BuiltSet<GWarehouseSortField>(const <GWarehouseSortField>[
  _$gWarehouseSortFieldNAME,
]);

const GWebhookErrorCode _$gWebhookErrorCodeGRAPHQL_ERROR =
    const GWebhookErrorCode._('GRAPHQL_ERROR');
const GWebhookErrorCode _$gWebhookErrorCodeINVALID =
    const GWebhookErrorCode._('INVALID');
const GWebhookErrorCode _$gWebhookErrorCodeNOT_FOUND =
    const GWebhookErrorCode._('NOT_FOUND');
const GWebhookErrorCode _$gWebhookErrorCodeREQUIRED =
    const GWebhookErrorCode._('REQUIRED');
const GWebhookErrorCode _$gWebhookErrorCodeUNIQUE =
    const GWebhookErrorCode._('UNIQUE');

GWebhookErrorCode _$gWebhookErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gWebhookErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gWebhookErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gWebhookErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gWebhookErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gWebhookErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookErrorCode> _$gWebhookErrorCodeValues =
    new BuiltSet<GWebhookErrorCode>(const <GWebhookErrorCode>[
  _$gWebhookErrorCodeGRAPHQL_ERROR,
  _$gWebhookErrorCodeINVALID,
  _$gWebhookErrorCodeNOT_FOUND,
  _$gWebhookErrorCodeREQUIRED,
  _$gWebhookErrorCodeUNIQUE,
]);

const GWebhookEventTypeEnum _$gWebhookEventTypeEnumANY_EVENTS =
    const GWebhookEventTypeEnum._('ANY_EVENTS');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_CREATED =
    const GWebhookEventTypeEnum._('ORDER_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_FULLY_PAID =
    const GWebhookEventTypeEnum._('ORDER_FULLY_PAID');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_UPDATED =
    const GWebhookEventTypeEnum._('ORDER_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_CANCELLED =
    const GWebhookEventTypeEnum._('ORDER_CANCELLED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_FULFILLED =
    const GWebhookEventTypeEnum._('ORDER_FULFILLED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCUSTOMER_CREATED =
    const GWebhookEventTypeEnum._('CUSTOMER_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_CREATED =
    const GWebhookEventTypeEnum._('PRODUCT_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHECKOUT_QUANTITY_CHANGED =
    const GWebhookEventTypeEnum._('CHECKOUT_QUANTITY_CHANGED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumFULFILLMENT_CREATED =
    const GWebhookEventTypeEnum._('FULFILLMENT_CREATED');

GWebhookEventTypeEnum _$gWebhookEventTypeEnumValueOf(String name) {
  switch (name) {
    case 'ANY_EVENTS':
      return _$gWebhookEventTypeEnumANY_EVENTS;
    case 'ORDER_CREATED':
      return _$gWebhookEventTypeEnumORDER_CREATED;
    case 'ORDER_FULLY_PAID':
      return _$gWebhookEventTypeEnumORDER_FULLY_PAID;
    case 'ORDER_UPDATED':
      return _$gWebhookEventTypeEnumORDER_UPDATED;
    case 'ORDER_CANCELLED':
      return _$gWebhookEventTypeEnumORDER_CANCELLED;
    case 'ORDER_FULFILLED':
      return _$gWebhookEventTypeEnumORDER_FULFILLED;
    case 'CUSTOMER_CREATED':
      return _$gWebhookEventTypeEnumCUSTOMER_CREATED;
    case 'PRODUCT_CREATED':
      return _$gWebhookEventTypeEnumPRODUCT_CREATED;
    case 'CHECKOUT_QUANTITY_CHANGED':
      return _$gWebhookEventTypeEnumCHECKOUT_QUANTITY_CHANGED;
    case 'FULFILLMENT_CREATED':
      return _$gWebhookEventTypeEnumFULFILLMENT_CREATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookEventTypeEnum> _$gWebhookEventTypeEnumValues =
    new BuiltSet<GWebhookEventTypeEnum>(const <GWebhookEventTypeEnum>[
  _$gWebhookEventTypeEnumANY_EVENTS,
  _$gWebhookEventTypeEnumORDER_CREATED,
  _$gWebhookEventTypeEnumORDER_FULLY_PAID,
  _$gWebhookEventTypeEnumORDER_UPDATED,
  _$gWebhookEventTypeEnumORDER_CANCELLED,
  _$gWebhookEventTypeEnumORDER_FULFILLED,
  _$gWebhookEventTypeEnumCUSTOMER_CREATED,
  _$gWebhookEventTypeEnumPRODUCT_CREATED,
  _$gWebhookEventTypeEnumCHECKOUT_QUANTITY_CHANGED,
  _$gWebhookEventTypeEnumFULFILLMENT_CREATED,
]);

const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_CREATED =
    const GWebhookSampleEventTypeEnum._('ORDER_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumORDER_FULLY_PAID =
    const GWebhookSampleEventTypeEnum._('ORDER_FULLY_PAID');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_UPDATED =
    const GWebhookSampleEventTypeEnum._('ORDER_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_CANCELLED =
    const GWebhookSampleEventTypeEnum._('ORDER_CANCELLED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_FULFILLED =
    const GWebhookSampleEventTypeEnum._('ORDER_FULFILLED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCUSTOMER_CREATED =
    const GWebhookSampleEventTypeEnum._('CUSTOMER_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumPRODUCT_CREATED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCHECKOUT_QUANTITY_CHANGED =
    const GWebhookSampleEventTypeEnum._('CHECKOUT_QUANTITY_CHANGED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumFULFILLMENT_CREATED =
    const GWebhookSampleEventTypeEnum._('FULFILLMENT_CREATED');

GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumValueOf(String name) {
  switch (name) {
    case 'ORDER_CREATED':
      return _$gWebhookSampleEventTypeEnumORDER_CREATED;
    case 'ORDER_FULLY_PAID':
      return _$gWebhookSampleEventTypeEnumORDER_FULLY_PAID;
    case 'ORDER_UPDATED':
      return _$gWebhookSampleEventTypeEnumORDER_UPDATED;
    case 'ORDER_CANCELLED':
      return _$gWebhookSampleEventTypeEnumORDER_CANCELLED;
    case 'ORDER_FULFILLED':
      return _$gWebhookSampleEventTypeEnumORDER_FULFILLED;
    case 'CUSTOMER_CREATED':
      return _$gWebhookSampleEventTypeEnumCUSTOMER_CREATED;
    case 'PRODUCT_CREATED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_CREATED;
    case 'CHECKOUT_QUANTITY_CHANGED':
      return _$gWebhookSampleEventTypeEnumCHECKOUT_QUANTITY_CHANGED;
    case 'FULFILLMENT_CREATED':
      return _$gWebhookSampleEventTypeEnumFULFILLMENT_CREATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookSampleEventTypeEnum>
    _$gWebhookSampleEventTypeEnumValues = new BuiltSet<
        GWebhookSampleEventTypeEnum>(const <GWebhookSampleEventTypeEnum>[
  _$gWebhookSampleEventTypeEnumORDER_CREATED,
  _$gWebhookSampleEventTypeEnumORDER_FULLY_PAID,
  _$gWebhookSampleEventTypeEnumORDER_UPDATED,
  _$gWebhookSampleEventTypeEnumORDER_CANCELLED,
  _$gWebhookSampleEventTypeEnumORDER_FULFILLED,
  _$gWebhookSampleEventTypeEnumCUSTOMER_CREATED,
  _$gWebhookSampleEventTypeEnumPRODUCT_CREATED,
  _$gWebhookSampleEventTypeEnumCHECKOUT_QUANTITY_CHANGED,
  _$gWebhookSampleEventTypeEnumFULFILLMENT_CREATED,
]);

const GWebhookSortField _$gWebhookSortFieldNAME =
    const GWebhookSortField._('NAME');
const GWebhookSortField _$gWebhookSortFieldSERVICE_ACCOUNT =
    const GWebhookSortField._('SERVICE_ACCOUNT');
const GWebhookSortField _$gWebhookSortFieldTARGET_URL =
    const GWebhookSortField._('TARGET_URL');
const GWebhookSortField _$gWebhookSortFieldAPP =
    const GWebhookSortField._('APP');

GWebhookSortField _$gWebhookSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gWebhookSortFieldNAME;
    case 'SERVICE_ACCOUNT':
      return _$gWebhookSortFieldSERVICE_ACCOUNT;
    case 'TARGET_URL':
      return _$gWebhookSortFieldTARGET_URL;
    case 'APP':
      return _$gWebhookSortFieldAPP;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookSortField> _$gWebhookSortFieldValues =
    new BuiltSet<GWebhookSortField>(const <GWebhookSortField>[
  _$gWebhookSortFieldNAME,
  _$gWebhookSortFieldSERVICE_ACCOUNT,
  _$gWebhookSortFieldTARGET_URL,
  _$gWebhookSortFieldAPP,
]);

const GWeightUnitsEnum _$gWeightUnitsEnumKG = const GWeightUnitsEnum._('KG');
const GWeightUnitsEnum _$gWeightUnitsEnumLB = const GWeightUnitsEnum._('LB');
const GWeightUnitsEnum _$gWeightUnitsEnumOZ = const GWeightUnitsEnum._('OZ');
const GWeightUnitsEnum _$gWeightUnitsEnumG = const GWeightUnitsEnum._('G');

GWeightUnitsEnum _$gWeightUnitsEnumValueOf(String name) {
  switch (name) {
    case 'KG':
      return _$gWeightUnitsEnumKG;
    case 'LB':
      return _$gWeightUnitsEnumLB;
    case 'OZ':
      return _$gWeightUnitsEnumOZ;
    case 'G':
      return _$gWeightUnitsEnumG;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWeightUnitsEnum> _$gWeightUnitsEnumValues =
    new BuiltSet<GWeightUnitsEnum>(const <GWeightUnitsEnum>[
  _$gWeightUnitsEnumKG,
  _$gWeightUnitsEnumLB,
  _$gWeightUnitsEnumOZ,
  _$gWeightUnitsEnumG,
]);

Serializer<GAccountErrorCode> _$gAccountErrorCodeSerializer =
    new _$GAccountErrorCodeSerializer();
Serializer<GAccountInput> _$gAccountInputSerializer =
    new _$GAccountInputSerializer();
Serializer<GAccountRegisterInput> _$gAccountRegisterInputSerializer =
    new _$GAccountRegisterInputSerializer();
Serializer<GAddressInput> _$gAddressInputSerializer =
    new _$GAddressInputSerializer();
Serializer<GAddressTypeEnum> _$gAddressTypeEnumSerializer =
    new _$GAddressTypeEnumSerializer();
Serializer<GAppErrorCode> _$gAppErrorCodeSerializer =
    new _$GAppErrorCodeSerializer();
Serializer<GAppFilterInput> _$gAppFilterInputSerializer =
    new _$GAppFilterInputSerializer();
Serializer<GAppInput> _$gAppInputSerializer = new _$GAppInputSerializer();
Serializer<GAppSortField> _$gAppSortFieldSerializer =
    new _$GAppSortFieldSerializer();
Serializer<GAppSortingInput> _$gAppSortingInputSerializer =
    new _$GAppSortingInputSerializer();
Serializer<GAppTokenInput> _$gAppTokenInputSerializer =
    new _$GAppTokenInputSerializer();
Serializer<GAttributeAssignInput> _$gAttributeAssignInputSerializer =
    new _$GAttributeAssignInputSerializer();
Serializer<GAttributeCreateInput> _$gAttributeCreateInputSerializer =
    new _$GAttributeCreateInputSerializer();
Serializer<GAttributeFilterInput> _$gAttributeFilterInputSerializer =
    new _$GAttributeFilterInputSerializer();
Serializer<GAttributeInput> _$gAttributeInputSerializer =
    new _$GAttributeInputSerializer();
Serializer<GAttributeInputTypeEnum> _$gAttributeInputTypeEnumSerializer =
    new _$GAttributeInputTypeEnumSerializer();
Serializer<GAttributeSortField> _$gAttributeSortFieldSerializer =
    new _$GAttributeSortFieldSerializer();
Serializer<GAttributeSortingInput> _$gAttributeSortingInputSerializer =
    new _$GAttributeSortingInputSerializer();
Serializer<GAttributeTypeEnum> _$gAttributeTypeEnumSerializer =
    new _$GAttributeTypeEnumSerializer();
Serializer<GAttributeUpdateInput> _$gAttributeUpdateInputSerializer =
    new _$GAttributeUpdateInputSerializer();
Serializer<GAttributeValueCreateInput> _$gAttributeValueCreateInputSerializer =
    new _$GAttributeValueCreateInputSerializer();
Serializer<GAttributeValueInput> _$gAttributeValueInputSerializer =
    new _$GAttributeValueInputSerializer();
Serializer<GAttributeValueType> _$gAttributeValueTypeSerializer =
    new _$GAttributeValueTypeSerializer();
Serializer<GAuthorizationKeyInput> _$gAuthorizationKeyInputSerializer =
    new _$GAuthorizationKeyInputSerializer();
Serializer<GAuthorizationKeyType> _$gAuthorizationKeyTypeSerializer =
    new _$GAuthorizationKeyTypeSerializer();
Serializer<GCatalogueInput> _$gCatalogueInputSerializer =
    new _$GCatalogueInputSerializer();
Serializer<GCategoryFilterInput> _$gCategoryFilterInputSerializer =
    new _$GCategoryFilterInputSerializer();
Serializer<GCategoryInput> _$gCategoryInputSerializer =
    new _$GCategoryInputSerializer();
Serializer<GCategorySortField> _$gCategorySortFieldSerializer =
    new _$GCategorySortFieldSerializer();
Serializer<GCategorySortingInput> _$gCategorySortingInputSerializer =
    new _$GCategorySortingInputSerializer();
Serializer<GCheckoutCreateInput> _$gCheckoutCreateInputSerializer =
    new _$GCheckoutCreateInputSerializer();
Serializer<GCheckoutErrorCode> _$gCheckoutErrorCodeSerializer =
    new _$GCheckoutErrorCodeSerializer();
Serializer<GCheckoutLineInput> _$gCheckoutLineInputSerializer =
    new _$GCheckoutLineInputSerializer();
Serializer<GCollectionCreateInput> _$gCollectionCreateInputSerializer =
    new _$GCollectionCreateInputSerializer();
Serializer<GCollectionFilterInput> _$gCollectionFilterInputSerializer =
    new _$GCollectionFilterInputSerializer();
Serializer<GCollectionInput> _$gCollectionInputSerializer =
    new _$GCollectionInputSerializer();
Serializer<GCollectionPublished> _$gCollectionPublishedSerializer =
    new _$GCollectionPublishedSerializer();
Serializer<GCollectionSortField> _$gCollectionSortFieldSerializer =
    new _$GCollectionSortFieldSerializer();
Serializer<GCollectionSortingInput> _$gCollectionSortingInputSerializer =
    new _$GCollectionSortingInputSerializer();
Serializer<GConfigurationItemInput> _$gConfigurationItemInputSerializer =
    new _$GConfigurationItemInputSerializer();
Serializer<GConfigurationTypeFieldEnum>
    _$gConfigurationTypeFieldEnumSerializer =
    new _$GConfigurationTypeFieldEnumSerializer();
Serializer<GCountryCode> _$gCountryCodeSerializer =
    new _$GCountryCodeSerializer();
Serializer<GCustomerEventsEnum> _$gCustomerEventsEnumSerializer =
    new _$GCustomerEventsEnumSerializer();
Serializer<GCustomerFilterInput> _$gCustomerFilterInputSerializer =
    new _$GCustomerFilterInputSerializer();
Serializer<GCustomerInput> _$gCustomerInputSerializer =
    new _$GCustomerInputSerializer();
Serializer<GDateRangeInput> _$gDateRangeInputSerializer =
    new _$GDateRangeInputSerializer();
Serializer<GDateTimeRangeInput> _$gDateTimeRangeInputSerializer =
    new _$GDateTimeRangeInputSerializer();
Serializer<GDigitalContentInput> _$gDigitalContentInputSerializer =
    new _$GDigitalContentInputSerializer();
Serializer<GDigitalContentUploadInput> _$gDigitalContentUploadInputSerializer =
    new _$GDigitalContentUploadInputSerializer();
Serializer<GDigitalContentUrlCreateInput>
    _$gDigitalContentUrlCreateInputSerializer =
    new _$GDigitalContentUrlCreateInputSerializer();
Serializer<GDiscountErrorCode> _$gDiscountErrorCodeSerializer =
    new _$GDiscountErrorCodeSerializer();
Serializer<GDiscountStatusEnum> _$gDiscountStatusEnumSerializer =
    new _$GDiscountStatusEnumSerializer();
Serializer<GDiscountValueTypeEnum> _$gDiscountValueTypeEnumSerializer =
    new _$GDiscountValueTypeEnumSerializer();
Serializer<GDraftOrderCreateInput> _$gDraftOrderCreateInputSerializer =
    new _$GDraftOrderCreateInputSerializer();
Serializer<GDraftOrderInput> _$gDraftOrderInputSerializer =
    new _$GDraftOrderInputSerializer();
Serializer<GFulfillmentCancelInput> _$gFulfillmentCancelInputSerializer =
    new _$GFulfillmentCancelInputSerializer();
Serializer<GFulfillmentStatus> _$gFulfillmentStatusSerializer =
    new _$GFulfillmentStatusSerializer();
Serializer<GFulfillmentUpdateTrackingInput>
    _$gFulfillmentUpdateTrackingInputSerializer =
    new _$GFulfillmentUpdateTrackingInputSerializer();
Serializer<GGiftCardCreateInput> _$gGiftCardCreateInputSerializer =
    new _$GGiftCardCreateInputSerializer();
Serializer<GGiftCardErrorCode> _$gGiftCardErrorCodeSerializer =
    new _$GGiftCardErrorCodeSerializer();
Serializer<GGiftCardUpdateInput> _$gGiftCardUpdateInputSerializer =
    new _$GGiftCardUpdateInputSerializer();
Serializer<GIntRangeInput> _$gIntRangeInputSerializer =
    new _$GIntRangeInputSerializer();
Serializer<GLanguageCodeEnum> _$gLanguageCodeEnumSerializer =
    new _$GLanguageCodeEnumSerializer();
Serializer<GMenuCreateInput> _$gMenuCreateInputSerializer =
    new _$GMenuCreateInputSerializer();
Serializer<GMenuErrorCode> _$gMenuErrorCodeSerializer =
    new _$GMenuErrorCodeSerializer();
Serializer<GMenuFilterInput> _$gMenuFilterInputSerializer =
    new _$GMenuFilterInputSerializer();
Serializer<GMenuInput> _$gMenuInputSerializer = new _$GMenuInputSerializer();
Serializer<GMenuItemCreateInput> _$gMenuItemCreateInputSerializer =
    new _$GMenuItemCreateInputSerializer();
Serializer<GMenuItemFilterInput> _$gMenuItemFilterInputSerializer =
    new _$GMenuItemFilterInputSerializer();
Serializer<GMenuItemInput> _$gMenuItemInputSerializer =
    new _$GMenuItemInputSerializer();
Serializer<GMenuItemMoveInput> _$gMenuItemMoveInputSerializer =
    new _$GMenuItemMoveInputSerializer();
Serializer<GMenuItemSortingInput> _$gMenuItemSortingInputSerializer =
    new _$GMenuItemSortingInputSerializer();
Serializer<GMenuItemsSortField> _$gMenuItemsSortFieldSerializer =
    new _$GMenuItemsSortFieldSerializer();
Serializer<GMenuSortField> _$gMenuSortFieldSerializer =
    new _$GMenuSortFieldSerializer();
Serializer<GMenuSortingInput> _$gMenuSortingInputSerializer =
    new _$GMenuSortingInputSerializer();
Serializer<GMetaInput> _$gMetaInputSerializer = new _$GMetaInputSerializer();
Serializer<GMetaPath> _$gMetaPathSerializer = new _$GMetaPathSerializer();
Serializer<GMetadataErrorCode> _$gMetadataErrorCodeSerializer =
    new _$GMetadataErrorCodeSerializer();
Serializer<GMetadataInput> _$gMetadataInputSerializer =
    new _$GMetadataInputSerializer();
Serializer<GMoveProductInput> _$gMoveProductInputSerializer =
    new _$GMoveProductInputSerializer();
Serializer<GNameTranslationInput> _$gNameTranslationInputSerializer =
    new _$GNameTranslationInputSerializer();
Serializer<GNavigationType> _$gNavigationTypeSerializer =
    new _$GNavigationTypeSerializer();
Serializer<GOrderAction> _$gOrderActionSerializer =
    new _$GOrderActionSerializer();
Serializer<GOrderAddNoteInput> _$gOrderAddNoteInputSerializer =
    new _$GOrderAddNoteInputSerializer();
Serializer<GOrderDirection> _$gOrderDirectionSerializer =
    new _$GOrderDirectionSerializer();
Serializer<GOrderDraftFilterInput> _$gOrderDraftFilterInputSerializer =
    new _$GOrderDraftFilterInputSerializer();
Serializer<GOrderErrorCode> _$gOrderErrorCodeSerializer =
    new _$GOrderErrorCodeSerializer();
Serializer<GOrderEventsEmailsEnum> _$gOrderEventsEmailsEnumSerializer =
    new _$GOrderEventsEmailsEnumSerializer();
Serializer<GOrderEventsEnum> _$gOrderEventsEnumSerializer =
    new _$GOrderEventsEnumSerializer();
Serializer<GOrderFilterInput> _$gOrderFilterInputSerializer =
    new _$GOrderFilterInputSerializer();
Serializer<GOrderFulfillInput> _$gOrderFulfillInputSerializer =
    new _$GOrderFulfillInputSerializer();
Serializer<GOrderFulfillLineInput> _$gOrderFulfillLineInputSerializer =
    new _$GOrderFulfillLineInputSerializer();
Serializer<GOrderFulfillStockInput> _$gOrderFulfillStockInputSerializer =
    new _$GOrderFulfillStockInputSerializer();
Serializer<GOrderLineCreateInput> _$gOrderLineCreateInputSerializer =
    new _$GOrderLineCreateInputSerializer();
Serializer<GOrderLineInput> _$gOrderLineInputSerializer =
    new _$GOrderLineInputSerializer();
Serializer<GOrderSortField> _$gOrderSortFieldSerializer =
    new _$GOrderSortFieldSerializer();
Serializer<GOrderSortingInput> _$gOrderSortingInputSerializer =
    new _$GOrderSortingInputSerializer();
Serializer<GOrderStatus> _$gOrderStatusSerializer =
    new _$GOrderStatusSerializer();
Serializer<GOrderStatusFilter> _$gOrderStatusFilterSerializer =
    new _$GOrderStatusFilterSerializer();
Serializer<GOrderUpdateInput> _$gOrderUpdateInputSerializer =
    new _$GOrderUpdateInputSerializer();
Serializer<GOrderUpdateShippingInput> _$gOrderUpdateShippingInputSerializer =
    new _$GOrderUpdateShippingInputSerializer();
Serializer<GPageErrorCode> _$gPageErrorCodeSerializer =
    new _$GPageErrorCodeSerializer();
Serializer<GPageFilterInput> _$gPageFilterInputSerializer =
    new _$GPageFilterInputSerializer();
Serializer<GPageInput> _$gPageInputSerializer = new _$GPageInputSerializer();
Serializer<GPageSortField> _$gPageSortFieldSerializer =
    new _$GPageSortFieldSerializer();
Serializer<GPageSortingInput> _$gPageSortingInputSerializer =
    new _$GPageSortingInputSerializer();
Serializer<GPageTranslationInput> _$gPageTranslationInputSerializer =
    new _$GPageTranslationInputSerializer();
Serializer<GPaymentChargeStatusEnum> _$gPaymentChargeStatusEnumSerializer =
    new _$GPaymentChargeStatusEnumSerializer();
Serializer<GPaymentErrorCode> _$gPaymentErrorCodeSerializer =
    new _$GPaymentErrorCodeSerializer();
Serializer<GPaymentInput> _$gPaymentInputSerializer =
    new _$GPaymentInputSerializer();
Serializer<GPermissionEnum> _$gPermissionEnumSerializer =
    new _$GPermissionEnumSerializer();
Serializer<GPermissionGroupCreateInput>
    _$gPermissionGroupCreateInputSerializer =
    new _$GPermissionGroupCreateInputSerializer();
Serializer<GPermissionGroupErrorCode> _$gPermissionGroupErrorCodeSerializer =
    new _$GPermissionGroupErrorCodeSerializer();
Serializer<GPermissionGroupFilterInput>
    _$gPermissionGroupFilterInputSerializer =
    new _$GPermissionGroupFilterInputSerializer();
Serializer<GPermissionGroupSortField> _$gPermissionGroupSortFieldSerializer =
    new _$GPermissionGroupSortFieldSerializer();
Serializer<GPermissionGroupSortingInput>
    _$gPermissionGroupSortingInputSerializer =
    new _$GPermissionGroupSortingInputSerializer();
Serializer<GPermissionGroupUpdateInput>
    _$gPermissionGroupUpdateInputSerializer =
    new _$GPermissionGroupUpdateInputSerializer();
Serializer<GPluginErrorCode> _$gPluginErrorCodeSerializer =
    new _$GPluginErrorCodeSerializer();
Serializer<GPluginFilterInput> _$gPluginFilterInputSerializer =
    new _$GPluginFilterInputSerializer();
Serializer<GPluginSortField> _$gPluginSortFieldSerializer =
    new _$GPluginSortFieldSerializer();
Serializer<GPluginSortingInput> _$gPluginSortingInputSerializer =
    new _$GPluginSortingInputSerializer();
Serializer<GPluginUpdateInput> _$gPluginUpdateInputSerializer =
    new _$GPluginUpdateInputSerializer();
Serializer<GPriceRangeInput> _$gPriceRangeInputSerializer =
    new _$GPriceRangeInputSerializer();
Serializer<GProductCreateInput> _$gProductCreateInputSerializer =
    new _$GProductCreateInputSerializer();
Serializer<GProductErrorCode> _$gProductErrorCodeSerializer =
    new _$GProductErrorCodeSerializer();
Serializer<GProductFilterInput> _$gProductFilterInputSerializer =
    new _$GProductFilterInputSerializer();
Serializer<GProductImageCreateInput> _$gProductImageCreateInputSerializer =
    new _$GProductImageCreateInputSerializer();
Serializer<GProductImageUpdateInput> _$gProductImageUpdateInputSerializer =
    new _$GProductImageUpdateInputSerializer();
Serializer<GProductInput> _$gProductInputSerializer =
    new _$GProductInputSerializer();
Serializer<GProductOrder> _$gProductOrderSerializer =
    new _$GProductOrderSerializer();
Serializer<GProductOrderField> _$gProductOrderFieldSerializer =
    new _$GProductOrderFieldSerializer();
Serializer<GProductStockFilterInput> _$gProductStockFilterInputSerializer =
    new _$GProductStockFilterInputSerializer();
Serializer<GProductTypeConfigurable> _$gProductTypeConfigurableSerializer =
    new _$GProductTypeConfigurableSerializer();
Serializer<GProductTypeEnum> _$gProductTypeEnumSerializer =
    new _$GProductTypeEnumSerializer();
Serializer<GProductTypeFilterInput> _$gProductTypeFilterInputSerializer =
    new _$GProductTypeFilterInputSerializer();
Serializer<GProductTypeInput> _$gProductTypeInputSerializer =
    new _$GProductTypeInputSerializer();
Serializer<GProductTypeSortField> _$gProductTypeSortFieldSerializer =
    new _$GProductTypeSortFieldSerializer();
Serializer<GProductTypeSortingInput> _$gProductTypeSortingInputSerializer =
    new _$GProductTypeSortingInputSerializer();
Serializer<GProductVariantBulkCreateInput>
    _$gProductVariantBulkCreateInputSerializer =
    new _$GProductVariantBulkCreateInputSerializer();
Serializer<GProductVariantCreateInput> _$gProductVariantCreateInputSerializer =
    new _$GProductVariantCreateInputSerializer();
Serializer<GProductVariantInput> _$gProductVariantInputSerializer =
    new _$GProductVariantInputSerializer();
Serializer<GReorderInput> _$gReorderInputSerializer =
    new _$GReorderInputSerializer();
Serializer<GReportingPeriod> _$gReportingPeriodSerializer =
    new _$GReportingPeriodSerializer();
Serializer<GSaleFilterInput> _$gSaleFilterInputSerializer =
    new _$GSaleFilterInputSerializer();
Serializer<GSaleInput> _$gSaleInputSerializer = new _$GSaleInputSerializer();
Serializer<GSaleSortField> _$gSaleSortFieldSerializer =
    new _$GSaleSortFieldSerializer();
Serializer<GSaleSortingInput> _$gSaleSortingInputSerializer =
    new _$GSaleSortingInputSerializer();
Serializer<GSaleType> _$gSaleTypeSerializer = new _$GSaleTypeSerializer();
Serializer<GSeoInput> _$gSeoInputSerializer = new _$GSeoInputSerializer();
Serializer<GServiceAccountFilterInput> _$gServiceAccountFilterInputSerializer =
    new _$GServiceAccountFilterInputSerializer();
Serializer<GServiceAccountInput> _$gServiceAccountInputSerializer =
    new _$GServiceAccountInputSerializer();
Serializer<GServiceAccountSortField> _$gServiceAccountSortFieldSerializer =
    new _$GServiceAccountSortFieldSerializer();
Serializer<GServiceAccountSortingInput>
    _$gServiceAccountSortingInputSerializer =
    new _$GServiceAccountSortingInputSerializer();
Serializer<GServiceAccountTokenInput> _$gServiceAccountTokenInputSerializer =
    new _$GServiceAccountTokenInputSerializer();
Serializer<GShippingErrorCode> _$gShippingErrorCodeSerializer =
    new _$GShippingErrorCodeSerializer();
Serializer<GShippingMethodTypeEnum> _$gShippingMethodTypeEnumSerializer =
    new _$GShippingMethodTypeEnumSerializer();
Serializer<GShippingPriceInput> _$gShippingPriceInputSerializer =
    new _$GShippingPriceInputSerializer();
Serializer<GShippingZoneCreateInput> _$gShippingZoneCreateInputSerializer =
    new _$GShippingZoneCreateInputSerializer();
Serializer<GShippingZoneUpdateInput> _$gShippingZoneUpdateInputSerializer =
    new _$GShippingZoneUpdateInputSerializer();
Serializer<GShopErrorCode> _$gShopErrorCodeSerializer =
    new _$GShopErrorCodeSerializer();
Serializer<GShopSettingsInput> _$gShopSettingsInputSerializer =
    new _$GShopSettingsInputSerializer();
Serializer<GShopSettingsTranslationInput>
    _$gShopSettingsTranslationInputSerializer =
    new _$GShopSettingsTranslationInputSerializer();
Serializer<GSiteDomainInput> _$gSiteDomainInputSerializer =
    new _$GSiteDomainInputSerializer();
Serializer<GStaffCreateInput> _$gStaffCreateInputSerializer =
    new _$GStaffCreateInputSerializer();
Serializer<GStaffMemberStatus> _$gStaffMemberStatusSerializer =
    new _$GStaffMemberStatusSerializer();
Serializer<GStaffNotificationRecipientInput>
    _$gStaffNotificationRecipientInputSerializer =
    new _$GStaffNotificationRecipientInputSerializer();
Serializer<GStaffUpdateInput> _$gStaffUpdateInputSerializer =
    new _$GStaffUpdateInputSerializer();
Serializer<GStaffUserInput> _$gStaffUserInputSerializer =
    new _$GStaffUserInputSerializer();
Serializer<GStockAvailability> _$gStockAvailabilitySerializer =
    new _$GStockAvailabilitySerializer();
Serializer<GStockErrorCode> _$gStockErrorCodeSerializer =
    new _$GStockErrorCodeSerializer();
Serializer<GStockFilterInput> _$gStockFilterInputSerializer =
    new _$GStockFilterInputSerializer();
Serializer<GStockInput> _$gStockInputSerializer = new _$GStockInputSerializer();
Serializer<GTaxRateType> _$gTaxRateTypeSerializer =
    new _$GTaxRateTypeSerializer();
Serializer<GTransactionError> _$gTransactionErrorSerializer =
    new _$GTransactionErrorSerializer();
Serializer<GTransactionKind> _$gTransactionKindSerializer =
    new _$GTransactionKindSerializer();
Serializer<GTranslatableKinds> _$gTranslatableKindsSerializer =
    new _$GTranslatableKindsSerializer();
Serializer<GTranslationErrorCode> _$gTranslationErrorCodeSerializer =
    new _$GTranslationErrorCodeSerializer();
Serializer<GTranslationInput> _$gTranslationInputSerializer =
    new _$GTranslationInputSerializer();
Serializer<GUserCreateInput> _$gUserCreateInputSerializer =
    new _$GUserCreateInputSerializer();
Serializer<GUserSortField> _$gUserSortFieldSerializer =
    new _$GUserSortFieldSerializer();
Serializer<GUserSortingInput> _$gUserSortingInputSerializer =
    new _$GUserSortingInputSerializer();
Serializer<GVoucherDiscountType> _$gVoucherDiscountTypeSerializer =
    new _$GVoucherDiscountTypeSerializer();
Serializer<GVoucherFilterInput> _$gVoucherFilterInputSerializer =
    new _$GVoucherFilterInputSerializer();
Serializer<GVoucherInput> _$gVoucherInputSerializer =
    new _$GVoucherInputSerializer();
Serializer<GVoucherSortField> _$gVoucherSortFieldSerializer =
    new _$GVoucherSortFieldSerializer();
Serializer<GVoucherSortingInput> _$gVoucherSortingInputSerializer =
    new _$GVoucherSortingInputSerializer();
Serializer<GVoucherTypeEnum> _$gVoucherTypeEnumSerializer =
    new _$GVoucherTypeEnumSerializer();
Serializer<GWarehouseAddressInput> _$gWarehouseAddressInputSerializer =
    new _$GWarehouseAddressInputSerializer();
Serializer<GWarehouseCreateInput> _$gWarehouseCreateInputSerializer =
    new _$GWarehouseCreateInputSerializer();
Serializer<GWarehouseErrorCode> _$gWarehouseErrorCodeSerializer =
    new _$GWarehouseErrorCodeSerializer();
Serializer<GWarehouseFilterInput> _$gWarehouseFilterInputSerializer =
    new _$GWarehouseFilterInputSerializer();
Serializer<GWarehouseSortField> _$gWarehouseSortFieldSerializer =
    new _$GWarehouseSortFieldSerializer();
Serializer<GWarehouseSortingInput> _$gWarehouseSortingInputSerializer =
    new _$GWarehouseSortingInputSerializer();
Serializer<GWarehouseUpdateInput> _$gWarehouseUpdateInputSerializer =
    new _$GWarehouseUpdateInputSerializer();
Serializer<GWebhookCreateInput> _$gWebhookCreateInputSerializer =
    new _$GWebhookCreateInputSerializer();
Serializer<GWebhookErrorCode> _$gWebhookErrorCodeSerializer =
    new _$GWebhookErrorCodeSerializer();
Serializer<GWebhookEventTypeEnum> _$gWebhookEventTypeEnumSerializer =
    new _$GWebhookEventTypeEnumSerializer();
Serializer<GWebhookFilterInput> _$gWebhookFilterInputSerializer =
    new _$GWebhookFilterInputSerializer();
Serializer<GWebhookSampleEventTypeEnum>
    _$gWebhookSampleEventTypeEnumSerializer =
    new _$GWebhookSampleEventTypeEnumSerializer();
Serializer<GWebhookSortField> _$gWebhookSortFieldSerializer =
    new _$GWebhookSortFieldSerializer();
Serializer<GWebhookSortingInput> _$gWebhookSortingInputSerializer =
    new _$GWebhookSortingInputSerializer();
Serializer<GWebhookUpdateInput> _$gWebhookUpdateInputSerializer =
    new _$GWebhookUpdateInputSerializer();
Serializer<GWeightUnitsEnum> _$gWeightUnitsEnumSerializer =
    new _$GWeightUnitsEnumSerializer();

class _$GAccountErrorCodeSerializer
    implements PrimitiveSerializer<GAccountErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GAccountErrorCode];
  @override
  final String wireName = 'GAccountErrorCode';

  @override
  Object serialize(Serializers serializers, GAccountErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAccountErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAccountErrorCode.valueOf(serialized as String);
}

class _$GAccountInputSerializer implements StructuredSerializer<GAccountInput> {
  @override
  final Iterable<Type> types = const [GAccountInput, _$GAccountInput];
  @override
  final String wireName = 'GAccountInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GAccountInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.firstName != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(object.firstName,
            specifiedType: const FullType(String)));
    }
    if (object.lastName != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(object.lastName,
            specifiedType: const FullType(String)));
    }
    if (object.defaultBillingAddress != null) {
      result
        ..add('defaultBillingAddress')
        ..add(serializers.serialize(object.defaultBillingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.defaultShippingAddress != null) {
      result
        ..add('defaultShippingAddress')
        ..add(serializers.serialize(object.defaultShippingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    return result;
  }

  @override
  GAccountInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccountInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'defaultBillingAddress':
          result.defaultBillingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'defaultShippingAddress':
          result.defaultShippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GAccountRegisterInputSerializer
    implements StructuredSerializer<GAccountRegisterInput> {
  @override
  final Iterable<Type> types = const [
    GAccountRegisterInput,
    _$GAccountRegisterInput
  ];
  @override
  final String wireName = 'GAccountRegisterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAccountRegisterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'email',
      serializers.serialize(object.email,
          specifiedType: const FullType(String)),
      'password',
      serializers.serialize(object.password,
          specifiedType: const FullType(String)),
    ];
    if (object.redirectUrl != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(object.redirectUrl,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAccountRegisterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccountRegisterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'password':
          result.password = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAddressInputSerializer implements StructuredSerializer<GAddressInput> {
  @override
  final Iterable<Type> types = const [GAddressInput, _$GAddressInput];
  @override
  final String wireName = 'GAddressInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GAddressInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.firstName != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(object.firstName,
            specifiedType: const FullType(String)));
    }
    if (object.lastName != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(object.lastName,
            specifiedType: const FullType(String)));
    }
    if (object.companyName != null) {
      result
        ..add('companyName')
        ..add(serializers.serialize(object.companyName,
            specifiedType: const FullType(String)));
    }
    if (object.streetAddress1 != null) {
      result
        ..add('streetAddress1')
        ..add(serializers.serialize(object.streetAddress1,
            specifiedType: const FullType(String)));
    }
    if (object.streetAddress2 != null) {
      result
        ..add('streetAddress2')
        ..add(serializers.serialize(object.streetAddress2,
            specifiedType: const FullType(String)));
    }
    if (object.city != null) {
      result
        ..add('city')
        ..add(serializers.serialize(object.city,
            specifiedType: const FullType(String)));
    }
    if (object.cityArea != null) {
      result
        ..add('cityArea')
        ..add(serializers.serialize(object.cityArea,
            specifiedType: const FullType(String)));
    }
    if (object.postalCode != null) {
      result
        ..add('postalCode')
        ..add(serializers.serialize(object.postalCode,
            specifiedType: const FullType(String)));
    }
    if (object.country != null) {
      result
        ..add('country')
        ..add(serializers.serialize(object.country,
            specifiedType: const FullType(GCountryCode)));
    }
    if (object.countryArea != null) {
      result
        ..add('countryArea')
        ..add(serializers.serialize(object.countryArea,
            specifiedType: const FullType(String)));
    }
    if (object.phone != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(object.phone,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAddressInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAddressInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'companyName':
          result.companyName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'streetAddress1':
          result.streetAddress1 = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'streetAddress2':
          result.streetAddress2 = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'city':
          result.city = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'cityArea':
          result.cityArea = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'postalCode':
          result.postalCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'country':
          result.country = serializers.deserialize(value,
              specifiedType: const FullType(GCountryCode)) as GCountryCode;
          break;
        case 'countryArea':
          result.countryArea = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAddressTypeEnumSerializer
    implements PrimitiveSerializer<GAddressTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAddressTypeEnum];
  @override
  final String wireName = 'GAddressTypeEnum';

  @override
  Object serialize(Serializers serializers, GAddressTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAddressTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAddressTypeEnum.valueOf(serialized as String);
}

class _$GAppErrorCodeSerializer implements PrimitiveSerializer<GAppErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GAppErrorCode];
  @override
  final String wireName = 'GAppErrorCode';

  @override
  Object serialize(Serializers serializers, GAppErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAppErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppErrorCode.valueOf(serialized as String);
}

class _$GAppFilterInputSerializer
    implements StructuredSerializer<GAppFilterInput> {
  @override
  final Iterable<Type> types = const [GAppFilterInput, _$GAppFilterInput];
  @override
  final String wireName = 'GAppFilterInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GAppFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GAppFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppInputSerializer implements StructuredSerializer<GAppInput> {
  @override
  final Iterable<Type> types = const [GAppInput, _$GAppInput];
  @override
  final String wireName = 'GAppInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GAppInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.permissions != null) {
      result
        ..add('permissions')
        ..add(serializers.serialize(object.permissions,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPermissionEnum)])));
    }
    return result;
  }

  @override
  GAppInput deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'permissions':
          result.permissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAppSortFieldSerializer implements PrimitiveSerializer<GAppSortField> {
  @override
  final Iterable<Type> types = const <Type>[GAppSortField];
  @override
  final String wireName = 'GAppSortField';

  @override
  Object serialize(Serializers serializers, GAppSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAppSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppSortField.valueOf(serialized as String);
}

class _$GAppSortingInputSerializer
    implements StructuredSerializer<GAppSortingInput> {
  @override
  final Iterable<Type> types = const [GAppSortingInput, _$GAppSortingInput];
  @override
  final String wireName = 'GAppSortingInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GAppSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GAppSortField)),
    ];

    return result;
  }

  @override
  GAppSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GAppSortField)) as GAppSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppTokenInputSerializer
    implements StructuredSerializer<GAppTokenInput> {
  @override
  final Iterable<Type> types = const [GAppTokenInput, _$GAppTokenInput];
  @override
  final String wireName = 'GAppTokenInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GAppTokenInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'app',
      serializers.serialize(object.app, specifiedType: const FullType(String)),
    ];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAppTokenInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppTokenInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'app':
          result.app = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeAssignInputSerializer
    implements StructuredSerializer<GAttributeAssignInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeAssignInput,
    _$GAttributeAssignInput
  ];
  @override
  final String wireName = 'GAttributeAssignInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAttributeAssignInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GAttributeTypeEnum)),
    ];

    return result;
  }

  @override
  GAttributeAssignInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeAssignInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeTypeEnum))
              as GAttributeTypeEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeCreateInputSerializer
    implements StructuredSerializer<GAttributeCreateInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeCreateInput,
    _$GAttributeCreateInput
  ];
  @override
  final String wireName = 'GAttributeCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAttributeCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    if (object.inputType != null) {
      result
        ..add('inputType')
        ..add(serializers.serialize(object.inputType,
            specifiedType: const FullType(GAttributeInputTypeEnum)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.values != null) {
      result
        ..add('values')
        ..add(serializers.serialize(object.values,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GAttributeValueCreateInput)])));
    }
    if (object.valueRequired != null) {
      result
        ..add('valueRequired')
        ..add(serializers.serialize(object.valueRequired,
            specifiedType: const FullType(bool)));
    }
    if (object.isVariantOnly != null) {
      result
        ..add('isVariantOnly')
        ..add(serializers.serialize(object.isVariantOnly,
            specifiedType: const FullType(bool)));
    }
    if (object.visibleInStorefront != null) {
      result
        ..add('visibleInStorefront')
        ..add(serializers.serialize(object.visibleInStorefront,
            specifiedType: const FullType(bool)));
    }
    if (object.filterableInStorefront != null) {
      result
        ..add('filterableInStorefront')
        ..add(serializers.serialize(object.filterableInStorefront,
            specifiedType: const FullType(bool)));
    }
    if (object.filterableInDashboard != null) {
      result
        ..add('filterableInDashboard')
        ..add(serializers.serialize(object.filterableInDashboard,
            specifiedType: const FullType(bool)));
    }
    if (object.storefrontSearchPosition != null) {
      result
        ..add('storefrontSearchPosition')
        ..add(serializers.serialize(object.storefrontSearchPosition,
            specifiedType: const FullType(int)));
    }
    if (object.availableInGrid != null) {
      result
        ..add('availableInGrid')
        ..add(serializers.serialize(object.availableInGrid,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GAttributeCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'inputType':
          result.inputType = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeInputTypeEnum))
              as GAttributeInputTypeEnum;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'values':
          result.values.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAttributeValueCreateInput)
              ])) as BuiltList<Object>);
          break;
        case 'valueRequired':
          result.valueRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'isVariantOnly':
          result.isVariantOnly = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'visibleInStorefront':
          result.visibleInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'filterableInStorefront':
          result.filterableInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'filterableInDashboard':
          result.filterableInDashboard = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'storefrontSearchPosition':
          result.storefrontSearchPosition = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'availableInGrid':
          result.availableInGrid = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeFilterInputSerializer
    implements StructuredSerializer<GAttributeFilterInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeFilterInput,
    _$GAttributeFilterInput
  ];
  @override
  final String wireName = 'GAttributeFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAttributeFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.valueRequired != null) {
      result
        ..add('valueRequired')
        ..add(serializers.serialize(object.valueRequired,
            specifiedType: const FullType(bool)));
    }
    if (object.isVariantOnly != null) {
      result
        ..add('isVariantOnly')
        ..add(serializers.serialize(object.isVariantOnly,
            specifiedType: const FullType(bool)));
    }
    if (object.visibleInStorefront != null) {
      result
        ..add('visibleInStorefront')
        ..add(serializers.serialize(object.visibleInStorefront,
            specifiedType: const FullType(bool)));
    }
    if (object.filterableInStorefront != null) {
      result
        ..add('filterableInStorefront')
        ..add(serializers.serialize(object.filterableInStorefront,
            specifiedType: const FullType(bool)));
    }
    if (object.filterableInDashboard != null) {
      result
        ..add('filterableInDashboard')
        ..add(serializers.serialize(object.filterableInDashboard,
            specifiedType: const FullType(bool)));
    }
    if (object.availableInGrid != null) {
      result
        ..add('availableInGrid')
        ..add(serializers.serialize(object.availableInGrid,
            specifiedType: const FullType(bool)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.ids != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(object.ids,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.inCollection != null) {
      result
        ..add('inCollection')
        ..add(serializers.serialize(object.inCollection,
            specifiedType: const FullType(String)));
    }
    if (object.inCategory != null) {
      result
        ..add('inCategory')
        ..add(serializers.serialize(object.inCategory,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAttributeFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'valueRequired':
          result.valueRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'isVariantOnly':
          result.isVariantOnly = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'visibleInStorefront':
          result.visibleInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'filterableInStorefront':
          result.filterableInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'filterableInDashboard':
          result.filterableInDashboard = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'availableInGrid':
          result.availableInGrid = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'inCollection':
          result.inCollection = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'inCategory':
          result.inCategory = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeInputSerializer
    implements StructuredSerializer<GAttributeInput> {
  @override
  final Iterable<Type> types = const [GAttributeInput, _$GAttributeInput];
  @override
  final String wireName = 'GAttributeInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GAttributeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'slug',
      serializers.serialize(object.slug, specifiedType: const FullType(String)),
    ];
    if (object.value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(object.value,
            specifiedType: const FullType(String)));
    }
    if (object.values != null) {
      result
        ..add('values')
        ..add(serializers.serialize(object.values,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GAttributeInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'values':
          result.values.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeInputTypeEnumSerializer
    implements PrimitiveSerializer<GAttributeInputTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeInputTypeEnum];
  @override
  final String wireName = 'GAttributeInputTypeEnum';

  @override
  Object serialize(Serializers serializers, GAttributeInputTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeInputTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeInputTypeEnum.valueOf(serialized as String);
}

class _$GAttributeSortFieldSerializer
    implements PrimitiveSerializer<GAttributeSortField> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeSortField];
  @override
  final String wireName = 'GAttributeSortField';

  @override
  Object serialize(Serializers serializers, GAttributeSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeSortField.valueOf(serialized as String);
}

class _$GAttributeSortingInputSerializer
    implements StructuredSerializer<GAttributeSortingInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeSortingInput,
    _$GAttributeSortingInput
  ];
  @override
  final String wireName = 'GAttributeSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAttributeSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GAttributeSortField)),
    ];

    return result;
  }

  @override
  GAttributeSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeSortField))
              as GAttributeSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeTypeEnumSerializer
    implements PrimitiveSerializer<GAttributeTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeTypeEnum];
  @override
  final String wireName = 'GAttributeTypeEnum';

  @override
  Object serialize(Serializers serializers, GAttributeTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeTypeEnum.valueOf(serialized as String);
}

class _$GAttributeUpdateInputSerializer
    implements StructuredSerializer<GAttributeUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeUpdateInput,
    _$GAttributeUpdateInput
  ];
  @override
  final String wireName = 'GAttributeUpdateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAttributeUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.removeValues != null) {
      result
        ..add('removeValues')
        ..add(serializers.serialize(object.removeValues,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.addValues != null) {
      result
        ..add('addValues')
        ..add(serializers.serialize(object.addValues,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GAttributeValueCreateInput)])));
    }
    if (object.valueRequired != null) {
      result
        ..add('valueRequired')
        ..add(serializers.serialize(object.valueRequired,
            specifiedType: const FullType(bool)));
    }
    if (object.isVariantOnly != null) {
      result
        ..add('isVariantOnly')
        ..add(serializers.serialize(object.isVariantOnly,
            specifiedType: const FullType(bool)));
    }
    if (object.visibleInStorefront != null) {
      result
        ..add('visibleInStorefront')
        ..add(serializers.serialize(object.visibleInStorefront,
            specifiedType: const FullType(bool)));
    }
    if (object.filterableInStorefront != null) {
      result
        ..add('filterableInStorefront')
        ..add(serializers.serialize(object.filterableInStorefront,
            specifiedType: const FullType(bool)));
    }
    if (object.filterableInDashboard != null) {
      result
        ..add('filterableInDashboard')
        ..add(serializers.serialize(object.filterableInDashboard,
            specifiedType: const FullType(bool)));
    }
    if (object.storefrontSearchPosition != null) {
      result
        ..add('storefrontSearchPosition')
        ..add(serializers.serialize(object.storefrontSearchPosition,
            specifiedType: const FullType(int)));
    }
    if (object.availableInGrid != null) {
      result
        ..add('availableInGrid')
        ..add(serializers.serialize(object.availableInGrid,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GAttributeUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'removeValues':
          result.removeValues.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'addValues':
          result.addValues.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAttributeValueCreateInput)
              ])) as BuiltList<Object>);
          break;
        case 'valueRequired':
          result.valueRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'isVariantOnly':
          result.isVariantOnly = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'visibleInStorefront':
          result.visibleInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'filterableInStorefront':
          result.filterableInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'filterableInDashboard':
          result.filterableInDashboard = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'storefrontSearchPosition':
          result.storefrontSearchPosition = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'availableInGrid':
          result.availableInGrid = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueCreateInputSerializer
    implements StructuredSerializer<GAttributeValueCreateInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeValueCreateInput,
    _$GAttributeValueCreateInput
  ];
  @override
  final String wireName = 'GAttributeValueCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAttributeValueCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GAttributeValueCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeValueCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueInputSerializer
    implements StructuredSerializer<GAttributeValueInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeValueInput,
    _$GAttributeValueInput
  ];
  @override
  final String wireName = 'GAttributeValueInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAttributeValueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.id != null) {
      result
        ..add('id')
        ..add(serializers.serialize(object.id,
            specifiedType: const FullType(String)));
    }
    if (object.values != null) {
      result
        ..add('values')
        ..add(serializers.serialize(object.values,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GAttributeValueInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeValueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'values':
          result.values.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueTypeSerializer
    implements PrimitiveSerializer<GAttributeValueType> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeValueType];
  @override
  final String wireName = 'GAttributeValueType';

  @override
  Object serialize(Serializers serializers, GAttributeValueType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeValueType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeValueType.valueOf(serialized as String);
}

class _$GAuthorizationKeyInputSerializer
    implements StructuredSerializer<GAuthorizationKeyInput> {
  @override
  final Iterable<Type> types = const [
    GAuthorizationKeyInput,
    _$GAuthorizationKeyInput
  ];
  @override
  final String wireName = 'GAuthorizationKeyInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GAuthorizationKeyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'password',
      serializers.serialize(object.password,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GAuthorizationKeyInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAuthorizationKeyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'password':
          result.password = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAuthorizationKeyTypeSerializer
    implements PrimitiveSerializer<GAuthorizationKeyType> {
  @override
  final Iterable<Type> types = const <Type>[GAuthorizationKeyType];
  @override
  final String wireName = 'GAuthorizationKeyType';

  @override
  Object serialize(Serializers serializers, GAuthorizationKeyType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAuthorizationKeyType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAuthorizationKeyType.valueOf(serialized as String);
}

class _$GCatalogueInputSerializer
    implements StructuredSerializer<GCatalogueInput> {
  @override
  final Iterable<Type> types = const [GCatalogueInput, _$GCatalogueInput];
  @override
  final String wireName = 'GCatalogueInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GCatalogueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.products != null) {
      result
        ..add('products')
        ..add(serializers.serialize(object.products,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.categories != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(object.categories,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.collections != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(object.collections,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCatalogueInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCatalogueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCategoryFilterInputSerializer
    implements StructuredSerializer<GCategoryFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCategoryFilterInput,
    _$GCategoryFilterInput
  ];
  @override
  final String wireName = 'GCategoryFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GCategoryFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.ids != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(object.ids,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCategoryFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategoryFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCategoryInputSerializer
    implements StructuredSerializer<GCategoryInput> {
  @override
  final Iterable<Type> types = const [GCategoryInput, _$GCategoryInput];
  @override
  final String wireName = 'GCategoryInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GCategoryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    if (object.descriptionJson != null) {
      result
        ..add('descriptionJson')
        ..add(serializers.serialize(object.descriptionJson,
            specifiedType: const FullType(GJSONString)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.seo != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(object.seo,
            specifiedType: const FullType(GSeoInput)));
    }
    if (object.backgroundImage != null) {
      result
        ..add('backgroundImage')
        ..add(serializers.serialize(object.backgroundImage,
            specifiedType: const FullType(GUpload)));
    }
    if (object.backgroundImageAlt != null) {
      result
        ..add('backgroundImageAlt')
        ..add(serializers.serialize(object.backgroundImageAlt,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCategoryInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategoryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'descriptionJson':
          result.descriptionJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput)) as GSeoInput);
          break;
        case 'backgroundImage':
          result.backgroundImage.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload)) as GUpload);
          break;
        case 'backgroundImageAlt':
          result.backgroundImageAlt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCategorySortFieldSerializer
    implements PrimitiveSerializer<GCategorySortField> {
  @override
  final Iterable<Type> types = const <Type>[GCategorySortField];
  @override
  final String wireName = 'GCategorySortField';

  @override
  Object serialize(Serializers serializers, GCategorySortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCategorySortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCategorySortField.valueOf(serialized as String);
}

class _$GCategorySortingInputSerializer
    implements StructuredSerializer<GCategorySortingInput> {
  @override
  final Iterable<Type> types = const [
    GCategorySortingInput,
    _$GCategorySortingInput
  ];
  @override
  final String wireName = 'GCategorySortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GCategorySortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GCategorySortField)),
    ];

    return result;
  }

  @override
  GCategorySortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategorySortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GCategorySortField))
              as GCategorySortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutCreateInputSerializer
    implements StructuredSerializer<GCheckoutCreateInput> {
  @override
  final Iterable<Type> types = const [
    GCheckoutCreateInput,
    _$GCheckoutCreateInput
  ];
  @override
  final String wireName = 'GCheckoutCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GCheckoutCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.lines != null) {
      result
        ..add('lines')
        ..add(serializers.serialize(object.lines,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GCheckoutLineInput)])));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.shippingAddress != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(object.shippingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.billingAddress != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(object.billingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    return result;
  }

  @override
  GCheckoutCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'lines':
          result.lines.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GCheckoutLineInput)]))
              as BuiltList<Object>);
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutErrorCodeSerializer
    implements PrimitiveSerializer<GCheckoutErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GCheckoutErrorCode];
  @override
  final String wireName = 'GCheckoutErrorCode';

  @override
  Object serialize(Serializers serializers, GCheckoutErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCheckoutErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCheckoutErrorCode.valueOf(serialized as String);
}

class _$GCheckoutLineInputSerializer
    implements StructuredSerializer<GCheckoutLineInput> {
  @override
  final Iterable<Type> types = const [GCheckoutLineInput, _$GCheckoutLineInput];
  @override
  final String wireName = 'GCheckoutLineInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GCheckoutLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
      'variantId',
      serializers.serialize(object.variantId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GCheckoutLineInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'variantId':
          result.variantId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionCreateInputSerializer
    implements StructuredSerializer<GCollectionCreateInput> {
  @override
  final Iterable<Type> types = const [
    GCollectionCreateInput,
    _$GCollectionCreateInput
  ];
  @override
  final String wireName = 'GCollectionCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GCollectionCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.isPublished != null) {
      result
        ..add('isPublished')
        ..add(serializers.serialize(object.isPublished,
            specifiedType: const FullType(bool)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    if (object.descriptionJson != null) {
      result
        ..add('descriptionJson')
        ..add(serializers.serialize(object.descriptionJson,
            specifiedType: const FullType(GJSONString)));
    }
    if (object.backgroundImage != null) {
      result
        ..add('backgroundImage')
        ..add(serializers.serialize(object.backgroundImage,
            specifiedType: const FullType(GUpload)));
    }
    if (object.backgroundImageAlt != null) {
      result
        ..add('backgroundImageAlt')
        ..add(serializers.serialize(object.backgroundImageAlt,
            specifiedType: const FullType(String)));
    }
    if (object.seo != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(object.seo,
            specifiedType: const FullType(GSeoInput)));
    }
    if (object.publicationDate != null) {
      result
        ..add('publicationDate')
        ..add(serializers.serialize(object.publicationDate,
            specifiedType: const FullType(GDate)));
    }
    if (object.products != null) {
      result
        ..add('products')
        ..add(serializers.serialize(object.products,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCollectionCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'descriptionJson':
          result.descriptionJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
        case 'backgroundImage':
          result.backgroundImage.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload)) as GUpload);
          break;
        case 'backgroundImageAlt':
          result.backgroundImageAlt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput)) as GSeoInput);
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionFilterInputSerializer
    implements StructuredSerializer<GCollectionFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCollectionFilterInput,
    _$GCollectionFilterInput
  ];
  @override
  final String wireName = 'GCollectionFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GCollectionFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.published != null) {
      result
        ..add('published')
        ..add(serializers.serialize(object.published,
            specifiedType: const FullType(GCollectionPublished)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.ids != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(object.ids,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCollectionFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'published':
          result.published = serializers.deserialize(value,
                  specifiedType: const FullType(GCollectionPublished))
              as GCollectionPublished;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionInputSerializer
    implements StructuredSerializer<GCollectionInput> {
  @override
  final Iterable<Type> types = const [GCollectionInput, _$GCollectionInput];
  @override
  final String wireName = 'GCollectionInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GCollectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.isPublished != null) {
      result
        ..add('isPublished')
        ..add(serializers.serialize(object.isPublished,
            specifiedType: const FullType(bool)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    if (object.descriptionJson != null) {
      result
        ..add('descriptionJson')
        ..add(serializers.serialize(object.descriptionJson,
            specifiedType: const FullType(GJSONString)));
    }
    if (object.backgroundImage != null) {
      result
        ..add('backgroundImage')
        ..add(serializers.serialize(object.backgroundImage,
            specifiedType: const FullType(GUpload)));
    }
    if (object.backgroundImageAlt != null) {
      result
        ..add('backgroundImageAlt')
        ..add(serializers.serialize(object.backgroundImageAlt,
            specifiedType: const FullType(String)));
    }
    if (object.seo != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(object.seo,
            specifiedType: const FullType(GSeoInput)));
    }
    if (object.publicationDate != null) {
      result
        ..add('publicationDate')
        ..add(serializers.serialize(object.publicationDate,
            specifiedType: const FullType(GDate)));
    }
    return result;
  }

  @override
  GCollectionInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'descriptionJson':
          result.descriptionJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
        case 'backgroundImage':
          result.backgroundImage.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload)) as GUpload);
          break;
        case 'backgroundImageAlt':
          result.backgroundImageAlt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput)) as GSeoInput);
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionPublishedSerializer
    implements PrimitiveSerializer<GCollectionPublished> {
  @override
  final Iterable<Type> types = const <Type>[GCollectionPublished];
  @override
  final String wireName = 'GCollectionPublished';

  @override
  Object serialize(Serializers serializers, GCollectionPublished object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCollectionPublished deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCollectionPublished.valueOf(serialized as String);
}

class _$GCollectionSortFieldSerializer
    implements PrimitiveSerializer<GCollectionSortField> {
  @override
  final Iterable<Type> types = const <Type>[GCollectionSortField];
  @override
  final String wireName = 'GCollectionSortField';

  @override
  Object serialize(Serializers serializers, GCollectionSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCollectionSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCollectionSortField.valueOf(serialized as String);
}

class _$GCollectionSortingInputSerializer
    implements StructuredSerializer<GCollectionSortingInput> {
  @override
  final Iterable<Type> types = const [
    GCollectionSortingInput,
    _$GCollectionSortingInput
  ];
  @override
  final String wireName = 'GCollectionSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GCollectionSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GCollectionSortField)),
    ];

    return result;
  }

  @override
  GCollectionSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GCollectionSortField))
              as GCollectionSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigurationItemInputSerializer
    implements StructuredSerializer<GConfigurationItemInput> {
  @override
  final Iterable<Type> types = const [
    GConfigurationItemInput,
    _$GConfigurationItemInput
  ];
  @override
  final String wireName = 'GConfigurationItemInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GConfigurationItemInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    if (object.value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(object.value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GConfigurationItemInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigurationItemInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigurationTypeFieldEnumSerializer
    implements PrimitiveSerializer<GConfigurationTypeFieldEnum> {
  @override
  final Iterable<Type> types = const <Type>[GConfigurationTypeFieldEnum];
  @override
  final String wireName = 'GConfigurationTypeFieldEnum';

  @override
  Object serialize(Serializers serializers, GConfigurationTypeFieldEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GConfigurationTypeFieldEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GConfigurationTypeFieldEnum.valueOf(serialized as String);
}

class _$GCountryCodeSerializer implements PrimitiveSerializer<GCountryCode> {
  @override
  final Iterable<Type> types = const <Type>[GCountryCode];
  @override
  final String wireName = 'GCountryCode';

  @override
  Object serialize(Serializers serializers, GCountryCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCountryCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCountryCode.valueOf(serialized as String);
}

class _$GCustomerEventsEnumSerializer
    implements PrimitiveSerializer<GCustomerEventsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GCustomerEventsEnum];
  @override
  final String wireName = 'GCustomerEventsEnum';

  @override
  Object serialize(Serializers serializers, GCustomerEventsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCustomerEventsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCustomerEventsEnum.valueOf(serialized as String);
}

class _$GCustomerFilterInputSerializer
    implements StructuredSerializer<GCustomerFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCustomerFilterInput,
    _$GCustomerFilterInput
  ];
  @override
  final String wireName = 'GCustomerFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GCustomerFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.dateJoined != null) {
      result
        ..add('dateJoined')
        ..add(serializers.serialize(object.dateJoined,
            specifiedType: const FullType(GDateRangeInput)));
    }
    if (object.moneySpent != null) {
      result
        ..add('moneySpent')
        ..add(serializers.serialize(object.moneySpent,
            specifiedType: const FullType(GPriceRangeInput)));
    }
    if (object.numberOfOrders != null) {
      result
        ..add('numberOfOrders')
        ..add(serializers.serialize(object.numberOfOrders,
            specifiedType: const FullType(GIntRangeInput)));
    }
    if (object.placedOrders != null) {
      result
        ..add('placedOrders')
        ..add(serializers.serialize(object.placedOrders,
            specifiedType: const FullType(GDateRangeInput)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCustomerFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'dateJoined':
          result.dateJoined.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))
              as GDateRangeInput);
          break;
        case 'moneySpent':
          result.moneySpent.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPriceRangeInput))
              as GPriceRangeInput);
          break;
        case 'numberOfOrders':
          result.numberOfOrders.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIntRangeInput)) as GIntRangeInput);
          break;
        case 'placedOrders':
          result.placedOrders.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))
              as GDateRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCustomerInputSerializer
    implements StructuredSerializer<GCustomerInput> {
  @override
  final Iterable<Type> types = const [GCustomerInput, _$GCustomerInput];
  @override
  final String wireName = 'GCustomerInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GCustomerInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.defaultBillingAddress != null) {
      result
        ..add('defaultBillingAddress')
        ..add(serializers.serialize(object.defaultBillingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.defaultShippingAddress != null) {
      result
        ..add('defaultShippingAddress')
        ..add(serializers.serialize(object.defaultShippingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.firstName != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(object.firstName,
            specifiedType: const FullType(String)));
    }
    if (object.lastName != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(object.lastName,
            specifiedType: const FullType(String)));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.note != null) {
      result
        ..add('note')
        ..add(serializers.serialize(object.note,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCustomerInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'defaultBillingAddress':
          result.defaultBillingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'defaultShippingAddress':
          result.defaultShippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDateRangeInputSerializer
    implements StructuredSerializer<GDateRangeInput> {
  @override
  final Iterable<Type> types = const [GDateRangeInput, _$GDateRangeInput];
  @override
  final String wireName = 'GDateRangeInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GDateRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.gte != null) {
      result
        ..add('gte')
        ..add(serializers.serialize(object.gte,
            specifiedType: const FullType(GDate)));
    }
    if (object.lte != null) {
      result
        ..add('lte')
        ..add(serializers.serialize(object.lte,
            specifiedType: const FullType(GDate)));
    }
    return result;
  }

  @override
  GDateRangeInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDateRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'lte':
          result.lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
      }
    }

    return result.build();
  }
}

class _$GDateTimeRangeInputSerializer
    implements StructuredSerializer<GDateTimeRangeInput> {
  @override
  final Iterable<Type> types = const [
    GDateTimeRangeInput,
    _$GDateTimeRangeInput
  ];
  @override
  final String wireName = 'GDateTimeRangeInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GDateTimeRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.gte != null) {
      result
        ..add('gte')
        ..add(serializers.serialize(object.gte,
            specifiedType: const FullType(GDateTime)));
    }
    if (object.lte != null) {
      result
        ..add('lte')
        ..add(serializers.serialize(object.lte,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GDateTimeRangeInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDateTimeRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime)) as GDateTime);
          break;
        case 'lte':
          result.lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime)) as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GDigitalContentInputSerializer
    implements StructuredSerializer<GDigitalContentInput> {
  @override
  final Iterable<Type> types = const [
    GDigitalContentInput,
    _$GDigitalContentInput
  ];
  @override
  final String wireName = 'GDigitalContentInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GDigitalContentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'useDefaultSettings',
      serializers.serialize(object.useDefaultSettings,
          specifiedType: const FullType(bool)),
    ];
    if (object.maxDownloads != null) {
      result
        ..add('maxDownloads')
        ..add(serializers.serialize(object.maxDownloads,
            specifiedType: const FullType(int)));
    }
    if (object.urlValidDays != null) {
      result
        ..add('urlValidDays')
        ..add(serializers.serialize(object.urlValidDays,
            specifiedType: const FullType(int)));
    }
    if (object.automaticFulfillment != null) {
      result
        ..add('automaticFulfillment')
        ..add(serializers.serialize(object.automaticFulfillment,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GDigitalContentInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDigitalContentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'useDefaultSettings':
          result.useDefaultSettings = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'maxDownloads':
          result.maxDownloads = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'urlValidDays':
          result.urlValidDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'automaticFulfillment':
          result.automaticFulfillment = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GDigitalContentUploadInputSerializer
    implements StructuredSerializer<GDigitalContentUploadInput> {
  @override
  final Iterable<Type> types = const [
    GDigitalContentUploadInput,
    _$GDigitalContentUploadInput
  ];
  @override
  final String wireName = 'GDigitalContentUploadInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GDigitalContentUploadInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'useDefaultSettings',
      serializers.serialize(object.useDefaultSettings,
          specifiedType: const FullType(bool)),
      'contentFile',
      serializers.serialize(object.contentFile,
          specifiedType: const FullType(GUpload)),
    ];
    if (object.maxDownloads != null) {
      result
        ..add('maxDownloads')
        ..add(serializers.serialize(object.maxDownloads,
            specifiedType: const FullType(int)));
    }
    if (object.urlValidDays != null) {
      result
        ..add('urlValidDays')
        ..add(serializers.serialize(object.urlValidDays,
            specifiedType: const FullType(int)));
    }
    if (object.automaticFulfillment != null) {
      result
        ..add('automaticFulfillment')
        ..add(serializers.serialize(object.automaticFulfillment,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GDigitalContentUploadInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDigitalContentUploadInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'useDefaultSettings':
          result.useDefaultSettings = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'maxDownloads':
          result.maxDownloads = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'urlValidDays':
          result.urlValidDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'automaticFulfillment':
          result.automaticFulfillment = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'contentFile':
          result.contentFile.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload)) as GUpload);
          break;
      }
    }

    return result.build();
  }
}

class _$GDigitalContentUrlCreateInputSerializer
    implements StructuredSerializer<GDigitalContentUrlCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDigitalContentUrlCreateInput,
    _$GDigitalContentUrlCreateInput
  ];
  @override
  final String wireName = 'GDigitalContentUrlCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GDigitalContentUrlCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'content',
      serializers.serialize(object.content,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDigitalContentUrlCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDigitalContentUrlCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDiscountErrorCodeSerializer
    implements PrimitiveSerializer<GDiscountErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GDiscountErrorCode];
  @override
  final String wireName = 'GDiscountErrorCode';

  @override
  Object serialize(Serializers serializers, GDiscountErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDiscountErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiscountErrorCode.valueOf(serialized as String);
}

class _$GDiscountStatusEnumSerializer
    implements PrimitiveSerializer<GDiscountStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDiscountStatusEnum];
  @override
  final String wireName = 'GDiscountStatusEnum';

  @override
  Object serialize(Serializers serializers, GDiscountStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDiscountStatusEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiscountStatusEnum.valueOf(serialized as String);
}

class _$GDiscountValueTypeEnumSerializer
    implements PrimitiveSerializer<GDiscountValueTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDiscountValueTypeEnum];
  @override
  final String wireName = 'GDiscountValueTypeEnum';

  @override
  Object serialize(Serializers serializers, GDiscountValueTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDiscountValueTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiscountValueTypeEnum.valueOf(serialized as String);
}

class _$GDraftOrderCreateInputSerializer
    implements StructuredSerializer<GDraftOrderCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDraftOrderCreateInput,
    _$GDraftOrderCreateInput
  ];
  @override
  final String wireName = 'GDraftOrderCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GDraftOrderCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.billingAddress != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(object.billingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.user != null) {
      result
        ..add('user')
        ..add(serializers.serialize(object.user,
            specifiedType: const FullType(String)));
    }
    if (object.userEmail != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(object.userEmail,
            specifiedType: const FullType(String)));
    }
    if (object.discount != null) {
      result
        ..add('discount')
        ..add(serializers.serialize(object.discount,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.shippingAddress != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(object.shippingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.shippingMethod != null) {
      result
        ..add('shippingMethod')
        ..add(serializers.serialize(object.shippingMethod,
            specifiedType: const FullType(String)));
    }
    if (object.voucher != null) {
      result
        ..add('voucher')
        ..add(serializers.serialize(object.voucher,
            specifiedType: const FullType(String)));
    }
    if (object.customerNote != null) {
      result
        ..add('customerNote')
        ..add(serializers.serialize(object.customerNote,
            specifiedType: const FullType(String)));
    }
    if (object.lines != null) {
      result
        ..add('lines')
        ..add(serializers.serialize(object.lines,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderLineCreateInput)])));
    }
    return result;
  }

  @override
  GDraftOrderCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDraftOrderCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'discount':
          result.discount.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'shippingMethod':
          result.shippingMethod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'voucher':
          result.voucher = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'customerNote':
          result.customerNote = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'lines':
          result.lines.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GOrderLineCreateInput)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDraftOrderInputSerializer
    implements StructuredSerializer<GDraftOrderInput> {
  @override
  final Iterable<Type> types = const [GDraftOrderInput, _$GDraftOrderInput];
  @override
  final String wireName = 'GDraftOrderInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GDraftOrderInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.billingAddress != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(object.billingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.user != null) {
      result
        ..add('user')
        ..add(serializers.serialize(object.user,
            specifiedType: const FullType(String)));
    }
    if (object.userEmail != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(object.userEmail,
            specifiedType: const FullType(String)));
    }
    if (object.discount != null) {
      result
        ..add('discount')
        ..add(serializers.serialize(object.discount,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.shippingAddress != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(object.shippingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.shippingMethod != null) {
      result
        ..add('shippingMethod')
        ..add(serializers.serialize(object.shippingMethod,
            specifiedType: const FullType(String)));
    }
    if (object.voucher != null) {
      result
        ..add('voucher')
        ..add(serializers.serialize(object.voucher,
            specifiedType: const FullType(String)));
    }
    if (object.customerNote != null) {
      result
        ..add('customerNote')
        ..add(serializers.serialize(object.customerNote,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDraftOrderInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDraftOrderInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'discount':
          result.discount.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'shippingMethod':
          result.shippingMethod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'voucher':
          result.voucher = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'customerNote':
          result.customerNote = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GFulfillmentCancelInputSerializer
    implements StructuredSerializer<GFulfillmentCancelInput> {
  @override
  final Iterable<Type> types = const [
    GFulfillmentCancelInput,
    _$GFulfillmentCancelInput
  ];
  @override
  final String wireName = 'GFulfillmentCancelInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GFulfillmentCancelInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'warehouseId',
      serializers.serialize(object.warehouseId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GFulfillmentCancelInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFulfillmentCancelInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'warehouseId':
          result.warehouseId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GFulfillmentStatusSerializer
    implements PrimitiveSerializer<GFulfillmentStatus> {
  @override
  final Iterable<Type> types = const <Type>[GFulfillmentStatus];
  @override
  final String wireName = 'GFulfillmentStatus';

  @override
  Object serialize(Serializers serializers, GFulfillmentStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GFulfillmentStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GFulfillmentStatus.valueOf(serialized as String);
}

class _$GFulfillmentUpdateTrackingInputSerializer
    implements StructuredSerializer<GFulfillmentUpdateTrackingInput> {
  @override
  final Iterable<Type> types = const [
    GFulfillmentUpdateTrackingInput,
    _$GFulfillmentUpdateTrackingInput
  ];
  @override
  final String wireName = 'GFulfillmentUpdateTrackingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GFulfillmentUpdateTrackingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.trackingNumber != null) {
      result
        ..add('trackingNumber')
        ..add(serializers.serialize(object.trackingNumber,
            specifiedType: const FullType(String)));
    }
    if (object.notifyCustomer != null) {
      result
        ..add('notifyCustomer')
        ..add(serializers.serialize(object.notifyCustomer,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GFulfillmentUpdateTrackingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFulfillmentUpdateTrackingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'trackingNumber':
          result.trackingNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'notifyCustomer':
          result.notifyCustomer = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardCreateInputSerializer
    implements StructuredSerializer<GGiftCardCreateInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardCreateInput,
    _$GGiftCardCreateInput
  ];
  @override
  final String wireName = 'GGiftCardCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GGiftCardCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.startDate != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(object.startDate,
            specifiedType: const FullType(GDate)));
    }
    if (object.endDate != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(object.endDate,
            specifiedType: const FullType(GDate)));
    }
    if (object.balance != null) {
      result
        ..add('balance')
        ..add(serializers.serialize(object.balance,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.userEmail != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(object.userEmail,
            specifiedType: const FullType(String)));
    }
    if (object.code != null) {
      result
        ..add('code')
        ..add(serializers.serialize(object.code,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGiftCardCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'balance':
          result.balance.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardErrorCodeSerializer
    implements PrimitiveSerializer<GGiftCardErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GGiftCardErrorCode];
  @override
  final String wireName = 'GGiftCardErrorCode';

  @override
  Object serialize(Serializers serializers, GGiftCardErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGiftCardErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGiftCardErrorCode.valueOf(serialized as String);
}

class _$GGiftCardUpdateInputSerializer
    implements StructuredSerializer<GGiftCardUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardUpdateInput,
    _$GGiftCardUpdateInput
  ];
  @override
  final String wireName = 'GGiftCardUpdateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GGiftCardUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.startDate != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(object.startDate,
            specifiedType: const FullType(GDate)));
    }
    if (object.endDate != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(object.endDate,
            specifiedType: const FullType(GDate)));
    }
    if (object.balance != null) {
      result
        ..add('balance')
        ..add(serializers.serialize(object.balance,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.userEmail != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(object.userEmail,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGiftCardUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'balance':
          result.balance.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GIntRangeInputSerializer
    implements StructuredSerializer<GIntRangeInput> {
  @override
  final Iterable<Type> types = const [GIntRangeInput, _$GIntRangeInput];
  @override
  final String wireName = 'GIntRangeInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GIntRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.gte != null) {
      result
        ..add('gte')
        ..add(serializers.serialize(object.gte,
            specifiedType: const FullType(int)));
    }
    if (object.lte != null) {
      result
        ..add('lte')
        ..add(serializers.serialize(object.lte,
            specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GIntRangeInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIntRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'lte':
          result.lte = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GLanguageCodeEnumSerializer
    implements PrimitiveSerializer<GLanguageCodeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GLanguageCodeEnum];
  @override
  final String wireName = 'GLanguageCodeEnum';

  @override
  Object serialize(Serializers serializers, GLanguageCodeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GLanguageCodeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GLanguageCodeEnum.valueOf(serialized as String);
}

class _$GMenuCreateInputSerializer
    implements StructuredSerializer<GMenuCreateInput> {
  @override
  final Iterable<Type> types = const [GMenuCreateInput, _$GMenuCreateInput];
  @override
  final String wireName = 'GMenuCreateInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMenuCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    if (object.items != null) {
      result
        ..add('items')
        ..add(serializers.serialize(object.items,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMenuItemInput)])));
    }
    return result;
  }

  @override
  GMenuCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'items':
          result.items.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMenuItemInput)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuErrorCodeSerializer
    implements PrimitiveSerializer<GMenuErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GMenuErrorCode];
  @override
  final String wireName = 'GMenuErrorCode';

  @override
  Object serialize(Serializers serializers, GMenuErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMenuErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMenuErrorCode.valueOf(serialized as String);
}

class _$GMenuFilterInputSerializer
    implements StructuredSerializer<GMenuFilterInput> {
  @override
  final Iterable<Type> types = const [GMenuFilterInput, _$GMenuFilterInput];
  @override
  final String wireName = 'GMenuFilterInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMenuFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuInputSerializer implements StructuredSerializer<GMenuInput> {
  @override
  final Iterable<Type> types = const [GMenuInput, _$GMenuInput];
  @override
  final String wireName = 'GMenuInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMenuInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuInput deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemCreateInputSerializer
    implements StructuredSerializer<GMenuItemCreateInput> {
  @override
  final Iterable<Type> types = const [
    GMenuItemCreateInput,
    _$GMenuItemCreateInput
  ];
  @override
  final String wireName = 'GMenuItemCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GMenuItemCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'menu',
      serializers.serialize(object.menu, specifiedType: const FullType(String)),
    ];
    if (object.url != null) {
      result
        ..add('url')
        ..add(serializers.serialize(object.url,
            specifiedType: const FullType(String)));
    }
    if (object.category != null) {
      result
        ..add('category')
        ..add(serializers.serialize(object.category,
            specifiedType: const FullType(String)));
    }
    if (object.collection != null) {
      result
        ..add('collection')
        ..add(serializers.serialize(object.collection,
            specifiedType: const FullType(String)));
    }
    if (object.page != null) {
      result
        ..add('page')
        ..add(serializers.serialize(object.page,
            specifiedType: const FullType(String)));
    }
    if (object.parent != null) {
      result
        ..add('parent')
        ..add(serializers.serialize(object.parent,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuItemCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'collection':
          result.collection = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'page':
          result.page = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'menu':
          result.menu = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'parent':
          result.parent = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemFilterInputSerializer
    implements StructuredSerializer<GMenuItemFilterInput> {
  @override
  final Iterable<Type> types = const [
    GMenuItemFilterInput,
    _$GMenuItemFilterInput
  ];
  @override
  final String wireName = 'GMenuItemFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GMenuItemFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuItemFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemInputSerializer
    implements StructuredSerializer<GMenuItemInput> {
  @override
  final Iterable<Type> types = const [GMenuItemInput, _$GMenuItemInput];
  @override
  final String wireName = 'GMenuItemInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMenuItemInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.url != null) {
      result
        ..add('url')
        ..add(serializers.serialize(object.url,
            specifiedType: const FullType(String)));
    }
    if (object.category != null) {
      result
        ..add('category')
        ..add(serializers.serialize(object.category,
            specifiedType: const FullType(String)));
    }
    if (object.collection != null) {
      result
        ..add('collection')
        ..add(serializers.serialize(object.collection,
            specifiedType: const FullType(String)));
    }
    if (object.page != null) {
      result
        ..add('page')
        ..add(serializers.serialize(object.page,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuItemInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'collection':
          result.collection = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'page':
          result.page = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemMoveInputSerializer
    implements StructuredSerializer<GMenuItemMoveInput> {
  @override
  final Iterable<Type> types = const [GMenuItemMoveInput, _$GMenuItemMoveInput];
  @override
  final String wireName = 'GMenuItemMoveInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMenuItemMoveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'itemId',
      serializers.serialize(object.itemId,
          specifiedType: const FullType(String)),
    ];
    if (object.parentId != null) {
      result
        ..add('parentId')
        ..add(serializers.serialize(object.parentId,
            specifiedType: const FullType(String)));
    }
    if (object.sortOrder != null) {
      result
        ..add('sortOrder')
        ..add(serializers.serialize(object.sortOrder,
            specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GMenuItemMoveInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemMoveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'itemId':
          result.itemId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'parentId':
          result.parentId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'sortOrder':
          result.sortOrder = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemSortingInputSerializer
    implements StructuredSerializer<GMenuItemSortingInput> {
  @override
  final Iterable<Type> types = const [
    GMenuItemSortingInput,
    _$GMenuItemSortingInput
  ];
  @override
  final String wireName = 'GMenuItemSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GMenuItemSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GMenuItemsSortField)),
    ];

    return result;
  }

  @override
  GMenuItemSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GMenuItemsSortField))
              as GMenuItemsSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemsSortFieldSerializer
    implements PrimitiveSerializer<GMenuItemsSortField> {
  @override
  final Iterable<Type> types = const <Type>[GMenuItemsSortField];
  @override
  final String wireName = 'GMenuItemsSortField';

  @override
  Object serialize(Serializers serializers, GMenuItemsSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMenuItemsSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMenuItemsSortField.valueOf(serialized as String);
}

class _$GMenuSortFieldSerializer
    implements PrimitiveSerializer<GMenuSortField> {
  @override
  final Iterable<Type> types = const <Type>[GMenuSortField];
  @override
  final String wireName = 'GMenuSortField';

  @override
  Object serialize(Serializers serializers, GMenuSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMenuSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMenuSortField.valueOf(serialized as String);
}

class _$GMenuSortingInputSerializer
    implements StructuredSerializer<GMenuSortingInput> {
  @override
  final Iterable<Type> types = const [GMenuSortingInput, _$GMenuSortingInput];
  @override
  final String wireName = 'GMenuSortingInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMenuSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GMenuSortField)),
    ];

    return result;
  }

  @override
  GMenuSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GMenuSortField)) as GMenuSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GMetaInputSerializer implements StructuredSerializer<GMetaInput> {
  @override
  final Iterable<Type> types = const [GMetaInput, _$GMetaInput];
  @override
  final String wireName = 'GMetaInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMetaInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'namespace',
      serializers.serialize(object.namespace,
          specifiedType: const FullType(String)),
      'clientName',
      serializers.serialize(object.clientName,
          specifiedType: const FullType(String)),
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GMetaInput deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMetaInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'namespace':
          result.namespace = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'clientName':
          result.clientName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMetaPathSerializer implements StructuredSerializer<GMetaPath> {
  @override
  final Iterable<Type> types = const [GMetaPath, _$GMetaPath];
  @override
  final String wireName = 'GMetaPath';

  @override
  Iterable<Object> serialize(Serializers serializers, GMetaPath object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'namespace',
      serializers.serialize(object.namespace,
          specifiedType: const FullType(String)),
      'clientName',
      serializers.serialize(object.clientName,
          specifiedType: const FullType(String)),
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GMetaPath deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMetaPathBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'namespace':
          result.namespace = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'clientName':
          result.clientName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMetadataErrorCodeSerializer
    implements PrimitiveSerializer<GMetadataErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GMetadataErrorCode];
  @override
  final String wireName = 'GMetadataErrorCode';

  @override
  Object serialize(Serializers serializers, GMetadataErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMetadataErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMetadataErrorCode.valueOf(serialized as String);
}

class _$GMetadataInputSerializer
    implements StructuredSerializer<GMetadataInput> {
  @override
  final Iterable<Type> types = const [GMetadataInput, _$GMetadataInput];
  @override
  final String wireName = 'GMetadataInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMetadataInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GMetadataInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMetadataInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMoveProductInputSerializer
    implements StructuredSerializer<GMoveProductInput> {
  @override
  final Iterable<Type> types = const [GMoveProductInput, _$GMoveProductInput];
  @override
  final String wireName = 'GMoveProductInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GMoveProductInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'productId',
      serializers.serialize(object.productId,
          specifiedType: const FullType(String)),
    ];
    if (object.sortOrder != null) {
      result
        ..add('sortOrder')
        ..add(serializers.serialize(object.sortOrder,
            specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GMoveProductInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMoveProductInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'productId':
          result.productId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'sortOrder':
          result.sortOrder = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GNameTranslationInputSerializer
    implements StructuredSerializer<GNameTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GNameTranslationInput,
    _$GNameTranslationInput
  ];
  @override
  final String wireName = 'GNameTranslationInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GNameTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNameTranslationInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNameTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GNavigationTypeSerializer
    implements PrimitiveSerializer<GNavigationType> {
  @override
  final Iterable<Type> types = const <Type>[GNavigationType];
  @override
  final String wireName = 'GNavigationType';

  @override
  Object serialize(Serializers serializers, GNavigationType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GNavigationType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GNavigationType.valueOf(serialized as String);
}

class _$GOrderActionSerializer implements PrimitiveSerializer<GOrderAction> {
  @override
  final Iterable<Type> types = const <Type>[GOrderAction];
  @override
  final String wireName = 'GOrderAction';

  @override
  Object serialize(Serializers serializers, GOrderAction object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderAction deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderAction.valueOf(serialized as String);
}

class _$GOrderAddNoteInputSerializer
    implements StructuredSerializer<GOrderAddNoteInput> {
  @override
  final Iterable<Type> types = const [GOrderAddNoteInput, _$GOrderAddNoteInput];
  @override
  final String wireName = 'GOrderAddNoteInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GOrderAddNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'message',
      serializers.serialize(object.message,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GOrderAddNoteInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderAddNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'message':
          result.message = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderDirectionSerializer
    implements PrimitiveSerializer<GOrderDirection> {
  @override
  final Iterable<Type> types = const <Type>[GOrderDirection];
  @override
  final String wireName = 'GOrderDirection';

  @override
  Object serialize(Serializers serializers, GOrderDirection object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderDirection deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderDirection.valueOf(serialized as String);
}

class _$GOrderDraftFilterInputSerializer
    implements StructuredSerializer<GOrderDraftFilterInput> {
  @override
  final Iterable<Type> types = const [
    GOrderDraftFilterInput,
    _$GOrderDraftFilterInput
  ];
  @override
  final String wireName = 'GOrderDraftFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GOrderDraftFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.customer != null) {
      result
        ..add('customer')
        ..add(serializers.serialize(object.customer,
            specifiedType: const FullType(String)));
    }
    if (object.created != null) {
      result
        ..add('created')
        ..add(serializers.serialize(object.created,
            specifiedType: const FullType(GDateRangeInput)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderDraftFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderDraftFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'customer':
          result.customer = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'created':
          result.created.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))
              as GDateRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderErrorCodeSerializer
    implements PrimitiveSerializer<GOrderErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GOrderErrorCode];
  @override
  final String wireName = 'GOrderErrorCode';

  @override
  Object serialize(Serializers serializers, GOrderErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderErrorCode.valueOf(serialized as String);
}

class _$GOrderEventsEmailsEnumSerializer
    implements PrimitiveSerializer<GOrderEventsEmailsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOrderEventsEmailsEnum];
  @override
  final String wireName = 'GOrderEventsEmailsEnum';

  @override
  Object serialize(Serializers serializers, GOrderEventsEmailsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderEventsEmailsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderEventsEmailsEnum.valueOf(serialized as String);
}

class _$GOrderEventsEnumSerializer
    implements PrimitiveSerializer<GOrderEventsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOrderEventsEnum];
  @override
  final String wireName = 'GOrderEventsEnum';

  @override
  Object serialize(Serializers serializers, GOrderEventsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderEventsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderEventsEnum.valueOf(serialized as String);
}

class _$GOrderFilterInputSerializer
    implements StructuredSerializer<GOrderFilterInput> {
  @override
  final Iterable<Type> types = const [GOrderFilterInput, _$GOrderFilterInput];
  @override
  final String wireName = 'GOrderFilterInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GOrderFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.paymentStatus != null) {
      result
        ..add('paymentStatus')
        ..add(serializers.serialize(object.paymentStatus,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPaymentChargeStatusEnum)])));
    }
    if (object.status != null) {
      result
        ..add('status')
        ..add(serializers.serialize(object.status,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderStatusFilter)])));
    }
    if (object.customer != null) {
      result
        ..add('customer')
        ..add(serializers.serialize(object.customer,
            specifiedType: const FullType(String)));
    }
    if (object.created != null) {
      result
        ..add('created')
        ..add(serializers.serialize(object.created,
            specifiedType: const FullType(GDateRangeInput)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'paymentStatus':
          result.paymentStatus.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPaymentChargeStatusEnum)
              ])) as BuiltList<Object>);
          break;
        case 'status':
          result.status.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GOrderStatusFilter)]))
              as BuiltList<Object>);
          break;
        case 'customer':
          result.customer = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'created':
          result.created.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))
              as GDateRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderFulfillInputSerializer
    implements StructuredSerializer<GOrderFulfillInput> {
  @override
  final Iterable<Type> types = const [GOrderFulfillInput, _$GOrderFulfillInput];
  @override
  final String wireName = 'GOrderFulfillInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GOrderFulfillInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'lines',
      serializers.serialize(object.lines,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GOrderFulfillLineInput)])),
    ];
    if (object.notifyCustomer != null) {
      result
        ..add('notifyCustomer')
        ..add(serializers.serialize(object.notifyCustomer,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GOrderFulfillInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFulfillInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'lines':
          result.lines.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderFulfillLineInput)
              ])) as BuiltList<Object>);
          break;
        case 'notifyCustomer':
          result.notifyCustomer = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderFulfillLineInputSerializer
    implements StructuredSerializer<GOrderFulfillLineInput> {
  @override
  final Iterable<Type> types = const [
    GOrderFulfillLineInput,
    _$GOrderFulfillLineInput
  ];
  @override
  final String wireName = 'GOrderFulfillLineInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GOrderFulfillLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'stocks',
      serializers.serialize(object.stocks,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GOrderFulfillStockInput)])),
    ];
    if (object.orderLineId != null) {
      result
        ..add('orderLineId')
        ..add(serializers.serialize(object.orderLineId,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderFulfillLineInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFulfillLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'orderLineId':
          result.orderLineId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderFulfillStockInput)
              ])) as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderFulfillStockInputSerializer
    implements StructuredSerializer<GOrderFulfillStockInput> {
  @override
  final Iterable<Type> types = const [
    GOrderFulfillStockInput,
    _$GOrderFulfillStockInput
  ];
  @override
  final String wireName = 'GOrderFulfillStockInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GOrderFulfillStockInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.quantity != null) {
      result
        ..add('quantity')
        ..add(serializers.serialize(object.quantity,
            specifiedType: const FullType(int)));
    }
    if (object.warehouse != null) {
      result
        ..add('warehouse')
        ..add(serializers.serialize(object.warehouse,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderFulfillStockInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFulfillStockInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'warehouse':
          result.warehouse = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderLineCreateInputSerializer
    implements StructuredSerializer<GOrderLineCreateInput> {
  @override
  final Iterable<Type> types = const [
    GOrderLineCreateInput,
    _$GOrderLineCreateInput
  ];
  @override
  final String wireName = 'GOrderLineCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GOrderLineCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
      'variantId',
      serializers.serialize(object.variantId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GOrderLineCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderLineCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'variantId':
          result.variantId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderLineInputSerializer
    implements StructuredSerializer<GOrderLineInput> {
  @override
  final Iterable<Type> types = const [GOrderLineInput, _$GOrderLineInput];
  @override
  final String wireName = 'GOrderLineInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GOrderLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GOrderLineInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderSortFieldSerializer
    implements PrimitiveSerializer<GOrderSortField> {
  @override
  final Iterable<Type> types = const <Type>[GOrderSortField];
  @override
  final String wireName = 'GOrderSortField';

  @override
  Object serialize(Serializers serializers, GOrderSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderSortField.valueOf(serialized as String);
}

class _$GOrderSortingInputSerializer
    implements StructuredSerializer<GOrderSortingInput> {
  @override
  final Iterable<Type> types = const [GOrderSortingInput, _$GOrderSortingInput];
  @override
  final String wireName = 'GOrderSortingInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GOrderSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GOrderSortField)),
    ];

    return result;
  }

  @override
  GOrderSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderSortField))
              as GOrderSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderStatusSerializer implements PrimitiveSerializer<GOrderStatus> {
  @override
  final Iterable<Type> types = const <Type>[GOrderStatus];
  @override
  final String wireName = 'GOrderStatus';

  @override
  Object serialize(Serializers serializers, GOrderStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderStatus.valueOf(serialized as String);
}

class _$GOrderStatusFilterSerializer
    implements PrimitiveSerializer<GOrderStatusFilter> {
  @override
  final Iterable<Type> types = const <Type>[GOrderStatusFilter];
  @override
  final String wireName = 'GOrderStatusFilter';

  @override
  Object serialize(Serializers serializers, GOrderStatusFilter object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderStatusFilter deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderStatusFilter.valueOf(serialized as String);
}

class _$GOrderUpdateInputSerializer
    implements StructuredSerializer<GOrderUpdateInput> {
  @override
  final Iterable<Type> types = const [GOrderUpdateInput, _$GOrderUpdateInput];
  @override
  final String wireName = 'GOrderUpdateInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GOrderUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.billingAddress != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(object.billingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.userEmail != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(object.userEmail,
            specifiedType: const FullType(String)));
    }
    if (object.shippingAddress != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(object.shippingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    return result;
  }

  @override
  GOrderUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderUpdateShippingInputSerializer
    implements StructuredSerializer<GOrderUpdateShippingInput> {
  @override
  final Iterable<Type> types = const [
    GOrderUpdateShippingInput,
    _$GOrderUpdateShippingInput
  ];
  @override
  final String wireName = 'GOrderUpdateShippingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GOrderUpdateShippingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.shippingMethod != null) {
      result
        ..add('shippingMethod')
        ..add(serializers.serialize(object.shippingMethod,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderUpdateShippingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderUpdateShippingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'shippingMethod':
          result.shippingMethod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageErrorCodeSerializer
    implements PrimitiveSerializer<GPageErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPageErrorCode];
  @override
  final String wireName = 'GPageErrorCode';

  @override
  Object serialize(Serializers serializers, GPageErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPageErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPageErrorCode.valueOf(serialized as String);
}

class _$GPageFilterInputSerializer
    implements StructuredSerializer<GPageFilterInput> {
  @override
  final Iterable<Type> types = const [GPageFilterInput, _$GPageFilterInput];
  @override
  final String wireName = 'GPageFilterInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GPageFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPageFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageInputSerializer implements StructuredSerializer<GPageInput> {
  @override
  final Iterable<Type> types = const [GPageInput, _$GPageInput];
  @override
  final String wireName = 'GPageInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GPageInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.title != null) {
      result
        ..add('title')
        ..add(serializers.serialize(object.title,
            specifiedType: const FullType(String)));
    }
    if (object.content != null) {
      result
        ..add('content')
        ..add(serializers.serialize(object.content,
            specifiedType: const FullType(String)));
    }
    if (object.contentJson != null) {
      result
        ..add('contentJson')
        ..add(serializers.serialize(object.contentJson,
            specifiedType: const FullType(GJSONString)));
    }
    if (object.isPublished != null) {
      result
        ..add('isPublished')
        ..add(serializers.serialize(object.isPublished,
            specifiedType: const FullType(bool)));
    }
    if (object.publicationDate != null) {
      result
        ..add('publicationDate')
        ..add(serializers.serialize(object.publicationDate,
            specifiedType: const FullType(String)));
    }
    if (object.seo != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(object.seo,
            specifiedType: const FullType(GSeoInput)));
    }
    return result;
  }

  @override
  GPageInput deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'contentJson':
          result.contentJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'publicationDate':
          result.publicationDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput)) as GSeoInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSortFieldSerializer
    implements PrimitiveSerializer<GPageSortField> {
  @override
  final Iterable<Type> types = const <Type>[GPageSortField];
  @override
  final String wireName = 'GPageSortField';

  @override
  Object serialize(Serializers serializers, GPageSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPageSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPageSortField.valueOf(serialized as String);
}

class _$GPageSortingInputSerializer
    implements StructuredSerializer<GPageSortingInput> {
  @override
  final Iterable<Type> types = const [GPageSortingInput, _$GPageSortingInput];
  @override
  final String wireName = 'GPageSortingInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GPageSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GPageSortField)),
    ];

    return result;
  }

  @override
  GPageSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GPageSortField)) as GPageSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageTranslationInputSerializer
    implements StructuredSerializer<GPageTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GPageTranslationInput,
    _$GPageTranslationInput
  ];
  @override
  final String wireName = 'GPageTranslationInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GPageTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.seoTitle != null) {
      result
        ..add('seoTitle')
        ..add(serializers.serialize(object.seoTitle,
            specifiedType: const FullType(String)));
    }
    if (object.seoDescription != null) {
      result
        ..add('seoDescription')
        ..add(serializers.serialize(object.seoDescription,
            specifiedType: const FullType(String)));
    }
    if (object.title != null) {
      result
        ..add('title')
        ..add(serializers.serialize(object.title,
            specifiedType: const FullType(String)));
    }
    if (object.content != null) {
      result
        ..add('content')
        ..add(serializers.serialize(object.content,
            specifiedType: const FullType(String)));
    }
    if (object.contentJson != null) {
      result
        ..add('contentJson')
        ..add(serializers.serialize(object.contentJson,
            specifiedType: const FullType(GJSONString)));
    }
    return result;
  }

  @override
  GPageTranslationInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'seoTitle':
          result.seoTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seoDescription':
          result.seoDescription = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'contentJson':
          result.contentJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
      }
    }

    return result.build();
  }
}

class _$GPaymentChargeStatusEnumSerializer
    implements PrimitiveSerializer<GPaymentChargeStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPaymentChargeStatusEnum];
  @override
  final String wireName = 'GPaymentChargeStatusEnum';

  @override
  Object serialize(Serializers serializers, GPaymentChargeStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPaymentChargeStatusEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPaymentChargeStatusEnum.valueOf(serialized as String);
}

class _$GPaymentErrorCodeSerializer
    implements PrimitiveSerializer<GPaymentErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPaymentErrorCode];
  @override
  final String wireName = 'GPaymentErrorCode';

  @override
  Object serialize(Serializers serializers, GPaymentErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPaymentErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPaymentErrorCode.valueOf(serialized as String);
}

class _$GPaymentInputSerializer implements StructuredSerializer<GPaymentInput> {
  @override
  final Iterable<Type> types = const [GPaymentInput, _$GPaymentInput];
  @override
  final String wireName = 'GPaymentInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GPaymentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'gateway',
      serializers.serialize(object.gateway,
          specifiedType: const FullType(String)),
      'token',
      serializers.serialize(object.token,
          specifiedType: const FullType(String)),
    ];
    if (object.amount != null) {
      result
        ..add('amount')
        ..add(serializers.serialize(object.amount,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.billingAddress != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(object.billingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    return result;
  }

  @override
  GPaymentInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPaymentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'gateway':
          result.gateway = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'token':
          result.token = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionEnumSerializer
    implements PrimitiveSerializer<GPermissionEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPermissionEnum];
  @override
  final String wireName = 'GPermissionEnum';

  @override
  Object serialize(Serializers serializers, GPermissionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPermissionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPermissionEnum.valueOf(serialized as String);
}

class _$GPermissionGroupCreateInputSerializer
    implements StructuredSerializer<GPermissionGroupCreateInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupCreateInput,
    _$GPermissionGroupCreateInput
  ];
  @override
  final String wireName = 'GPermissionGroupCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GPermissionGroupCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'addPermissions',
      serializers.serialize(object.addPermissions,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GPermissionEnum)])),
      'addUsers',
      serializers.serialize(object.addUsers,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GPermissionGroupCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'addPermissions':
          result.addPermissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))
              as BuiltList<Object>);
          break;
        case 'addUsers':
          result.addUsers.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionGroupErrorCodeSerializer
    implements PrimitiveSerializer<GPermissionGroupErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPermissionGroupErrorCode];
  @override
  final String wireName = 'GPermissionGroupErrorCode';

  @override
  Object serialize(Serializers serializers, GPermissionGroupErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPermissionGroupErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPermissionGroupErrorCode.valueOf(serialized as String);
}

class _$GPermissionGroupFilterInputSerializer
    implements StructuredSerializer<GPermissionGroupFilterInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupFilterInput,
    _$GPermissionGroupFilterInput
  ];
  @override
  final String wireName = 'GPermissionGroupFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GPermissionGroupFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPermissionGroupFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionGroupSortFieldSerializer
    implements PrimitiveSerializer<GPermissionGroupSortField> {
  @override
  final Iterable<Type> types = const <Type>[GPermissionGroupSortField];
  @override
  final String wireName = 'GPermissionGroupSortField';

  @override
  Object serialize(Serializers serializers, GPermissionGroupSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPermissionGroupSortField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPermissionGroupSortField.valueOf(serialized as String);
}

class _$GPermissionGroupSortingInputSerializer
    implements StructuredSerializer<GPermissionGroupSortingInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupSortingInput,
    _$GPermissionGroupSortingInput
  ];
  @override
  final String wireName = 'GPermissionGroupSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GPermissionGroupSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GPermissionGroupSortField)),
    ];

    return result;
  }

  @override
  GPermissionGroupSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GPermissionGroupSortField))
              as GPermissionGroupSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionGroupUpdateInputSerializer
    implements StructuredSerializer<GPermissionGroupUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupUpdateInput,
    _$GPermissionGroupUpdateInput
  ];
  @override
  final String wireName = 'GPermissionGroupUpdateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GPermissionGroupUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'addPermissions',
      serializers.serialize(object.addPermissions,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GPermissionEnum)])),
      'addUsers',
      serializers.serialize(object.addUsers,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'removePermissions',
      serializers.serialize(object.removePermissions,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GPermissionEnum)])),
      'removeUsers',
      serializers.serialize(object.removeUsers,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPermissionGroupUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'addPermissions':
          result.addPermissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))
              as BuiltList<Object>);
          break;
        case 'addUsers':
          result.addUsers.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'removePermissions':
          result.removePermissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))
              as BuiltList<Object>);
          break;
        case 'removeUsers':
          result.removeUsers.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPluginErrorCodeSerializer
    implements PrimitiveSerializer<GPluginErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPluginErrorCode];
  @override
  final String wireName = 'GPluginErrorCode';

  @override
  Object serialize(Serializers serializers, GPluginErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPluginErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPluginErrorCode.valueOf(serialized as String);
}

class _$GPluginFilterInputSerializer
    implements StructuredSerializer<GPluginFilterInput> {
  @override
  final Iterable<Type> types = const [GPluginFilterInput, _$GPluginFilterInput];
  @override
  final String wireName = 'GPluginFilterInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GPluginFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.active != null) {
      result
        ..add('active')
        ..add(serializers.serialize(object.active,
            specifiedType: const FullType(bool)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GPluginFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPluginFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPluginSortFieldSerializer
    implements PrimitiveSerializer<GPluginSortField> {
  @override
  final Iterable<Type> types = const <Type>[GPluginSortField];
  @override
  final String wireName = 'GPluginSortField';

  @override
  Object serialize(Serializers serializers, GPluginSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPluginSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPluginSortField.valueOf(serialized as String);
}

class _$GPluginSortingInputSerializer
    implements StructuredSerializer<GPluginSortingInput> {
  @override
  final Iterable<Type> types = const [
    GPluginSortingInput,
    _$GPluginSortingInput
  ];
  @override
  final String wireName = 'GPluginSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GPluginSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GPluginSortField)),
    ];

    return result;
  }

  @override
  GPluginSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPluginSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GPluginSortField))
              as GPluginSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPluginUpdateInputSerializer
    implements StructuredSerializer<GPluginUpdateInput> {
  @override
  final Iterable<Type> types = const [GPluginUpdateInput, _$GPluginUpdateInput];
  @override
  final String wireName = 'GPluginUpdateInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GPluginUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.active != null) {
      result
        ..add('active')
        ..add(serializers.serialize(object.active,
            specifiedType: const FullType(bool)));
    }
    if (object.configuration != null) {
      result
        ..add('configuration')
        ..add(serializers.serialize(object.configuration,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GConfigurationItemInput)])));
    }
    return result;
  }

  @override
  GPluginUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPluginUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'configuration':
          result.configuration.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GConfigurationItemInput)
              ])) as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPriceRangeInputSerializer
    implements StructuredSerializer<GPriceRangeInput> {
  @override
  final Iterable<Type> types = const [GPriceRangeInput, _$GPriceRangeInput];
  @override
  final String wireName = 'GPriceRangeInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GPriceRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.gte != null) {
      result
        ..add('gte')
        ..add(serializers.serialize(object.gte,
            specifiedType: const FullType(double)));
    }
    if (object.lte != null) {
      result
        ..add('lte')
        ..add(serializers.serialize(object.lte,
            specifiedType: const FullType(double)));
    }
    return result;
  }

  @override
  GPriceRangeInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPriceRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double;
          break;
        case 'lte':
          result.lte = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductCreateInputSerializer
    implements StructuredSerializer<GProductCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductCreateInput,
    _$GProductCreateInput
  ];
  @override
  final String wireName = 'GProductCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'productType',
      serializers.serialize(object.productType,
          specifiedType: const FullType(String)),
      'stocks',
      serializers.serialize(object.stocks,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GStockInput)])),
    ];
    if (object.attributes != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(object.attributes,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    if (object.publicationDate != null) {
      result
        ..add('publicationDate')
        ..add(serializers.serialize(object.publicationDate,
            specifiedType: const FullType(GDate)));
    }
    if (object.category != null) {
      result
        ..add('category')
        ..add(serializers.serialize(object.category,
            specifiedType: const FullType(String)));
    }
    if (object.chargeTaxes != null) {
      result
        ..add('chargeTaxes')
        ..add(serializers.serialize(object.chargeTaxes,
            specifiedType: const FullType(bool)));
    }
    if (object.collections != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(object.collections,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    if (object.descriptionJson != null) {
      result
        ..add('descriptionJson')
        ..add(serializers.serialize(object.descriptionJson,
            specifiedType: const FullType(GJSONString)));
    }
    if (object.isPublished != null) {
      result
        ..add('isPublished')
        ..add(serializers.serialize(object.isPublished,
            specifiedType: const FullType(bool)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.basePrice != null) {
      result
        ..add('basePrice')
        ..add(serializers.serialize(object.basePrice,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.taxCode != null) {
      result
        ..add('taxCode')
        ..add(serializers.serialize(object.taxCode,
            specifiedType: const FullType(String)));
    }
    if (object.seo != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(object.seo,
            specifiedType: const FullType(GSeoInput)));
    }
    if (object.weight != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(object.weight,
            specifiedType: const FullType(GWeightScalar)));
    }
    if (object.sku != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(object.sku,
            specifiedType: const FullType(String)));
    }
    if (object.trackInventory != null) {
      result
        ..add('trackInventory')
        ..add(serializers.serialize(object.trackInventory,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GProductCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))
              as BuiltList<Object>);
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'chargeTaxes':
          result.chargeTaxes = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'descriptionJson':
          result.descriptionJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'basePrice':
          result.basePrice.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'taxCode':
          result.taxCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput)) as GSeoInput);
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'productType':
          result.productType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GStockInput)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductErrorCodeSerializer
    implements PrimitiveSerializer<GProductErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GProductErrorCode];
  @override
  final String wireName = 'GProductErrorCode';

  @override
  Object serialize(Serializers serializers, GProductErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductErrorCode.valueOf(serialized as String);
}

class _$GProductFilterInputSerializer
    implements StructuredSerializer<GProductFilterInput> {
  @override
  final Iterable<Type> types = const [
    GProductFilterInput,
    _$GProductFilterInput
  ];
  @override
  final String wireName = 'GProductFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.isPublished != null) {
      result
        ..add('isPublished')
        ..add(serializers.serialize(object.isPublished,
            specifiedType: const FullType(bool)));
    }
    if (object.collections != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(object.collections,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.categories != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(object.categories,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.hasCategory != null) {
      result
        ..add('hasCategory')
        ..add(serializers.serialize(object.hasCategory,
            specifiedType: const FullType(bool)));
    }
    if (object.price != null) {
      result
        ..add('price')
        ..add(serializers.serialize(object.price,
            specifiedType: const FullType(GPriceRangeInput)));
    }
    if (object.attributes != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(object.attributes,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeInput)])));
    }
    if (object.stockAvailability != null) {
      result
        ..add('stockAvailability')
        ..add(serializers.serialize(object.stockAvailability,
            specifiedType: const FullType(GStockAvailability)));
    }
    if (object.productType != null) {
      result
        ..add('productType')
        ..add(serializers.serialize(object.productType,
            specifiedType: const FullType(String)));
    }
    if (object.stocks != null) {
      result
        ..add('stocks')
        ..add(serializers.serialize(object.stocks,
            specifiedType: const FullType(GProductStockFilterInput)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.minimalPrice != null) {
      result
        ..add('minimalPrice')
        ..add(serializers.serialize(object.minimalPrice,
            specifiedType: const FullType(GPriceRangeInput)));
    }
    if (object.productTypes != null) {
      result
        ..add('productTypes')
        ..add(serializers.serialize(object.productTypes,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GProductFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'hasCategory':
          result.hasCategory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'price':
          result.price.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPriceRangeInput))
              as GPriceRangeInput);
          break;
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeInput)]))
              as BuiltList<Object>);
          break;
        case 'stockAvailability':
          result.stockAvailability = serializers.deserialize(value,
                  specifiedType: const FullType(GStockAvailability))
              as GStockAvailability;
          break;
        case 'productType':
          result.productType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProductStockFilterInput))
              as GProductStockFilterInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'minimalPrice':
          result.minimalPrice.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPriceRangeInput))
              as GPriceRangeInput);
          break;
        case 'productTypes':
          result.productTypes.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductImageCreateInputSerializer
    implements StructuredSerializer<GProductImageCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductImageCreateInput,
    _$GProductImageCreateInput
  ];
  @override
  final String wireName = 'GProductImageCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductImageCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'image',
      serializers.serialize(object.image,
          specifiedType: const FullType(GUpload)),
      'product',
      serializers.serialize(object.product,
          specifiedType: const FullType(String)),
    ];
    if (object.alt != null) {
      result
        ..add('alt')
        ..add(serializers.serialize(object.alt,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProductImageCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductImageCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'alt':
          result.alt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'image':
          result.image.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload)) as GUpload);
          break;
        case 'product':
          result.product = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductImageUpdateInputSerializer
    implements StructuredSerializer<GProductImageUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GProductImageUpdateInput,
    _$GProductImageUpdateInput
  ];
  @override
  final String wireName = 'GProductImageUpdateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductImageUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.alt != null) {
      result
        ..add('alt')
        ..add(serializers.serialize(object.alt,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProductImageUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductImageUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'alt':
          result.alt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductInputSerializer implements StructuredSerializer<GProductInput> {
  @override
  final Iterable<Type> types = const [GProductInput, _$GProductInput];
  @override
  final String wireName = 'GProductInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GProductInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.attributes != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(object.attributes,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    if (object.publicationDate != null) {
      result
        ..add('publicationDate')
        ..add(serializers.serialize(object.publicationDate,
            specifiedType: const FullType(GDate)));
    }
    if (object.category != null) {
      result
        ..add('category')
        ..add(serializers.serialize(object.category,
            specifiedType: const FullType(String)));
    }
    if (object.chargeTaxes != null) {
      result
        ..add('chargeTaxes')
        ..add(serializers.serialize(object.chargeTaxes,
            specifiedType: const FullType(bool)));
    }
    if (object.collections != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(object.collections,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    if (object.descriptionJson != null) {
      result
        ..add('descriptionJson')
        ..add(serializers.serialize(object.descriptionJson,
            specifiedType: const FullType(GJSONString)));
    }
    if (object.isPublished != null) {
      result
        ..add('isPublished')
        ..add(serializers.serialize(object.isPublished,
            specifiedType: const FullType(bool)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.basePrice != null) {
      result
        ..add('basePrice')
        ..add(serializers.serialize(object.basePrice,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.taxCode != null) {
      result
        ..add('taxCode')
        ..add(serializers.serialize(object.taxCode,
            specifiedType: const FullType(String)));
    }
    if (object.seo != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(object.seo,
            specifiedType: const FullType(GSeoInput)));
    }
    if (object.weight != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(object.weight,
            specifiedType: const FullType(GWeightScalar)));
    }
    if (object.sku != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(object.sku,
            specifiedType: const FullType(String)));
    }
    if (object.trackInventory != null) {
      result
        ..add('trackInventory')
        ..add(serializers.serialize(object.trackInventory,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GProductInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))
              as BuiltList<Object>);
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate)) as GDate);
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'chargeTaxes':
          result.chargeTaxes = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'descriptionJson':
          result.descriptionJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'basePrice':
          result.basePrice.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'taxCode':
          result.taxCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput)) as GSeoInput);
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductOrderSerializer implements StructuredSerializer<GProductOrder> {
  @override
  final Iterable<Type> types = const [GProductOrder, _$GProductOrder];
  @override
  final String wireName = 'GProductOrder';

  @override
  Iterable<Object> serialize(Serializers serializers, GProductOrder object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
    ];
    if (object.attributeId != null) {
      result
        ..add('attributeId')
        ..add(serializers.serialize(object.attributeId,
            specifiedType: const FullType(String)));
    }
    if (object.field != null) {
      result
        ..add('field')
        ..add(serializers.serialize(object.field,
            specifiedType: const FullType(GProductOrderField)));
    }
    return result;
  }

  @override
  GProductOrder deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductOrderBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'attributeId':
          result.attributeId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GProductOrderField))
              as GProductOrderField;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductOrderFieldSerializer
    implements PrimitiveSerializer<GProductOrderField> {
  @override
  final Iterable<Type> types = const <Type>[GProductOrderField];
  @override
  final String wireName = 'GProductOrderField';

  @override
  Object serialize(Serializers serializers, GProductOrderField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductOrderField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductOrderField.valueOf(serialized as String);
}

class _$GProductStockFilterInputSerializer
    implements StructuredSerializer<GProductStockFilterInput> {
  @override
  final Iterable<Type> types = const [
    GProductStockFilterInput,
    _$GProductStockFilterInput
  ];
  @override
  final String wireName = 'GProductStockFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductStockFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'warehouseIds',
      serializers.serialize(object.warehouseIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    if (object.quantity != null) {
      result
        ..add('quantity')
        ..add(serializers.serialize(object.quantity,
            specifiedType: const FullType(GIntRangeInput)));
    }
    return result;
  }

  @override
  GProductStockFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductStockFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'warehouseIds':
          result.warehouseIds.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'quantity':
          result.quantity.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIntRangeInput)) as GIntRangeInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductTypeConfigurableSerializer
    implements PrimitiveSerializer<GProductTypeConfigurable> {
  @override
  final Iterable<Type> types = const <Type>[GProductTypeConfigurable];
  @override
  final String wireName = 'GProductTypeConfigurable';

  @override
  Object serialize(Serializers serializers, GProductTypeConfigurable object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductTypeConfigurable deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductTypeConfigurable.valueOf(serialized as String);
}

class _$GProductTypeEnumSerializer
    implements PrimitiveSerializer<GProductTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GProductTypeEnum];
  @override
  final String wireName = 'GProductTypeEnum';

  @override
  Object serialize(Serializers serializers, GProductTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductTypeEnum.valueOf(serialized as String);
}

class _$GProductTypeFilterInputSerializer
    implements StructuredSerializer<GProductTypeFilterInput> {
  @override
  final Iterable<Type> types = const [
    GProductTypeFilterInput,
    _$GProductTypeFilterInput
  ];
  @override
  final String wireName = 'GProductTypeFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductTypeFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.configurable != null) {
      result
        ..add('configurable')
        ..add(serializers.serialize(object.configurable,
            specifiedType: const FullType(GProductTypeConfigurable)));
    }
    if (object.productType != null) {
      result
        ..add('productType')
        ..add(serializers.serialize(object.productType,
            specifiedType: const FullType(GProductTypeEnum)));
    }
    if (object.ids != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(object.ids,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GProductTypeFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductTypeFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'configurable':
          result.configurable = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeConfigurable))
              as GProductTypeConfigurable;
          break;
        case 'productType':
          result.productType = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeEnum))
              as GProductTypeEnum;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductTypeInputSerializer
    implements StructuredSerializer<GProductTypeInput> {
  @override
  final Iterable<Type> types = const [GProductTypeInput, _$GProductTypeInput];
  @override
  final String wireName = 'GProductTypeInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GProductTypeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.hasVariants != null) {
      result
        ..add('hasVariants')
        ..add(serializers.serialize(object.hasVariants,
            specifiedType: const FullType(bool)));
    }
    if (object.productAttributes != null) {
      result
        ..add('productAttributes')
        ..add(serializers.serialize(object.productAttributes,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.variantAttributes != null) {
      result
        ..add('variantAttributes')
        ..add(serializers.serialize(object.variantAttributes,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.isShippingRequired != null) {
      result
        ..add('isShippingRequired')
        ..add(serializers.serialize(object.isShippingRequired,
            specifiedType: const FullType(bool)));
    }
    if (object.isDigital != null) {
      result
        ..add('isDigital')
        ..add(serializers.serialize(object.isDigital,
            specifiedType: const FullType(bool)));
    }
    if (object.weight != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(object.weight,
            specifiedType: const FullType(GWeightScalar)));
    }
    if (object.taxCode != null) {
      result
        ..add('taxCode')
        ..add(serializers.serialize(object.taxCode,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProductTypeInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductTypeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'hasVariants':
          result.hasVariants = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'productAttributes':
          result.productAttributes.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'variantAttributes':
          result.variantAttributes.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'isShippingRequired':
          result.isShippingRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'isDigital':
          result.isDigital = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
        case 'taxCode':
          result.taxCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductTypeSortFieldSerializer
    implements PrimitiveSerializer<GProductTypeSortField> {
  @override
  final Iterable<Type> types = const <Type>[GProductTypeSortField];
  @override
  final String wireName = 'GProductTypeSortField';

  @override
  Object serialize(Serializers serializers, GProductTypeSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductTypeSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductTypeSortField.valueOf(serialized as String);
}

class _$GProductTypeSortingInputSerializer
    implements StructuredSerializer<GProductTypeSortingInput> {
  @override
  final Iterable<Type> types = const [
    GProductTypeSortingInput,
    _$GProductTypeSortingInput
  ];
  @override
  final String wireName = 'GProductTypeSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductTypeSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GProductTypeSortField)),
    ];

    return result;
  }

  @override
  GProductTypeSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductTypeSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeSortField))
              as GProductTypeSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantBulkCreateInputSerializer
    implements StructuredSerializer<GProductVariantBulkCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantBulkCreateInput,
    _$GProductVariantBulkCreateInput
  ];
  @override
  final String wireName = 'GProductVariantBulkCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductVariantBulkCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'sku',
      serializers.serialize(object.sku, specifiedType: const FullType(String)),
      'stocks',
      serializers.serialize(object.stocks,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GStockInput)])),
    ];
    if (object.attributes != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(object.attributes,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    if (object.costPrice != null) {
      result
        ..add('costPrice')
        ..add(serializers.serialize(object.costPrice,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.priceOverride != null) {
      result
        ..add('priceOverride')
        ..add(serializers.serialize(object.priceOverride,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.trackInventory != null) {
      result
        ..add('trackInventory')
        ..add(serializers.serialize(object.trackInventory,
            specifiedType: const FullType(bool)));
    }
    if (object.weight != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(object.weight,
            specifiedType: const FullType(GWeightScalar)));
    }
    return result;
  }

  @override
  GProductVariantBulkCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantBulkCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))
              as BuiltList<Object>);
          break;
        case 'costPrice':
          result.costPrice.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'priceOverride':
          result.priceOverride.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GStockInput)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantCreateInputSerializer
    implements StructuredSerializer<GProductVariantCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantCreateInput,
    _$GProductVariantCreateInput
  ];
  @override
  final String wireName = 'GProductVariantCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductVariantCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'product',
      serializers.serialize(object.product,
          specifiedType: const FullType(String)),
      'stocks',
      serializers.serialize(object.stocks,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GStockInput)])),
    ];
    if (object.attributes != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(object.attributes,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    if (object.costPrice != null) {
      result
        ..add('costPrice')
        ..add(serializers.serialize(object.costPrice,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.priceOverride != null) {
      result
        ..add('priceOverride')
        ..add(serializers.serialize(object.priceOverride,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.sku != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(object.sku,
            specifiedType: const FullType(String)));
    }
    if (object.trackInventory != null) {
      result
        ..add('trackInventory')
        ..add(serializers.serialize(object.trackInventory,
            specifiedType: const FullType(bool)));
    }
    if (object.weight != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(object.weight,
            specifiedType: const FullType(GWeightScalar)));
    }
    return result;
  }

  @override
  GProductVariantCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))
              as BuiltList<Object>);
          break;
        case 'costPrice':
          result.costPrice.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'priceOverride':
          result.priceOverride.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
        case 'product':
          result.product = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GStockInput)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantInputSerializer
    implements StructuredSerializer<GProductVariantInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantInput,
    _$GProductVariantInput
  ];
  @override
  final String wireName = 'GProductVariantInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GProductVariantInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.attributes != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(object.attributes,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    if (object.costPrice != null) {
      result
        ..add('costPrice')
        ..add(serializers.serialize(object.costPrice,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.priceOverride != null) {
      result
        ..add('priceOverride')
        ..add(serializers.serialize(object.priceOverride,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.sku != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(object.sku,
            specifiedType: const FullType(String)));
    }
    if (object.trackInventory != null) {
      result
        ..add('trackInventory')
        ..add(serializers.serialize(object.trackInventory,
            specifiedType: const FullType(bool)));
    }
    if (object.weight != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(object.weight,
            specifiedType: const FullType(GWeightScalar)));
    }
    return result;
  }

  @override
  GProductVariantInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))
              as BuiltList<Object>);
          break;
        case 'costPrice':
          result.costPrice.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'priceOverride':
          result.priceOverride.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
      }
    }

    return result.build();
  }
}

class _$GReorderInputSerializer implements StructuredSerializer<GReorderInput> {
  @override
  final Iterable<Type> types = const [GReorderInput, _$GReorderInput];
  @override
  final String wireName = 'GReorderInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GReorderInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    if (object.sortOrder != null) {
      result
        ..add('sortOrder')
        ..add(serializers.serialize(object.sortOrder,
            specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GReorderInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReorderInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'sortOrder':
          result.sortOrder = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GReportingPeriodSerializer
    implements PrimitiveSerializer<GReportingPeriod> {
  @override
  final Iterable<Type> types = const <Type>[GReportingPeriod];
  @override
  final String wireName = 'GReportingPeriod';

  @override
  Object serialize(Serializers serializers, GReportingPeriod object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GReportingPeriod deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GReportingPeriod.valueOf(serialized as String);
}

class _$GSaleFilterInputSerializer
    implements StructuredSerializer<GSaleFilterInput> {
  @override
  final Iterable<Type> types = const [GSaleFilterInput, _$GSaleFilterInput];
  @override
  final String wireName = 'GSaleFilterInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GSaleFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.status != null) {
      result
        ..add('status')
        ..add(serializers.serialize(object.status,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GDiscountStatusEnum)])));
    }
    if (object.saleType != null) {
      result
        ..add('saleType')
        ..add(serializers.serialize(object.saleType,
            specifiedType: const FullType(GDiscountValueTypeEnum)));
    }
    if (object.started != null) {
      result
        ..add('started')
        ..add(serializers.serialize(object.started,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSaleFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'status':
          result.status.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDiscountStatusEnum)]))
              as BuiltList<Object>);
          break;
        case 'saleType':
          result.saleType = serializers.deserialize(value,
                  specifiedType: const FullType(GDiscountValueTypeEnum))
              as GDiscountValueTypeEnum;
          break;
        case 'started':
          result.started.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))
              as GDateTimeRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleInputSerializer implements StructuredSerializer<GSaleInput> {
  @override
  final Iterable<Type> types = const [GSaleInput, _$GSaleInput];
  @override
  final String wireName = 'GSaleInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GSaleInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.type != null) {
      result
        ..add('type')
        ..add(serializers.serialize(object.type,
            specifiedType: const FullType(GDiscountValueTypeEnum)));
    }
    if (object.value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(object.value,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.products != null) {
      result
        ..add('products')
        ..add(serializers.serialize(object.products,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.categories != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(object.categories,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.collections != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(object.collections,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.startDate != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(object.startDate,
            specifiedType: const FullType(GDateTime)));
    }
    if (object.endDate != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(object.endDate,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GSaleInput deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GDiscountValueTypeEnum))
              as GDiscountValueTypeEnum;
          break;
        case 'value':
          result.value.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime)) as GDateTime);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime)) as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleSortFieldSerializer
    implements PrimitiveSerializer<GSaleSortField> {
  @override
  final Iterable<Type> types = const <Type>[GSaleSortField];
  @override
  final String wireName = 'GSaleSortField';

  @override
  Object serialize(Serializers serializers, GSaleSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSaleSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSaleSortField.valueOf(serialized as String);
}

class _$GSaleSortingInputSerializer
    implements StructuredSerializer<GSaleSortingInput> {
  @override
  final Iterable<Type> types = const [GSaleSortingInput, _$GSaleSortingInput];
  @override
  final String wireName = 'GSaleSortingInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GSaleSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GSaleSortField)),
    ];

    return result;
  }

  @override
  GSaleSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GSaleSortField)) as GSaleSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleTypeSerializer implements PrimitiveSerializer<GSaleType> {
  @override
  final Iterable<Type> types = const <Type>[GSaleType];
  @override
  final String wireName = 'GSaleType';

  @override
  Object serialize(Serializers serializers, GSaleType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSaleType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSaleType.valueOf(serialized as String);
}

class _$GSeoInputSerializer implements StructuredSerializer<GSeoInput> {
  @override
  final Iterable<Type> types = const [GSeoInput, _$GSeoInput];
  @override
  final String wireName = 'GSeoInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GSeoInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.title != null) {
      result
        ..add('title')
        ..add(serializers.serialize(object.title,
            specifiedType: const FullType(String)));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSeoInput deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSeoInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GServiceAccountFilterInputSerializer
    implements StructuredSerializer<GServiceAccountFilterInput> {
  @override
  final Iterable<Type> types = const [
    GServiceAccountFilterInput,
    _$GServiceAccountFilterInput
  ];
  @override
  final String wireName = 'GServiceAccountFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GServiceAccountFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GServiceAccountFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GServiceAccountFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GServiceAccountInputSerializer
    implements StructuredSerializer<GServiceAccountInput> {
  @override
  final Iterable<Type> types = const [
    GServiceAccountInput,
    _$GServiceAccountInput
  ];
  @override
  final String wireName = 'GServiceAccountInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GServiceAccountInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.permissions != null) {
      result
        ..add('permissions')
        ..add(serializers.serialize(object.permissions,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPermissionEnum)])));
    }
    return result;
  }

  @override
  GServiceAccountInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GServiceAccountInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'permissions':
          result.permissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GServiceAccountSortFieldSerializer
    implements PrimitiveSerializer<GServiceAccountSortField> {
  @override
  final Iterable<Type> types = const <Type>[GServiceAccountSortField];
  @override
  final String wireName = 'GServiceAccountSortField';

  @override
  Object serialize(Serializers serializers, GServiceAccountSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GServiceAccountSortField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GServiceAccountSortField.valueOf(serialized as String);
}

class _$GServiceAccountSortingInputSerializer
    implements StructuredSerializer<GServiceAccountSortingInput> {
  @override
  final Iterable<Type> types = const [
    GServiceAccountSortingInput,
    _$GServiceAccountSortingInput
  ];
  @override
  final String wireName = 'GServiceAccountSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GServiceAccountSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GServiceAccountSortField)),
    ];

    return result;
  }

  @override
  GServiceAccountSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GServiceAccountSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GServiceAccountSortField))
              as GServiceAccountSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GServiceAccountTokenInputSerializer
    implements StructuredSerializer<GServiceAccountTokenInput> {
  @override
  final Iterable<Type> types = const [
    GServiceAccountTokenInput,
    _$GServiceAccountTokenInput
  ];
  @override
  final String wireName = 'GServiceAccountTokenInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GServiceAccountTokenInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'serviceAccount',
      serializers.serialize(object.serviceAccount,
          specifiedType: const FullType(String)),
    ];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GServiceAccountTokenInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GServiceAccountTokenInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'serviceAccount':
          result.serviceAccount = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingErrorCodeSerializer
    implements PrimitiveSerializer<GShippingErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GShippingErrorCode];
  @override
  final String wireName = 'GShippingErrorCode';

  @override
  Object serialize(Serializers serializers, GShippingErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GShippingErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GShippingErrorCode.valueOf(serialized as String);
}

class _$GShippingMethodTypeEnumSerializer
    implements PrimitiveSerializer<GShippingMethodTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GShippingMethodTypeEnum];
  @override
  final String wireName = 'GShippingMethodTypeEnum';

  @override
  Object serialize(Serializers serializers, GShippingMethodTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GShippingMethodTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GShippingMethodTypeEnum.valueOf(serialized as String);
}

class _$GShippingPriceInputSerializer
    implements StructuredSerializer<GShippingPriceInput> {
  @override
  final Iterable<Type> types = const [
    GShippingPriceInput,
    _$GShippingPriceInput
  ];
  @override
  final String wireName = 'GShippingPriceInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GShippingPriceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.price != null) {
      result
        ..add('price')
        ..add(serializers.serialize(object.price,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.minimumOrderPrice != null) {
      result
        ..add('minimumOrderPrice')
        ..add(serializers.serialize(object.minimumOrderPrice,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.maximumOrderPrice != null) {
      result
        ..add('maximumOrderPrice')
        ..add(serializers.serialize(object.maximumOrderPrice,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.minimumOrderWeight != null) {
      result
        ..add('minimumOrderWeight')
        ..add(serializers.serialize(object.minimumOrderWeight,
            specifiedType: const FullType(GWeightScalar)));
    }
    if (object.maximumOrderWeight != null) {
      result
        ..add('maximumOrderWeight')
        ..add(serializers.serialize(object.maximumOrderWeight,
            specifiedType: const FullType(GWeightScalar)));
    }
    if (object.type != null) {
      result
        ..add('type')
        ..add(serializers.serialize(object.type,
            specifiedType: const FullType(GShippingMethodTypeEnum)));
    }
    if (object.shippingZone != null) {
      result
        ..add('shippingZone')
        ..add(serializers.serialize(object.shippingZone,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GShippingPriceInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingPriceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'price':
          result.price.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'minimumOrderPrice':
          result.minimumOrderPrice.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'maximumOrderPrice':
          result.maximumOrderPrice.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'minimumOrderWeight':
          result.minimumOrderWeight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
        case 'maximumOrderWeight':
          result.maximumOrderWeight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar)) as GWeightScalar);
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GShippingMethodTypeEnum))
              as GShippingMethodTypeEnum;
          break;
        case 'shippingZone':
          result.shippingZone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingZoneCreateInputSerializer
    implements StructuredSerializer<GShippingZoneCreateInput> {
  @override
  final Iterable<Type> types = const [
    GShippingZoneCreateInput,
    _$GShippingZoneCreateInput
  ];
  @override
  final String wireName = 'GShippingZoneCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GShippingZoneCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.countries != null) {
      result
        ..add('countries')
        ..add(serializers.serialize(object.countries,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.Gdefault != null) {
      result
        ..add('default')
        ..add(serializers.serialize(object.Gdefault,
            specifiedType: const FullType(bool)));
    }
    if (object.addWarehouses != null) {
      result
        ..add('addWarehouses')
        ..add(serializers.serialize(object.addWarehouses,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GShippingZoneCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingZoneCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'countries':
          result.countries.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'default':
          result.Gdefault = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'addWarehouses':
          result.addWarehouses.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingZoneUpdateInputSerializer
    implements StructuredSerializer<GShippingZoneUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GShippingZoneUpdateInput,
    _$GShippingZoneUpdateInput
  ];
  @override
  final String wireName = 'GShippingZoneUpdateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GShippingZoneUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.countries != null) {
      result
        ..add('countries')
        ..add(serializers.serialize(object.countries,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.Gdefault != null) {
      result
        ..add('default')
        ..add(serializers.serialize(object.Gdefault,
            specifiedType: const FullType(bool)));
    }
    if (object.addWarehouses != null) {
      result
        ..add('addWarehouses')
        ..add(serializers.serialize(object.addWarehouses,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.removeWarehouses != null) {
      result
        ..add('removeWarehouses')
        ..add(serializers.serialize(object.removeWarehouses,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GShippingZoneUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingZoneUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'countries':
          result.countries.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'default':
          result.Gdefault = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'addWarehouses':
          result.addWarehouses.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'removeWarehouses':
          result.removeWarehouses.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GShopErrorCodeSerializer
    implements PrimitiveSerializer<GShopErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GShopErrorCode];
  @override
  final String wireName = 'GShopErrorCode';

  @override
  Object serialize(Serializers serializers, GShopErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GShopErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GShopErrorCode.valueOf(serialized as String);
}

class _$GShopSettingsInputSerializer
    implements StructuredSerializer<GShopSettingsInput> {
  @override
  final Iterable<Type> types = const [GShopSettingsInput, _$GShopSettingsInput];
  @override
  final String wireName = 'GShopSettingsInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GShopSettingsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.headerText != null) {
      result
        ..add('headerText')
        ..add(serializers.serialize(object.headerText,
            specifiedType: const FullType(String)));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    if (object.includeTaxesInPrices != null) {
      result
        ..add('includeTaxesInPrices')
        ..add(serializers.serialize(object.includeTaxesInPrices,
            specifiedType: const FullType(bool)));
    }
    if (object.displayGrossPrices != null) {
      result
        ..add('displayGrossPrices')
        ..add(serializers.serialize(object.displayGrossPrices,
            specifiedType: const FullType(bool)));
    }
    if (object.chargeTaxesOnShipping != null) {
      result
        ..add('chargeTaxesOnShipping')
        ..add(serializers.serialize(object.chargeTaxesOnShipping,
            specifiedType: const FullType(bool)));
    }
    if (object.trackInventoryByDefault != null) {
      result
        ..add('trackInventoryByDefault')
        ..add(serializers.serialize(object.trackInventoryByDefault,
            specifiedType: const FullType(bool)));
    }
    if (object.defaultWeightUnit != null) {
      result
        ..add('defaultWeightUnit')
        ..add(serializers.serialize(object.defaultWeightUnit,
            specifiedType: const FullType(GWeightUnitsEnum)));
    }
    if (object.automaticFulfillmentDigitalProducts != null) {
      result
        ..add('automaticFulfillmentDigitalProducts')
        ..add(serializers.serialize(object.automaticFulfillmentDigitalProducts,
            specifiedType: const FullType(bool)));
    }
    if (object.defaultDigitalMaxDownloads != null) {
      result
        ..add('defaultDigitalMaxDownloads')
        ..add(serializers.serialize(object.defaultDigitalMaxDownloads,
            specifiedType: const FullType(int)));
    }
    if (object.defaultDigitalUrlValidDays != null) {
      result
        ..add('defaultDigitalUrlValidDays')
        ..add(serializers.serialize(object.defaultDigitalUrlValidDays,
            specifiedType: const FullType(int)));
    }
    if (object.defaultMailSenderName != null) {
      result
        ..add('defaultMailSenderName')
        ..add(serializers.serialize(object.defaultMailSenderName,
            specifiedType: const FullType(String)));
    }
    if (object.defaultMailSenderAddress != null) {
      result
        ..add('defaultMailSenderAddress')
        ..add(serializers.serialize(object.defaultMailSenderAddress,
            specifiedType: const FullType(String)));
    }
    if (object.customerSetPasswordUrl != null) {
      result
        ..add('customerSetPasswordUrl')
        ..add(serializers.serialize(object.customerSetPasswordUrl,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GShopSettingsInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShopSettingsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'headerText':
          result.headerText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'includeTaxesInPrices':
          result.includeTaxesInPrices = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'displayGrossPrices':
          result.displayGrossPrices = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'chargeTaxesOnShipping':
          result.chargeTaxesOnShipping = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'trackInventoryByDefault':
          result.trackInventoryByDefault = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'defaultWeightUnit':
          result.defaultWeightUnit = serializers.deserialize(value,
                  specifiedType: const FullType(GWeightUnitsEnum))
              as GWeightUnitsEnum;
          break;
        case 'automaticFulfillmentDigitalProducts':
          result.automaticFulfillmentDigitalProducts = serializers
              .deserialize(value, specifiedType: const FullType(bool)) as bool;
          break;
        case 'defaultDigitalMaxDownloads':
          result.defaultDigitalMaxDownloads = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'defaultDigitalUrlValidDays':
          result.defaultDigitalUrlValidDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'defaultMailSenderName':
          result.defaultMailSenderName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'defaultMailSenderAddress':
          result.defaultMailSenderAddress = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'customerSetPasswordUrl':
          result.customerSetPasswordUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GShopSettingsTranslationInputSerializer
    implements StructuredSerializer<GShopSettingsTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GShopSettingsTranslationInput,
    _$GShopSettingsTranslationInput
  ];
  @override
  final String wireName = 'GShopSettingsTranslationInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GShopSettingsTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.headerText != null) {
      result
        ..add('headerText')
        ..add(serializers.serialize(object.headerText,
            specifiedType: const FullType(String)));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GShopSettingsTranslationInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShopSettingsTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'headerText':
          result.headerText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSiteDomainInputSerializer
    implements StructuredSerializer<GSiteDomainInput> {
  @override
  final Iterable<Type> types = const [GSiteDomainInput, _$GSiteDomainInput];
  @override
  final String wireName = 'GSiteDomainInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GSiteDomainInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.domain != null) {
      result
        ..add('domain')
        ..add(serializers.serialize(object.domain,
            specifiedType: const FullType(String)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSiteDomainInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSiteDomainInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'domain':
          result.domain = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffCreateInputSerializer
    implements StructuredSerializer<GStaffCreateInput> {
  @override
  final Iterable<Type> types = const [GStaffCreateInput, _$GStaffCreateInput];
  @override
  final String wireName = 'GStaffCreateInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GStaffCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'addGroups',
      serializers.serialize(object.addGroups,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    if (object.firstName != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(object.firstName,
            specifiedType: const FullType(String)));
    }
    if (object.lastName != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(object.lastName,
            specifiedType: const FullType(String)));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.note != null) {
      result
        ..add('note')
        ..add(serializers.serialize(object.note,
            specifiedType: const FullType(String)));
    }
    if (object.redirectUrl != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(object.redirectUrl,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GStaffCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'addGroups':
          result.addGroups.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffMemberStatusSerializer
    implements PrimitiveSerializer<GStaffMemberStatus> {
  @override
  final Iterable<Type> types = const <Type>[GStaffMemberStatus];
  @override
  final String wireName = 'GStaffMemberStatus';

  @override
  Object serialize(Serializers serializers, GStaffMemberStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GStaffMemberStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GStaffMemberStatus.valueOf(serialized as String);
}

class _$GStaffNotificationRecipientInputSerializer
    implements StructuredSerializer<GStaffNotificationRecipientInput> {
  @override
  final Iterable<Type> types = const [
    GStaffNotificationRecipientInput,
    _$GStaffNotificationRecipientInput
  ];
  @override
  final String wireName = 'GStaffNotificationRecipientInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GStaffNotificationRecipientInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.user != null) {
      result
        ..add('user')
        ..add(serializers.serialize(object.user,
            specifiedType: const FullType(String)));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.active != null) {
      result
        ..add('active')
        ..add(serializers.serialize(object.active,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GStaffNotificationRecipientInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffNotificationRecipientInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffUpdateInputSerializer
    implements StructuredSerializer<GStaffUpdateInput> {
  @override
  final Iterable<Type> types = const [GStaffUpdateInput, _$GStaffUpdateInput];
  @override
  final String wireName = 'GStaffUpdateInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GStaffUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'addGroups',
      serializers.serialize(object.addGroups,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'removeGroups',
      serializers.serialize(object.removeGroups,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    if (object.firstName != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(object.firstName,
            specifiedType: const FullType(String)));
    }
    if (object.lastName != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(object.lastName,
            specifiedType: const FullType(String)));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.note != null) {
      result
        ..add('note')
        ..add(serializers.serialize(object.note,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GStaffUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'addGroups':
          result.addGroups.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'removeGroups':
          result.removeGroups.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffUserInputSerializer
    implements StructuredSerializer<GStaffUserInput> {
  @override
  final Iterable<Type> types = const [GStaffUserInput, _$GStaffUserInput];
  @override
  final String wireName = 'GStaffUserInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GStaffUserInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.status != null) {
      result
        ..add('status')
        ..add(serializers.serialize(object.status,
            specifiedType: const FullType(GStaffMemberStatus)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GStaffUserInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffUserInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GStaffMemberStatus))
              as GStaffMemberStatus;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GStockAvailabilitySerializer
    implements PrimitiveSerializer<GStockAvailability> {
  @override
  final Iterable<Type> types = const <Type>[GStockAvailability];
  @override
  final String wireName = 'GStockAvailability';

  @override
  Object serialize(Serializers serializers, GStockAvailability object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GStockAvailability deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GStockAvailability.valueOf(serialized as String);
}

class _$GStockErrorCodeSerializer
    implements PrimitiveSerializer<GStockErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GStockErrorCode];
  @override
  final String wireName = 'GStockErrorCode';

  @override
  Object serialize(Serializers serializers, GStockErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GStockErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GStockErrorCode.valueOf(serialized as String);
}

class _$GStockFilterInputSerializer
    implements StructuredSerializer<GStockFilterInput> {
  @override
  final Iterable<Type> types = const [GStockFilterInput, _$GStockFilterInput];
  @override
  final String wireName = 'GStockFilterInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GStockFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.quantity != null) {
      result
        ..add('quantity')
        ..add(serializers.serialize(object.quantity,
            specifiedType: const FullType(double)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GStockFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStockFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GStockInputSerializer implements StructuredSerializer<GStockInput> {
  @override
  final Iterable<Type> types = const [GStockInput, _$GStockInput];
  @override
  final String wireName = 'GStockInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GStockInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'warehouse',
      serializers.serialize(object.warehouse,
          specifiedType: const FullType(String)),
    ];
    if (object.quantity != null) {
      result
        ..add('quantity')
        ..add(serializers.serialize(object.quantity,
            specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GStockInput deserialize(Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStockInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'warehouse':
          result.warehouse = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GTaxRateTypeSerializer implements PrimitiveSerializer<GTaxRateType> {
  @override
  final Iterable<Type> types = const <Type>[GTaxRateType];
  @override
  final String wireName = 'GTaxRateType';

  @override
  Object serialize(Serializers serializers, GTaxRateType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTaxRateType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTaxRateType.valueOf(serialized as String);
}

class _$GTransactionErrorSerializer
    implements PrimitiveSerializer<GTransactionError> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionError];
  @override
  final String wireName = 'GTransactionError';

  @override
  Object serialize(Serializers serializers, GTransactionError object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionError deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionError.valueOf(serialized as String);
}

class _$GTransactionKindSerializer
    implements PrimitiveSerializer<GTransactionKind> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionKind];
  @override
  final String wireName = 'GTransactionKind';

  @override
  Object serialize(Serializers serializers, GTransactionKind object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionKind deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionKind.valueOf(serialized as String);
}

class _$GTranslatableKindsSerializer
    implements PrimitiveSerializer<GTranslatableKinds> {
  @override
  final Iterable<Type> types = const <Type>[GTranslatableKinds];
  @override
  final String wireName = 'GTranslatableKinds';

  @override
  Object serialize(Serializers serializers, GTranslatableKinds object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTranslatableKinds deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTranslatableKinds.valueOf(serialized as String);
}

class _$GTranslationErrorCodeSerializer
    implements PrimitiveSerializer<GTranslationErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GTranslationErrorCode];
  @override
  final String wireName = 'GTranslationErrorCode';

  @override
  Object serialize(Serializers serializers, GTranslationErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTranslationErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTranslationErrorCode.valueOf(serialized as String);
}

class _$GTranslationInputSerializer
    implements StructuredSerializer<GTranslationInput> {
  @override
  final Iterable<Type> types = const [GTranslationInput, _$GTranslationInput];
  @override
  final String wireName = 'GTranslationInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.seoTitle != null) {
      result
        ..add('seoTitle')
        ..add(serializers.serialize(object.seoTitle,
            specifiedType: const FullType(String)));
    }
    if (object.seoDescription != null) {
      result
        ..add('seoDescription')
        ..add(serializers.serialize(object.seoDescription,
            specifiedType: const FullType(String)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.description != null) {
      result
        ..add('description')
        ..add(serializers.serialize(object.description,
            specifiedType: const FullType(String)));
    }
    if (object.descriptionJson != null) {
      result
        ..add('descriptionJson')
        ..add(serializers.serialize(object.descriptionJson,
            specifiedType: const FullType(GJSONString)));
    }
    return result;
  }

  @override
  GTranslationInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'seoTitle':
          result.seoTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'seoDescription':
          result.seoDescription = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'descriptionJson':
          result.descriptionJson.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString)) as GJSONString);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserCreateInputSerializer
    implements StructuredSerializer<GUserCreateInput> {
  @override
  final Iterable<Type> types = const [GUserCreateInput, _$GUserCreateInput];
  @override
  final String wireName = 'GUserCreateInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GUserCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.defaultBillingAddress != null) {
      result
        ..add('defaultBillingAddress')
        ..add(serializers.serialize(object.defaultBillingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.defaultShippingAddress != null) {
      result
        ..add('defaultShippingAddress')
        ..add(serializers.serialize(object.defaultShippingAddress,
            specifiedType: const FullType(GAddressInput)));
    }
    if (object.firstName != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(object.firstName,
            specifiedType: const FullType(String)));
    }
    if (object.lastName != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(object.lastName,
            specifiedType: const FullType(String)));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.note != null) {
      result
        ..add('note')
        ..add(serializers.serialize(object.note,
            specifiedType: const FullType(String)));
    }
    if (object.redirectUrl != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(object.redirectUrl,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'defaultBillingAddress':
          result.defaultBillingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'defaultShippingAddress':
          result.defaultShippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput)) as GAddressInput);
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserSortFieldSerializer
    implements PrimitiveSerializer<GUserSortField> {
  @override
  final Iterable<Type> types = const <Type>[GUserSortField];
  @override
  final String wireName = 'GUserSortField';

  @override
  Object serialize(Serializers serializers, GUserSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GUserSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GUserSortField.valueOf(serialized as String);
}

class _$GUserSortingInputSerializer
    implements StructuredSerializer<GUserSortingInput> {
  @override
  final Iterable<Type> types = const [GUserSortingInput, _$GUserSortingInput];
  @override
  final String wireName = 'GUserSortingInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GUserSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GUserSortField)),
    ];

    return result;
  }

  @override
  GUserSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GUserSortField)) as GUserSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherDiscountTypeSerializer
    implements PrimitiveSerializer<GVoucherDiscountType> {
  @override
  final Iterable<Type> types = const <Type>[GVoucherDiscountType];
  @override
  final String wireName = 'GVoucherDiscountType';

  @override
  Object serialize(Serializers serializers, GVoucherDiscountType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVoucherDiscountType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVoucherDiscountType.valueOf(serialized as String);
}

class _$GVoucherFilterInputSerializer
    implements StructuredSerializer<GVoucherFilterInput> {
  @override
  final Iterable<Type> types = const [
    GVoucherFilterInput,
    _$GVoucherFilterInput
  ];
  @override
  final String wireName = 'GVoucherFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GVoucherFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.status != null) {
      result
        ..add('status')
        ..add(serializers.serialize(object.status,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GDiscountStatusEnum)])));
    }
    if (object.timesUsed != null) {
      result
        ..add('timesUsed')
        ..add(serializers.serialize(object.timesUsed,
            specifiedType: const FullType(GIntRangeInput)));
    }
    if (object.discountType != null) {
      result
        ..add('discountType')
        ..add(serializers.serialize(object.discountType,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GVoucherDiscountType)])));
    }
    if (object.started != null) {
      result
        ..add('started')
        ..add(serializers.serialize(object.started,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVoucherFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'status':
          result.status.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDiscountStatusEnum)]))
              as BuiltList<Object>);
          break;
        case 'timesUsed':
          result.timesUsed.replace(serializers.deserialize(value,
              specifiedType: const FullType(GIntRangeInput)) as GIntRangeInput);
          break;
        case 'discountType':
          result.discountType.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GVoucherDiscountType)]))
              as BuiltList<Object>);
          break;
        case 'started':
          result.started.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))
              as GDateTimeRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherInputSerializer implements StructuredSerializer<GVoucherInput> {
  @override
  final Iterable<Type> types = const [GVoucherInput, _$GVoucherInput];
  @override
  final String wireName = 'GVoucherInput';

  @override
  Iterable<Object> serialize(Serializers serializers, GVoucherInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.type != null) {
      result
        ..add('type')
        ..add(serializers.serialize(object.type,
            specifiedType: const FullType(GVoucherTypeEnum)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.code != null) {
      result
        ..add('code')
        ..add(serializers.serialize(object.code,
            specifiedType: const FullType(String)));
    }
    if (object.startDate != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(object.startDate,
            specifiedType: const FullType(GDateTime)));
    }
    if (object.endDate != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(object.endDate,
            specifiedType: const FullType(GDateTime)));
    }
    if (object.discountValueType != null) {
      result
        ..add('discountValueType')
        ..add(serializers.serialize(object.discountValueType,
            specifiedType: const FullType(GDiscountValueTypeEnum)));
    }
    if (object.discountValue != null) {
      result
        ..add('discountValue')
        ..add(serializers.serialize(object.discountValue,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.products != null) {
      result
        ..add('products')
        ..add(serializers.serialize(object.products,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.collections != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(object.collections,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.categories != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(object.categories,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.minAmountSpent != null) {
      result
        ..add('minAmountSpent')
        ..add(serializers.serialize(object.minAmountSpent,
            specifiedType: const FullType(GDecimal)));
    }
    if (object.minCheckoutItemsQuantity != null) {
      result
        ..add('minCheckoutItemsQuantity')
        ..add(serializers.serialize(object.minCheckoutItemsQuantity,
            specifiedType: const FullType(int)));
    }
    if (object.countries != null) {
      result
        ..add('countries')
        ..add(serializers.serialize(object.countries,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    if (object.applyOncePerOrder != null) {
      result
        ..add('applyOncePerOrder')
        ..add(serializers.serialize(object.applyOncePerOrder,
            specifiedType: const FullType(bool)));
    }
    if (object.applyOncePerCustomer != null) {
      result
        ..add('applyOncePerCustomer')
        ..add(serializers.serialize(object.applyOncePerCustomer,
            specifiedType: const FullType(bool)));
    }
    if (object.usageLimit != null) {
      result
        ..add('usageLimit')
        ..add(serializers.serialize(object.usageLimit,
            specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GVoucherInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GVoucherTypeEnum))
              as GVoucherTypeEnum;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime)) as GDateTime);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime)) as GDateTime);
          break;
        case 'discountValueType':
          result.discountValueType = serializers.deserialize(value,
                  specifiedType: const FullType(GDiscountValueTypeEnum))
              as GDiscountValueTypeEnum;
          break;
        case 'discountValue':
          result.discountValue.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'minAmountSpent':
          result.minAmountSpent.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDecimal)) as GDecimal);
          break;
        case 'minCheckoutItemsQuantity':
          result.minCheckoutItemsQuantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
        case 'countries':
          result.countries.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
        case 'applyOncePerOrder':
          result.applyOncePerOrder = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'applyOncePerCustomer':
          result.applyOncePerCustomer = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'usageLimit':
          result.usageLimit = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherSortFieldSerializer
    implements PrimitiveSerializer<GVoucherSortField> {
  @override
  final Iterable<Type> types = const <Type>[GVoucherSortField];
  @override
  final String wireName = 'GVoucherSortField';

  @override
  Object serialize(Serializers serializers, GVoucherSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVoucherSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVoucherSortField.valueOf(serialized as String);
}

class _$GVoucherSortingInputSerializer
    implements StructuredSerializer<GVoucherSortingInput> {
  @override
  final Iterable<Type> types = const [
    GVoucherSortingInput,
    _$GVoucherSortingInput
  ];
  @override
  final String wireName = 'GVoucherSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GVoucherSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GVoucherSortField)),
    ];

    return result;
  }

  @override
  GVoucherSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GVoucherSortField))
              as GVoucherSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherTypeEnumSerializer
    implements PrimitiveSerializer<GVoucherTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GVoucherTypeEnum];
  @override
  final String wireName = 'GVoucherTypeEnum';

  @override
  Object serialize(Serializers serializers, GVoucherTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVoucherTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVoucherTypeEnum.valueOf(serialized as String);
}

class _$GWarehouseAddressInputSerializer
    implements StructuredSerializer<GWarehouseAddressInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseAddressInput,
    _$GWarehouseAddressInput
  ];
  @override
  final String wireName = 'GWarehouseAddressInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWarehouseAddressInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'streetAddress1',
      serializers.serialize(object.streetAddress1,
          specifiedType: const FullType(String)),
      'city',
      serializers.serialize(object.city, specifiedType: const FullType(String)),
      'country',
      serializers.serialize(object.country,
          specifiedType: const FullType(GCountryCode)),
    ];
    if (object.streetAddress2 != null) {
      result
        ..add('streetAddress2')
        ..add(serializers.serialize(object.streetAddress2,
            specifiedType: const FullType(String)));
    }
    if (object.cityArea != null) {
      result
        ..add('cityArea')
        ..add(serializers.serialize(object.cityArea,
            specifiedType: const FullType(String)));
    }
    if (object.postalCode != null) {
      result
        ..add('postalCode')
        ..add(serializers.serialize(object.postalCode,
            specifiedType: const FullType(String)));
    }
    if (object.countryArea != null) {
      result
        ..add('countryArea')
        ..add(serializers.serialize(object.countryArea,
            specifiedType: const FullType(String)));
    }
    if (object.phone != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(object.phone,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWarehouseAddressInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseAddressInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'streetAddress1':
          result.streetAddress1 = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'streetAddress2':
          result.streetAddress2 = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'city':
          result.city = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'cityArea':
          result.cityArea = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'postalCode':
          result.postalCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'country':
          result.country = serializers.deserialize(value,
              specifiedType: const FullType(GCountryCode)) as GCountryCode;
          break;
        case 'countryArea':
          result.countryArea = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GWarehouseCreateInputSerializer
    implements StructuredSerializer<GWarehouseCreateInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseCreateInput,
    _$GWarehouseCreateInput
  ];
  @override
  final String wireName = 'GWarehouseCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWarehouseCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'address',
      serializers.serialize(object.address,
          specifiedType: const FullType(GWarehouseAddressInput)),
    ];
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.companyName != null) {
      result
        ..add('companyName')
        ..add(serializers.serialize(object.companyName,
            specifiedType: const FullType(String)));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.shippingZones != null) {
      result
        ..add('shippingZones')
        ..add(serializers.serialize(object.shippingZones,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GWarehouseCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'companyName':
          result.companyName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'address':
          result.address.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWarehouseAddressInput))
              as GWarehouseAddressInput);
          break;
        case 'shippingZones':
          result.shippingZones.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GWarehouseErrorCodeSerializer
    implements PrimitiveSerializer<GWarehouseErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GWarehouseErrorCode];
  @override
  final String wireName = 'GWarehouseErrorCode';

  @override
  Object serialize(Serializers serializers, GWarehouseErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWarehouseErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWarehouseErrorCode.valueOf(serialized as String);
}

class _$GWarehouseFilterInputSerializer
    implements StructuredSerializer<GWarehouseFilterInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseFilterInput,
    _$GWarehouseFilterInput
  ];
  @override
  final String wireName = 'GWarehouseFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWarehouseFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.ids != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(object.ids,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GWarehouseFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(String)]))
              as BuiltList<Object>);
          break;
      }
    }

    return result.build();
  }
}

class _$GWarehouseSortFieldSerializer
    implements PrimitiveSerializer<GWarehouseSortField> {
  @override
  final Iterable<Type> types = const <Type>[GWarehouseSortField];
  @override
  final String wireName = 'GWarehouseSortField';

  @override
  Object serialize(Serializers serializers, GWarehouseSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWarehouseSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWarehouseSortField.valueOf(serialized as String);
}

class _$GWarehouseSortingInputSerializer
    implements StructuredSerializer<GWarehouseSortingInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseSortingInput,
    _$GWarehouseSortingInput
  ];
  @override
  final String wireName = 'GWarehouseSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWarehouseSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GWarehouseSortField)),
    ];

    return result;
  }

  @override
  GWarehouseSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GWarehouseSortField))
              as GWarehouseSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GWarehouseUpdateInputSerializer
    implements StructuredSerializer<GWarehouseUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseUpdateInput,
    _$GWarehouseUpdateInput
  ];
  @override
  final String wireName = 'GWarehouseUpdateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWarehouseUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.slug != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(object.slug,
            specifiedType: const FullType(String)));
    }
    if (object.companyName != null) {
      result
        ..add('companyName')
        ..add(serializers.serialize(object.companyName,
            specifiedType: const FullType(String)));
    }
    if (object.email != null) {
      result
        ..add('email')
        ..add(serializers.serialize(object.email,
            specifiedType: const FullType(String)));
    }
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.address != null) {
      result
        ..add('address')
        ..add(serializers.serialize(object.address,
            specifiedType: const FullType(GWarehouseAddressInput)));
    }
    return result;
  }

  @override
  GWarehouseUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'companyName':
          result.companyName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'address':
          result.address.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GWarehouseAddressInput))
              as GWarehouseAddressInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GWebhookCreateInputSerializer
    implements StructuredSerializer<GWebhookCreateInput> {
  @override
  final Iterable<Type> types = const [
    GWebhookCreateInput,
    _$GWebhookCreateInput
  ];
  @override
  final String wireName = 'GWebhookCreateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWebhookCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.targetUrl != null) {
      result
        ..add('targetUrl')
        ..add(serializers.serialize(object.targetUrl,
            specifiedType: const FullType(String)));
    }
    if (object.events != null) {
      result
        ..add('events')
        ..add(serializers.serialize(object.events,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GWebhookEventTypeEnum)])));
    }
    if (object.serviceAccount != null) {
      result
        ..add('serviceAccount')
        ..add(serializers.serialize(object.serviceAccount,
            specifiedType: const FullType(String)));
    }
    if (object.app != null) {
      result
        ..add('app')
        ..add(serializers.serialize(object.app,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.secretKey != null) {
      result
        ..add('secretKey')
        ..add(serializers.serialize(object.secretKey,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWebhookCreateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWebhookCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'targetUrl':
          result.targetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'events':
          result.events.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GWebhookEventTypeEnum)]))
              as BuiltList<Object>);
          break;
        case 'serviceAccount':
          result.serviceAccount = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'app':
          result.app = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'secretKey':
          result.secretKey = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GWebhookErrorCodeSerializer
    implements PrimitiveSerializer<GWebhookErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookErrorCode];
  @override
  final String wireName = 'GWebhookErrorCode';

  @override
  Object serialize(Serializers serializers, GWebhookErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookErrorCode.valueOf(serialized as String);
}

class _$GWebhookEventTypeEnumSerializer
    implements PrimitiveSerializer<GWebhookEventTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookEventTypeEnum];
  @override
  final String wireName = 'GWebhookEventTypeEnum';

  @override
  Object serialize(Serializers serializers, GWebhookEventTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookEventTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookEventTypeEnum.valueOf(serialized as String);
}

class _$GWebhookFilterInputSerializer
    implements StructuredSerializer<GWebhookFilterInput> {
  @override
  final Iterable<Type> types = const [
    GWebhookFilterInput,
    _$GWebhookFilterInput
  ];
  @override
  final String wireName = 'GWebhookFilterInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWebhookFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.search != null) {
      result
        ..add('search')
        ..add(serializers.serialize(object.search,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GWebhookFilterInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWebhookFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GWebhookSampleEventTypeEnumSerializer
    implements PrimitiveSerializer<GWebhookSampleEventTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookSampleEventTypeEnum];
  @override
  final String wireName = 'GWebhookSampleEventTypeEnum';

  @override
  Object serialize(Serializers serializers, GWebhookSampleEventTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookSampleEventTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookSampleEventTypeEnum.valueOf(serialized as String);
}

class _$GWebhookSortFieldSerializer
    implements PrimitiveSerializer<GWebhookSortField> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookSortField];
  @override
  final String wireName = 'GWebhookSortField';

  @override
  Object serialize(Serializers serializers, GWebhookSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookSortField.valueOf(serialized as String);
}

class _$GWebhookSortingInputSerializer
    implements StructuredSerializer<GWebhookSortingInput> {
  @override
  final Iterable<Type> types = const [
    GWebhookSortingInput,
    _$GWebhookSortingInput
  ];
  @override
  final String wireName = 'GWebhookSortingInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWebhookSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GWebhookSortField)),
    ];

    return result;
  }

  @override
  GWebhookSortingInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWebhookSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GWebhookSortField))
              as GWebhookSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GWebhookUpdateInputSerializer
    implements StructuredSerializer<GWebhookUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GWebhookUpdateInput,
    _$GWebhookUpdateInput
  ];
  @override
  final String wireName = 'GWebhookUpdateInput';

  @override
  Iterable<Object> serialize(
      Serializers serializers, GWebhookUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object>[];
    if (object.name != null) {
      result
        ..add('name')
        ..add(serializers.serialize(object.name,
            specifiedType: const FullType(String)));
    }
    if (object.targetUrl != null) {
      result
        ..add('targetUrl')
        ..add(serializers.serialize(object.targetUrl,
            specifiedType: const FullType(String)));
    }
    if (object.events != null) {
      result
        ..add('events')
        ..add(serializers.serialize(object.events,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GWebhookEventTypeEnum)])));
    }
    if (object.serviceAccount != null) {
      result
        ..add('serviceAccount')
        ..add(serializers.serialize(object.serviceAccount,
            specifiedType: const FullType(String)));
    }
    if (object.app != null) {
      result
        ..add('app')
        ..add(serializers.serialize(object.app,
            specifiedType: const FullType(String)));
    }
    if (object.isActive != null) {
      result
        ..add('isActive')
        ..add(serializers.serialize(object.isActive,
            specifiedType: const FullType(bool)));
    }
    if (object.secretKey != null) {
      result
        ..add('secretKey')
        ..add(serializers.serialize(object.secretKey,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWebhookUpdateInput deserialize(
      Serializers serializers, Iterable<Object> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWebhookUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current as String;
      iterator.moveNext();
      final dynamic value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'targetUrl':
          result.targetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'events':
          result.events.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GWebhookEventTypeEnum)]))
              as BuiltList<Object>);
          break;
        case 'serviceAccount':
          result.serviceAccount = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'app':
          result.app = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool;
          break;
        case 'secretKey':
          result.secretKey = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GWeightUnitsEnumSerializer
    implements PrimitiveSerializer<GWeightUnitsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWeightUnitsEnum];
  @override
  final String wireName = 'GWeightUnitsEnum';

  @override
  Object serialize(Serializers serializers, GWeightUnitsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWeightUnitsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWeightUnitsEnum.valueOf(serialized as String);
}

class _$GAccountInput extends GAccountInput {
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final GAddressInput defaultBillingAddress;
  @override
  final GAddressInput defaultShippingAddress;

  factory _$GAccountInput([void Function(GAccountInputBuilder) updates]) =>
      (new GAccountInputBuilder()..update(updates)).build();

  _$GAccountInput._(
      {this.firstName,
      this.lastName,
      this.defaultBillingAddress,
      this.defaultShippingAddress})
      : super._();

  @override
  GAccountInput rebuild(void Function(GAccountInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccountInputBuilder toBuilder() => new GAccountInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccountInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        defaultBillingAddress == other.defaultBillingAddress &&
        defaultShippingAddress == other.defaultShippingAddress;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
            defaultBillingAddress.hashCode),
        defaultShippingAddress.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAccountInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('defaultBillingAddress', defaultBillingAddress)
          ..add('defaultShippingAddress', defaultShippingAddress))
        .toString();
  }
}

class GAccountInputBuilder
    implements Builder<GAccountInput, GAccountInputBuilder> {
  _$GAccountInput _$v;

  String _firstName;
  String get firstName => _$this._firstName;
  set firstName(String firstName) => _$this._firstName = firstName;

  String _lastName;
  String get lastName => _$this._lastName;
  set lastName(String lastName) => _$this._lastName = lastName;

  GAddressInputBuilder _defaultBillingAddress;
  GAddressInputBuilder get defaultBillingAddress =>
      _$this._defaultBillingAddress ??= new GAddressInputBuilder();
  set defaultBillingAddress(GAddressInputBuilder defaultBillingAddress) =>
      _$this._defaultBillingAddress = defaultBillingAddress;

  GAddressInputBuilder _defaultShippingAddress;
  GAddressInputBuilder get defaultShippingAddress =>
      _$this._defaultShippingAddress ??= new GAddressInputBuilder();
  set defaultShippingAddress(GAddressInputBuilder defaultShippingAddress) =>
      _$this._defaultShippingAddress = defaultShippingAddress;

  GAccountInputBuilder();

  GAccountInputBuilder get _$this {
    if (_$v != null) {
      _firstName = _$v.firstName;
      _lastName = _$v.lastName;
      _defaultBillingAddress = _$v.defaultBillingAddress?.toBuilder();
      _defaultShippingAddress = _$v.defaultShippingAddress?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccountInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAccountInput;
  }

  @override
  void update(void Function(GAccountInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAccountInput build() {
    _$GAccountInput _$result;
    try {
      _$result = _$v ??
          new _$GAccountInput._(
              firstName: firstName,
              lastName: lastName,
              defaultBillingAddress: _defaultBillingAddress?.build(),
              defaultShippingAddress: _defaultShippingAddress?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'defaultBillingAddress';
        _defaultBillingAddress?.build();
        _$failedField = 'defaultShippingAddress';
        _defaultShippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GAccountInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAccountRegisterInput extends GAccountRegisterInput {
  @override
  final String email;
  @override
  final String password;
  @override
  final String redirectUrl;

  factory _$GAccountRegisterInput(
          [void Function(GAccountRegisterInputBuilder) updates]) =>
      (new GAccountRegisterInputBuilder()..update(updates)).build();

  _$GAccountRegisterInput._({this.email, this.password, this.redirectUrl})
      : super._() {
    if (email == null) {
      throw new BuiltValueNullFieldError('GAccountRegisterInput', 'email');
    }
    if (password == null) {
      throw new BuiltValueNullFieldError('GAccountRegisterInput', 'password');
    }
  }

  @override
  GAccountRegisterInput rebuild(
          void Function(GAccountRegisterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccountRegisterInputBuilder toBuilder() =>
      new GAccountRegisterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccountRegisterInput &&
        email == other.email &&
        password == other.password &&
        redirectUrl == other.redirectUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, email.hashCode), password.hashCode), redirectUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAccountRegisterInput')
          ..add('email', email)
          ..add('password', password)
          ..add('redirectUrl', redirectUrl))
        .toString();
  }
}

class GAccountRegisterInputBuilder
    implements Builder<GAccountRegisterInput, GAccountRegisterInputBuilder> {
  _$GAccountRegisterInput _$v;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  String _password;
  String get password => _$this._password;
  set password(String password) => _$this._password = password;

  String _redirectUrl;
  String get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String redirectUrl) => _$this._redirectUrl = redirectUrl;

  GAccountRegisterInputBuilder();

  GAccountRegisterInputBuilder get _$this {
    if (_$v != null) {
      _email = _$v.email;
      _password = _$v.password;
      _redirectUrl = _$v.redirectUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccountRegisterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAccountRegisterInput;
  }

  @override
  void update(void Function(GAccountRegisterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAccountRegisterInput build() {
    final _$result = _$v ??
        new _$GAccountRegisterInput._(
            email: email, password: password, redirectUrl: redirectUrl);
    replace(_$result);
    return _$result;
  }
}

class _$GAddressInput extends GAddressInput {
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final String companyName;
  @override
  final String streetAddress1;
  @override
  final String streetAddress2;
  @override
  final String city;
  @override
  final String cityArea;
  @override
  final String postalCode;
  @override
  final GCountryCode country;
  @override
  final String countryArea;
  @override
  final String phone;

  factory _$GAddressInput([void Function(GAddressInputBuilder) updates]) =>
      (new GAddressInputBuilder()..update(updates)).build();

  _$GAddressInput._(
      {this.firstName,
      this.lastName,
      this.companyName,
      this.streetAddress1,
      this.streetAddress2,
      this.city,
      this.cityArea,
      this.postalCode,
      this.country,
      this.countryArea,
      this.phone})
      : super._();

  @override
  GAddressInput rebuild(void Function(GAddressInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAddressInputBuilder toBuilder() => new GAddressInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAddressInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        companyName == other.companyName &&
        streetAddress1 == other.streetAddress1 &&
        streetAddress2 == other.streetAddress2 &&
        city == other.city &&
        cityArea == other.cityArea &&
        postalCode == other.postalCode &&
        country == other.country &&
        countryArea == other.countryArea &&
        phone == other.phone;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, firstName.hashCode),
                                            lastName.hashCode),
                                        companyName.hashCode),
                                    streetAddress1.hashCode),
                                streetAddress2.hashCode),
                            city.hashCode),
                        cityArea.hashCode),
                    postalCode.hashCode),
                country.hashCode),
            countryArea.hashCode),
        phone.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAddressInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('companyName', companyName)
          ..add('streetAddress1', streetAddress1)
          ..add('streetAddress2', streetAddress2)
          ..add('city', city)
          ..add('cityArea', cityArea)
          ..add('postalCode', postalCode)
          ..add('country', country)
          ..add('countryArea', countryArea)
          ..add('phone', phone))
        .toString();
  }
}

class GAddressInputBuilder
    implements Builder<GAddressInput, GAddressInputBuilder> {
  _$GAddressInput _$v;

  String _firstName;
  String get firstName => _$this._firstName;
  set firstName(String firstName) => _$this._firstName = firstName;

  String _lastName;
  String get lastName => _$this._lastName;
  set lastName(String lastName) => _$this._lastName = lastName;

  String _companyName;
  String get companyName => _$this._companyName;
  set companyName(String companyName) => _$this._companyName = companyName;

  String _streetAddress1;
  String get streetAddress1 => _$this._streetAddress1;
  set streetAddress1(String streetAddress1) =>
      _$this._streetAddress1 = streetAddress1;

  String _streetAddress2;
  String get streetAddress2 => _$this._streetAddress2;
  set streetAddress2(String streetAddress2) =>
      _$this._streetAddress2 = streetAddress2;

  String _city;
  String get city => _$this._city;
  set city(String city) => _$this._city = city;

  String _cityArea;
  String get cityArea => _$this._cityArea;
  set cityArea(String cityArea) => _$this._cityArea = cityArea;

  String _postalCode;
  String get postalCode => _$this._postalCode;
  set postalCode(String postalCode) => _$this._postalCode = postalCode;

  GCountryCode _country;
  GCountryCode get country => _$this._country;
  set country(GCountryCode country) => _$this._country = country;

  String _countryArea;
  String get countryArea => _$this._countryArea;
  set countryArea(String countryArea) => _$this._countryArea = countryArea;

  String _phone;
  String get phone => _$this._phone;
  set phone(String phone) => _$this._phone = phone;

  GAddressInputBuilder();

  GAddressInputBuilder get _$this {
    if (_$v != null) {
      _firstName = _$v.firstName;
      _lastName = _$v.lastName;
      _companyName = _$v.companyName;
      _streetAddress1 = _$v.streetAddress1;
      _streetAddress2 = _$v.streetAddress2;
      _city = _$v.city;
      _cityArea = _$v.cityArea;
      _postalCode = _$v.postalCode;
      _country = _$v.country;
      _countryArea = _$v.countryArea;
      _phone = _$v.phone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAddressInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAddressInput;
  }

  @override
  void update(void Function(GAddressInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAddressInput build() {
    final _$result = _$v ??
        new _$GAddressInput._(
            firstName: firstName,
            lastName: lastName,
            companyName: companyName,
            streetAddress1: streetAddress1,
            streetAddress2: streetAddress2,
            city: city,
            cityArea: cityArea,
            postalCode: postalCode,
            country: country,
            countryArea: countryArea,
            phone: phone);
    replace(_$result);
    return _$result;
  }
}

class _$GAppFilterInput extends GAppFilterInput {
  @override
  final String search;
  @override
  final bool isActive;

  factory _$GAppFilterInput([void Function(GAppFilterInputBuilder) updates]) =>
      (new GAppFilterInputBuilder()..update(updates)).build();

  _$GAppFilterInput._({this.search, this.isActive}) : super._();

  @override
  GAppFilterInput rebuild(void Function(GAppFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppFilterInputBuilder toBuilder() =>
      new GAppFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppFilterInput &&
        search == other.search &&
        isActive == other.isActive;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), isActive.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAppFilterInput')
          ..add('search', search)
          ..add('isActive', isActive))
        .toString();
  }
}

class GAppFilterInputBuilder
    implements Builder<GAppFilterInput, GAppFilterInputBuilder> {
  _$GAppFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  GAppFilterInputBuilder();

  GAppFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _isActive = _$v.isActive;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAppFilterInput;
  }

  @override
  void update(void Function(GAppFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAppFilterInput build() {
    final _$result =
        _$v ?? new _$GAppFilterInput._(search: search, isActive: isActive);
    replace(_$result);
    return _$result;
  }
}

class _$GAppInput extends GAppInput {
  @override
  final String name;
  @override
  final bool isActive;
  @override
  final BuiltList<GPermissionEnum> permissions;

  factory _$GAppInput([void Function(GAppInputBuilder) updates]) =>
      (new GAppInputBuilder()..update(updates)).build();

  _$GAppInput._({this.name, this.isActive, this.permissions}) : super._();

  @override
  GAppInput rebuild(void Function(GAppInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppInputBuilder toBuilder() => new GAppInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppInput &&
        name == other.name &&
        isActive == other.isActive &&
        permissions == other.permissions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, name.hashCode), isActive.hashCode), permissions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAppInput')
          ..add('name', name)
          ..add('isActive', isActive)
          ..add('permissions', permissions))
        .toString();
  }
}

class GAppInputBuilder implements Builder<GAppInput, GAppInputBuilder> {
  _$GAppInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  ListBuilder<GPermissionEnum> _permissions;
  ListBuilder<GPermissionEnum> get permissions =>
      _$this._permissions ??= new ListBuilder<GPermissionEnum>();
  set permissions(ListBuilder<GPermissionEnum> permissions) =>
      _$this._permissions = permissions;

  GAppInputBuilder();

  GAppInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _isActive = _$v.isActive;
      _permissions = _$v.permissions?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAppInput;
  }

  @override
  void update(void Function(GAppInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAppInput build() {
    _$GAppInput _$result;
    try {
      _$result = _$v ??
          new _$GAppInput._(
              name: name,
              isActive: isActive,
              permissions: _permissions?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'permissions';
        _permissions?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GAppInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAppSortingInput extends GAppSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GAppSortField field;

  factory _$GAppSortingInput(
          [void Function(GAppSortingInputBuilder) updates]) =>
      (new GAppSortingInputBuilder()..update(updates)).build();

  _$GAppSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GAppSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GAppSortingInput', 'field');
    }
  }

  @override
  GAppSortingInput rebuild(void Function(GAppSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppSortingInputBuilder toBuilder() =>
      new GAppSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAppSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GAppSortingInputBuilder
    implements Builder<GAppSortingInput, GAppSortingInputBuilder> {
  _$GAppSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GAppSortField _field;
  GAppSortField get field => _$this._field;
  set field(GAppSortField field) => _$this._field = field;

  GAppSortingInputBuilder();

  GAppSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAppSortingInput;
  }

  @override
  void update(void Function(GAppSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAppSortingInput build() {
    final _$result =
        _$v ?? new _$GAppSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GAppTokenInput extends GAppTokenInput {
  @override
  final String name;
  @override
  final String app;

  factory _$GAppTokenInput([void Function(GAppTokenInputBuilder) updates]) =>
      (new GAppTokenInputBuilder()..update(updates)).build();

  _$GAppTokenInput._({this.name, this.app}) : super._() {
    if (app == null) {
      throw new BuiltValueNullFieldError('GAppTokenInput', 'app');
    }
  }

  @override
  GAppTokenInput rebuild(void Function(GAppTokenInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppTokenInputBuilder toBuilder() =>
      new GAppTokenInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppTokenInput && name == other.name && app == other.app;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), app.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAppTokenInput')
          ..add('name', name)
          ..add('app', app))
        .toString();
  }
}

class GAppTokenInputBuilder
    implements Builder<GAppTokenInput, GAppTokenInputBuilder> {
  _$GAppTokenInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _app;
  String get app => _$this._app;
  set app(String app) => _$this._app = app;

  GAppTokenInputBuilder();

  GAppTokenInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _app = _$v.app;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppTokenInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAppTokenInput;
  }

  @override
  void update(void Function(GAppTokenInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAppTokenInput build() {
    final _$result = _$v ?? new _$GAppTokenInput._(name: name, app: app);
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeAssignInput extends GAttributeAssignInput {
  @override
  final String id;
  @override
  final GAttributeTypeEnum type;

  factory _$GAttributeAssignInput(
          [void Function(GAttributeAssignInputBuilder) updates]) =>
      (new GAttributeAssignInputBuilder()..update(updates)).build();

  _$GAttributeAssignInput._({this.id, this.type}) : super._() {
    if (id == null) {
      throw new BuiltValueNullFieldError('GAttributeAssignInput', 'id');
    }
    if (type == null) {
      throw new BuiltValueNullFieldError('GAttributeAssignInput', 'type');
    }
  }

  @override
  GAttributeAssignInput rebuild(
          void Function(GAttributeAssignInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeAssignInputBuilder toBuilder() =>
      new GAttributeAssignInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeAssignInput &&
        id == other.id &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeAssignInput')
          ..add('id', id)
          ..add('type', type))
        .toString();
  }
}

class GAttributeAssignInputBuilder
    implements Builder<GAttributeAssignInput, GAttributeAssignInputBuilder> {
  _$GAttributeAssignInput _$v;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  GAttributeTypeEnum _type;
  GAttributeTypeEnum get type => _$this._type;
  set type(GAttributeTypeEnum type) => _$this._type = type;

  GAttributeAssignInputBuilder();

  GAttributeAssignInputBuilder get _$this {
    if (_$v != null) {
      _id = _$v.id;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeAssignInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeAssignInput;
  }

  @override
  void update(void Function(GAttributeAssignInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeAssignInput build() {
    final _$result = _$v ?? new _$GAttributeAssignInput._(id: id, type: type);
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeCreateInput extends GAttributeCreateInput {
  @override
  final GAttributeInputTypeEnum inputType;
  @override
  final String name;
  @override
  final String slug;
  @override
  final BuiltList<GAttributeValueCreateInput> values;
  @override
  final bool valueRequired;
  @override
  final bool isVariantOnly;
  @override
  final bool visibleInStorefront;
  @override
  final bool filterableInStorefront;
  @override
  final bool filterableInDashboard;
  @override
  final int storefrontSearchPosition;
  @override
  final bool availableInGrid;

  factory _$GAttributeCreateInput(
          [void Function(GAttributeCreateInputBuilder) updates]) =>
      (new GAttributeCreateInputBuilder()..update(updates)).build();

  _$GAttributeCreateInput._(
      {this.inputType,
      this.name,
      this.slug,
      this.values,
      this.valueRequired,
      this.isVariantOnly,
      this.visibleInStorefront,
      this.filterableInStorefront,
      this.filterableInDashboard,
      this.storefrontSearchPosition,
      this.availableInGrid})
      : super._() {
    if (name == null) {
      throw new BuiltValueNullFieldError('GAttributeCreateInput', 'name');
    }
  }

  @override
  GAttributeCreateInput rebuild(
          void Function(GAttributeCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeCreateInputBuilder toBuilder() =>
      new GAttributeCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeCreateInput &&
        inputType == other.inputType &&
        name == other.name &&
        slug == other.slug &&
        values == other.values &&
        valueRequired == other.valueRequired &&
        isVariantOnly == other.isVariantOnly &&
        visibleInStorefront == other.visibleInStorefront &&
        filterableInStorefront == other.filterableInStorefront &&
        filterableInDashboard == other.filterableInDashboard &&
        storefrontSearchPosition == other.storefrontSearchPosition &&
        availableInGrid == other.availableInGrid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, inputType.hashCode),
                                            name.hashCode),
                                        slug.hashCode),
                                    values.hashCode),
                                valueRequired.hashCode),
                            isVariantOnly.hashCode),
                        visibleInStorefront.hashCode),
                    filterableInStorefront.hashCode),
                filterableInDashboard.hashCode),
            storefrontSearchPosition.hashCode),
        availableInGrid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeCreateInput')
          ..add('inputType', inputType)
          ..add('name', name)
          ..add('slug', slug)
          ..add('values', values)
          ..add('valueRequired', valueRequired)
          ..add('isVariantOnly', isVariantOnly)
          ..add('visibleInStorefront', visibleInStorefront)
          ..add('filterableInStorefront', filterableInStorefront)
          ..add('filterableInDashboard', filterableInDashboard)
          ..add('storefrontSearchPosition', storefrontSearchPosition)
          ..add('availableInGrid', availableInGrid))
        .toString();
  }
}

class GAttributeCreateInputBuilder
    implements Builder<GAttributeCreateInput, GAttributeCreateInputBuilder> {
  _$GAttributeCreateInput _$v;

  GAttributeInputTypeEnum _inputType;
  GAttributeInputTypeEnum get inputType => _$this._inputType;
  set inputType(GAttributeInputTypeEnum inputType) =>
      _$this._inputType = inputType;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  ListBuilder<GAttributeValueCreateInput> _values;
  ListBuilder<GAttributeValueCreateInput> get values =>
      _$this._values ??= new ListBuilder<GAttributeValueCreateInput>();
  set values(ListBuilder<GAttributeValueCreateInput> values) =>
      _$this._values = values;

  bool _valueRequired;
  bool get valueRequired => _$this._valueRequired;
  set valueRequired(bool valueRequired) =>
      _$this._valueRequired = valueRequired;

  bool _isVariantOnly;
  bool get isVariantOnly => _$this._isVariantOnly;
  set isVariantOnly(bool isVariantOnly) =>
      _$this._isVariantOnly = isVariantOnly;

  bool _visibleInStorefront;
  bool get visibleInStorefront => _$this._visibleInStorefront;
  set visibleInStorefront(bool visibleInStorefront) =>
      _$this._visibleInStorefront = visibleInStorefront;

  bool _filterableInStorefront;
  bool get filterableInStorefront => _$this._filterableInStorefront;
  set filterableInStorefront(bool filterableInStorefront) =>
      _$this._filterableInStorefront = filterableInStorefront;

  bool _filterableInDashboard;
  bool get filterableInDashboard => _$this._filterableInDashboard;
  set filterableInDashboard(bool filterableInDashboard) =>
      _$this._filterableInDashboard = filterableInDashboard;

  int _storefrontSearchPosition;
  int get storefrontSearchPosition => _$this._storefrontSearchPosition;
  set storefrontSearchPosition(int storefrontSearchPosition) =>
      _$this._storefrontSearchPosition = storefrontSearchPosition;

  bool _availableInGrid;
  bool get availableInGrid => _$this._availableInGrid;
  set availableInGrid(bool availableInGrid) =>
      _$this._availableInGrid = availableInGrid;

  GAttributeCreateInputBuilder();

  GAttributeCreateInputBuilder get _$this {
    if (_$v != null) {
      _inputType = _$v.inputType;
      _name = _$v.name;
      _slug = _$v.slug;
      _values = _$v.values?.toBuilder();
      _valueRequired = _$v.valueRequired;
      _isVariantOnly = _$v.isVariantOnly;
      _visibleInStorefront = _$v.visibleInStorefront;
      _filterableInStorefront = _$v.filterableInStorefront;
      _filterableInDashboard = _$v.filterableInDashboard;
      _storefrontSearchPosition = _$v.storefrontSearchPosition;
      _availableInGrid = _$v.availableInGrid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeCreateInput;
  }

  @override
  void update(void Function(GAttributeCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeCreateInput build() {
    _$GAttributeCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeCreateInput._(
              inputType: inputType,
              name: name,
              slug: slug,
              values: _values?.build(),
              valueRequired: valueRequired,
              isVariantOnly: isVariantOnly,
              visibleInStorefront: visibleInStorefront,
              filterableInStorefront: filterableInStorefront,
              filterableInDashboard: filterableInDashboard,
              storefrontSearchPosition: storefrontSearchPosition,
              availableInGrid: availableInGrid);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'values';
        _values?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GAttributeCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeFilterInput extends GAttributeFilterInput {
  @override
  final bool valueRequired;
  @override
  final bool isVariantOnly;
  @override
  final bool visibleInStorefront;
  @override
  final bool filterableInStorefront;
  @override
  final bool filterableInDashboard;
  @override
  final bool availableInGrid;
  @override
  final String search;
  @override
  final BuiltList<String> ids;
  @override
  final String inCollection;
  @override
  final String inCategory;

  factory _$GAttributeFilterInput(
          [void Function(GAttributeFilterInputBuilder) updates]) =>
      (new GAttributeFilterInputBuilder()..update(updates)).build();

  _$GAttributeFilterInput._(
      {this.valueRequired,
      this.isVariantOnly,
      this.visibleInStorefront,
      this.filterableInStorefront,
      this.filterableInDashboard,
      this.availableInGrid,
      this.search,
      this.ids,
      this.inCollection,
      this.inCategory})
      : super._();

  @override
  GAttributeFilterInput rebuild(
          void Function(GAttributeFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeFilterInputBuilder toBuilder() =>
      new GAttributeFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeFilterInput &&
        valueRequired == other.valueRequired &&
        isVariantOnly == other.isVariantOnly &&
        visibleInStorefront == other.visibleInStorefront &&
        filterableInStorefront == other.filterableInStorefront &&
        filterableInDashboard == other.filterableInDashboard &&
        availableInGrid == other.availableInGrid &&
        search == other.search &&
        ids == other.ids &&
        inCollection == other.inCollection &&
        inCategory == other.inCategory;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, valueRequired.hashCode),
                                        isVariantOnly.hashCode),
                                    visibleInStorefront.hashCode),
                                filterableInStorefront.hashCode),
                            filterableInDashboard.hashCode),
                        availableInGrid.hashCode),
                    search.hashCode),
                ids.hashCode),
            inCollection.hashCode),
        inCategory.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeFilterInput')
          ..add('valueRequired', valueRequired)
          ..add('isVariantOnly', isVariantOnly)
          ..add('visibleInStorefront', visibleInStorefront)
          ..add('filterableInStorefront', filterableInStorefront)
          ..add('filterableInDashboard', filterableInDashboard)
          ..add('availableInGrid', availableInGrid)
          ..add('search', search)
          ..add('ids', ids)
          ..add('inCollection', inCollection)
          ..add('inCategory', inCategory))
        .toString();
  }
}

class GAttributeFilterInputBuilder
    implements Builder<GAttributeFilterInput, GAttributeFilterInputBuilder> {
  _$GAttributeFilterInput _$v;

  bool _valueRequired;
  bool get valueRequired => _$this._valueRequired;
  set valueRequired(bool valueRequired) =>
      _$this._valueRequired = valueRequired;

  bool _isVariantOnly;
  bool get isVariantOnly => _$this._isVariantOnly;
  set isVariantOnly(bool isVariantOnly) =>
      _$this._isVariantOnly = isVariantOnly;

  bool _visibleInStorefront;
  bool get visibleInStorefront => _$this._visibleInStorefront;
  set visibleInStorefront(bool visibleInStorefront) =>
      _$this._visibleInStorefront = visibleInStorefront;

  bool _filterableInStorefront;
  bool get filterableInStorefront => _$this._filterableInStorefront;
  set filterableInStorefront(bool filterableInStorefront) =>
      _$this._filterableInStorefront = filterableInStorefront;

  bool _filterableInDashboard;
  bool get filterableInDashboard => _$this._filterableInDashboard;
  set filterableInDashboard(bool filterableInDashboard) =>
      _$this._filterableInDashboard = filterableInDashboard;

  bool _availableInGrid;
  bool get availableInGrid => _$this._availableInGrid;
  set availableInGrid(bool availableInGrid) =>
      _$this._availableInGrid = availableInGrid;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  ListBuilder<String> _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String> ids) => _$this._ids = ids;

  String _inCollection;
  String get inCollection => _$this._inCollection;
  set inCollection(String inCollection) => _$this._inCollection = inCollection;

  String _inCategory;
  String get inCategory => _$this._inCategory;
  set inCategory(String inCategory) => _$this._inCategory = inCategory;

  GAttributeFilterInputBuilder();

  GAttributeFilterInputBuilder get _$this {
    if (_$v != null) {
      _valueRequired = _$v.valueRequired;
      _isVariantOnly = _$v.isVariantOnly;
      _visibleInStorefront = _$v.visibleInStorefront;
      _filterableInStorefront = _$v.filterableInStorefront;
      _filterableInDashboard = _$v.filterableInDashboard;
      _availableInGrid = _$v.availableInGrid;
      _search = _$v.search;
      _ids = _$v.ids?.toBuilder();
      _inCollection = _$v.inCollection;
      _inCategory = _$v.inCategory;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeFilterInput;
  }

  @override
  void update(void Function(GAttributeFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeFilterInput build() {
    _$GAttributeFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeFilterInput._(
              valueRequired: valueRequired,
              isVariantOnly: isVariantOnly,
              visibleInStorefront: visibleInStorefront,
              filterableInStorefront: filterableInStorefront,
              filterableInDashboard: filterableInDashboard,
              availableInGrid: availableInGrid,
              search: search,
              ids: _ids?.build(),
              inCollection: inCollection,
              inCategory: inCategory);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GAttributeFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeInput extends GAttributeInput {
  @override
  final String slug;
  @override
  final String value;
  @override
  final BuiltList<String> values;

  factory _$GAttributeInput([void Function(GAttributeInputBuilder) updates]) =>
      (new GAttributeInputBuilder()..update(updates)).build();

  _$GAttributeInput._({this.slug, this.value, this.values}) : super._() {
    if (slug == null) {
      throw new BuiltValueNullFieldError('GAttributeInput', 'slug');
    }
  }

  @override
  GAttributeInput rebuild(void Function(GAttributeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeInputBuilder toBuilder() =>
      new GAttributeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeInput &&
        slug == other.slug &&
        value == other.value &&
        values == other.values;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, slug.hashCode), value.hashCode), values.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeInput')
          ..add('slug', slug)
          ..add('value', value)
          ..add('values', values))
        .toString();
  }
}

class GAttributeInputBuilder
    implements Builder<GAttributeInput, GAttributeInputBuilder> {
  _$GAttributeInput _$v;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  ListBuilder<String> _values;
  ListBuilder<String> get values =>
      _$this._values ??= new ListBuilder<String>();
  set values(ListBuilder<String> values) => _$this._values = values;

  GAttributeInputBuilder();

  GAttributeInputBuilder get _$this {
    if (_$v != null) {
      _slug = _$v.slug;
      _value = _$v.value;
      _values = _$v.values?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeInput;
  }

  @override
  void update(void Function(GAttributeInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeInput build() {
    _$GAttributeInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeInput._(
              slug: slug, value: value, values: _values?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'values';
        _values?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GAttributeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeSortingInput extends GAttributeSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GAttributeSortField field;

  factory _$GAttributeSortingInput(
          [void Function(GAttributeSortingInputBuilder) updates]) =>
      (new GAttributeSortingInputBuilder()..update(updates)).build();

  _$GAttributeSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GAttributeSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GAttributeSortingInput', 'field');
    }
  }

  @override
  GAttributeSortingInput rebuild(
          void Function(GAttributeSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeSortingInputBuilder toBuilder() =>
      new GAttributeSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GAttributeSortingInputBuilder
    implements Builder<GAttributeSortingInput, GAttributeSortingInputBuilder> {
  _$GAttributeSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GAttributeSortField _field;
  GAttributeSortField get field => _$this._field;
  set field(GAttributeSortField field) => _$this._field = field;

  GAttributeSortingInputBuilder();

  GAttributeSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeSortingInput;
  }

  @override
  void update(void Function(GAttributeSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeSortingInput build() {
    final _$result = _$v ??
        new _$GAttributeSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeUpdateInput extends GAttributeUpdateInput {
  @override
  final String name;
  @override
  final String slug;
  @override
  final BuiltList<String> removeValues;
  @override
  final BuiltList<GAttributeValueCreateInput> addValues;
  @override
  final bool valueRequired;
  @override
  final bool isVariantOnly;
  @override
  final bool visibleInStorefront;
  @override
  final bool filterableInStorefront;
  @override
  final bool filterableInDashboard;
  @override
  final int storefrontSearchPosition;
  @override
  final bool availableInGrid;

  factory _$GAttributeUpdateInput(
          [void Function(GAttributeUpdateInputBuilder) updates]) =>
      (new GAttributeUpdateInputBuilder()..update(updates)).build();

  _$GAttributeUpdateInput._(
      {this.name,
      this.slug,
      this.removeValues,
      this.addValues,
      this.valueRequired,
      this.isVariantOnly,
      this.visibleInStorefront,
      this.filterableInStorefront,
      this.filterableInDashboard,
      this.storefrontSearchPosition,
      this.availableInGrid})
      : super._();

  @override
  GAttributeUpdateInput rebuild(
          void Function(GAttributeUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeUpdateInputBuilder toBuilder() =>
      new GAttributeUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeUpdateInput &&
        name == other.name &&
        slug == other.slug &&
        removeValues == other.removeValues &&
        addValues == other.addValues &&
        valueRequired == other.valueRequired &&
        isVariantOnly == other.isVariantOnly &&
        visibleInStorefront == other.visibleInStorefront &&
        filterableInStorefront == other.filterableInStorefront &&
        filterableInDashboard == other.filterableInDashboard &&
        storefrontSearchPosition == other.storefrontSearchPosition &&
        availableInGrid == other.availableInGrid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, name.hashCode),
                                            slug.hashCode),
                                        removeValues.hashCode),
                                    addValues.hashCode),
                                valueRequired.hashCode),
                            isVariantOnly.hashCode),
                        visibleInStorefront.hashCode),
                    filterableInStorefront.hashCode),
                filterableInDashboard.hashCode),
            storefrontSearchPosition.hashCode),
        availableInGrid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeUpdateInput')
          ..add('name', name)
          ..add('slug', slug)
          ..add('removeValues', removeValues)
          ..add('addValues', addValues)
          ..add('valueRequired', valueRequired)
          ..add('isVariantOnly', isVariantOnly)
          ..add('visibleInStorefront', visibleInStorefront)
          ..add('filterableInStorefront', filterableInStorefront)
          ..add('filterableInDashboard', filterableInDashboard)
          ..add('storefrontSearchPosition', storefrontSearchPosition)
          ..add('availableInGrid', availableInGrid))
        .toString();
  }
}

class GAttributeUpdateInputBuilder
    implements Builder<GAttributeUpdateInput, GAttributeUpdateInputBuilder> {
  _$GAttributeUpdateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  ListBuilder<String> _removeValues;
  ListBuilder<String> get removeValues =>
      _$this._removeValues ??= new ListBuilder<String>();
  set removeValues(ListBuilder<String> removeValues) =>
      _$this._removeValues = removeValues;

  ListBuilder<GAttributeValueCreateInput> _addValues;
  ListBuilder<GAttributeValueCreateInput> get addValues =>
      _$this._addValues ??= new ListBuilder<GAttributeValueCreateInput>();
  set addValues(ListBuilder<GAttributeValueCreateInput> addValues) =>
      _$this._addValues = addValues;

  bool _valueRequired;
  bool get valueRequired => _$this._valueRequired;
  set valueRequired(bool valueRequired) =>
      _$this._valueRequired = valueRequired;

  bool _isVariantOnly;
  bool get isVariantOnly => _$this._isVariantOnly;
  set isVariantOnly(bool isVariantOnly) =>
      _$this._isVariantOnly = isVariantOnly;

  bool _visibleInStorefront;
  bool get visibleInStorefront => _$this._visibleInStorefront;
  set visibleInStorefront(bool visibleInStorefront) =>
      _$this._visibleInStorefront = visibleInStorefront;

  bool _filterableInStorefront;
  bool get filterableInStorefront => _$this._filterableInStorefront;
  set filterableInStorefront(bool filterableInStorefront) =>
      _$this._filterableInStorefront = filterableInStorefront;

  bool _filterableInDashboard;
  bool get filterableInDashboard => _$this._filterableInDashboard;
  set filterableInDashboard(bool filterableInDashboard) =>
      _$this._filterableInDashboard = filterableInDashboard;

  int _storefrontSearchPosition;
  int get storefrontSearchPosition => _$this._storefrontSearchPosition;
  set storefrontSearchPosition(int storefrontSearchPosition) =>
      _$this._storefrontSearchPosition = storefrontSearchPosition;

  bool _availableInGrid;
  bool get availableInGrid => _$this._availableInGrid;
  set availableInGrid(bool availableInGrid) =>
      _$this._availableInGrid = availableInGrid;

  GAttributeUpdateInputBuilder();

  GAttributeUpdateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _slug = _$v.slug;
      _removeValues = _$v.removeValues?.toBuilder();
      _addValues = _$v.addValues?.toBuilder();
      _valueRequired = _$v.valueRequired;
      _isVariantOnly = _$v.isVariantOnly;
      _visibleInStorefront = _$v.visibleInStorefront;
      _filterableInStorefront = _$v.filterableInStorefront;
      _filterableInDashboard = _$v.filterableInDashboard;
      _storefrontSearchPosition = _$v.storefrontSearchPosition;
      _availableInGrid = _$v.availableInGrid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeUpdateInput;
  }

  @override
  void update(void Function(GAttributeUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeUpdateInput build() {
    _$GAttributeUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeUpdateInput._(
              name: name,
              slug: slug,
              removeValues: _removeValues?.build(),
              addValues: _addValues?.build(),
              valueRequired: valueRequired,
              isVariantOnly: isVariantOnly,
              visibleInStorefront: visibleInStorefront,
              filterableInStorefront: filterableInStorefront,
              filterableInDashboard: filterableInDashboard,
              storefrontSearchPosition: storefrontSearchPosition,
              availableInGrid: availableInGrid);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'removeValues';
        _removeValues?.build();
        _$failedField = 'addValues';
        _addValues?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GAttributeUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeValueCreateInput extends GAttributeValueCreateInput {
  @override
  final String name;

  factory _$GAttributeValueCreateInput(
          [void Function(GAttributeValueCreateInputBuilder) updates]) =>
      (new GAttributeValueCreateInputBuilder()..update(updates)).build();

  _$GAttributeValueCreateInput._({this.name}) : super._() {
    if (name == null) {
      throw new BuiltValueNullFieldError('GAttributeValueCreateInput', 'name');
    }
  }

  @override
  GAttributeValueCreateInput rebuild(
          void Function(GAttributeValueCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeValueCreateInputBuilder toBuilder() =>
      new GAttributeValueCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeValueCreateInput && name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(0, name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeValueCreateInput')
          ..add('name', name))
        .toString();
  }
}

class GAttributeValueCreateInputBuilder
    implements
        Builder<GAttributeValueCreateInput, GAttributeValueCreateInputBuilder> {
  _$GAttributeValueCreateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GAttributeValueCreateInputBuilder();

  GAttributeValueCreateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeValueCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeValueCreateInput;
  }

  @override
  void update(void Function(GAttributeValueCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeValueCreateInput build() {
    final _$result = _$v ?? new _$GAttributeValueCreateInput._(name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeValueInput extends GAttributeValueInput {
  @override
  final String id;
  @override
  final BuiltList<String> values;

  factory _$GAttributeValueInput(
          [void Function(GAttributeValueInputBuilder) updates]) =>
      (new GAttributeValueInputBuilder()..update(updates)).build();

  _$GAttributeValueInput._({this.id, this.values}) : super._();

  @override
  GAttributeValueInput rebuild(
          void Function(GAttributeValueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeValueInputBuilder toBuilder() =>
      new GAttributeValueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeValueInput &&
        id == other.id &&
        values == other.values;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), values.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAttributeValueInput')
          ..add('id', id)
          ..add('values', values))
        .toString();
  }
}

class GAttributeValueInputBuilder
    implements Builder<GAttributeValueInput, GAttributeValueInputBuilder> {
  _$GAttributeValueInput _$v;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  ListBuilder<String> _values;
  ListBuilder<String> get values =>
      _$this._values ??= new ListBuilder<String>();
  set values(ListBuilder<String> values) => _$this._values = values;

  GAttributeValueInputBuilder();

  GAttributeValueInputBuilder get _$this {
    if (_$v != null) {
      _id = _$v.id;
      _values = _$v.values?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeValueInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAttributeValueInput;
  }

  @override
  void update(void Function(GAttributeValueInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAttributeValueInput build() {
    _$GAttributeValueInput _$result;
    try {
      _$result =
          _$v ?? new _$GAttributeValueInput._(id: id, values: _values?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'values';
        _values?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GAttributeValueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAuthorizationKeyInput extends GAuthorizationKeyInput {
  @override
  final String key;
  @override
  final String password;

  factory _$GAuthorizationKeyInput(
          [void Function(GAuthorizationKeyInputBuilder) updates]) =>
      (new GAuthorizationKeyInputBuilder()..update(updates)).build();

  _$GAuthorizationKeyInput._({this.key, this.password}) : super._() {
    if (key == null) {
      throw new BuiltValueNullFieldError('GAuthorizationKeyInput', 'key');
    }
    if (password == null) {
      throw new BuiltValueNullFieldError('GAuthorizationKeyInput', 'password');
    }
  }

  @override
  GAuthorizationKeyInput rebuild(
          void Function(GAuthorizationKeyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAuthorizationKeyInputBuilder toBuilder() =>
      new GAuthorizationKeyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuthorizationKeyInput &&
        key == other.key &&
        password == other.password;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, key.hashCode), password.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GAuthorizationKeyInput')
          ..add('key', key)
          ..add('password', password))
        .toString();
  }
}

class GAuthorizationKeyInputBuilder
    implements Builder<GAuthorizationKeyInput, GAuthorizationKeyInputBuilder> {
  _$GAuthorizationKeyInput _$v;

  String _key;
  String get key => _$this._key;
  set key(String key) => _$this._key = key;

  String _password;
  String get password => _$this._password;
  set password(String password) => _$this._password = password;

  GAuthorizationKeyInputBuilder();

  GAuthorizationKeyInputBuilder get _$this {
    if (_$v != null) {
      _key = _$v.key;
      _password = _$v.password;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuthorizationKeyInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GAuthorizationKeyInput;
  }

  @override
  void update(void Function(GAuthorizationKeyInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GAuthorizationKeyInput build() {
    final _$result =
        _$v ?? new _$GAuthorizationKeyInput._(key: key, password: password);
    replace(_$result);
    return _$result;
  }
}

class _$GCatalogueInput extends GCatalogueInput {
  @override
  final BuiltList<String> products;
  @override
  final BuiltList<String> categories;
  @override
  final BuiltList<String> collections;

  factory _$GCatalogueInput([void Function(GCatalogueInputBuilder) updates]) =>
      (new GCatalogueInputBuilder()..update(updates)).build();

  _$GCatalogueInput._({this.products, this.categories, this.collections})
      : super._();

  @override
  GCatalogueInput rebuild(void Function(GCatalogueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCatalogueInputBuilder toBuilder() =>
      new GCatalogueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCatalogueInput &&
        products == other.products &&
        categories == other.categories &&
        collections == other.collections;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, products.hashCode), categories.hashCode),
        collections.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCatalogueInput')
          ..add('products', products)
          ..add('categories', categories)
          ..add('collections', collections))
        .toString();
  }
}

class GCatalogueInputBuilder
    implements Builder<GCatalogueInput, GCatalogueInputBuilder> {
  _$GCatalogueInput _$v;

  ListBuilder<String> _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String> products) => _$this._products = products;

  ListBuilder<String> _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String> categories) =>
      _$this._categories = categories;

  ListBuilder<String> _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String> collections) =>
      _$this._collections = collections;

  GCatalogueInputBuilder();

  GCatalogueInputBuilder get _$this {
    if (_$v != null) {
      _products = _$v.products?.toBuilder();
      _categories = _$v.categories?.toBuilder();
      _collections = _$v.collections?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCatalogueInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCatalogueInput;
  }

  @override
  void update(void Function(GCatalogueInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCatalogueInput build() {
    _$GCatalogueInput _$result;
    try {
      _$result = _$v ??
          new _$GCatalogueInput._(
              products: _products?.build(),
              categories: _categories?.build(),
              collections: _collections?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'products';
        _products?.build();
        _$failedField = 'categories';
        _categories?.build();
        _$failedField = 'collections';
        _collections?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCatalogueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCategoryFilterInput extends GCategoryFilterInput {
  @override
  final String search;
  @override
  final BuiltList<String> ids;

  factory _$GCategoryFilterInput(
          [void Function(GCategoryFilterInputBuilder) updates]) =>
      (new GCategoryFilterInputBuilder()..update(updates)).build();

  _$GCategoryFilterInput._({this.search, this.ids}) : super._();

  @override
  GCategoryFilterInput rebuild(
          void Function(GCategoryFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategoryFilterInputBuilder toBuilder() =>
      new GCategoryFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategoryFilterInput &&
        search == other.search &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCategoryFilterInput')
          ..add('search', search)
          ..add('ids', ids))
        .toString();
  }
}

class GCategoryFilterInputBuilder
    implements Builder<GCategoryFilterInput, GCategoryFilterInputBuilder> {
  _$GCategoryFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  ListBuilder<String> _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String> ids) => _$this._ids = ids;

  GCategoryFilterInputBuilder();

  GCategoryFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _ids = _$v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategoryFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCategoryFilterInput;
  }

  @override
  void update(void Function(GCategoryFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCategoryFilterInput build() {
    _$GCategoryFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GCategoryFilterInput._(search: search, ids: _ids?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCategoryFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCategoryInput extends GCategoryInput {
  @override
  final String description;
  @override
  final GJSONString descriptionJson;
  @override
  final String name;
  @override
  final String slug;
  @override
  final GSeoInput seo;
  @override
  final GUpload backgroundImage;
  @override
  final String backgroundImageAlt;

  factory _$GCategoryInput([void Function(GCategoryInputBuilder) updates]) =>
      (new GCategoryInputBuilder()..update(updates)).build();

  _$GCategoryInput._(
      {this.description,
      this.descriptionJson,
      this.name,
      this.slug,
      this.seo,
      this.backgroundImage,
      this.backgroundImageAlt})
      : super._();

  @override
  GCategoryInput rebuild(void Function(GCategoryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategoryInputBuilder toBuilder() =>
      new GCategoryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategoryInput &&
        description == other.description &&
        descriptionJson == other.descriptionJson &&
        name == other.name &&
        slug == other.slug &&
        seo == other.seo &&
        backgroundImage == other.backgroundImage &&
        backgroundImageAlt == other.backgroundImageAlt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, description.hashCode),
                            descriptionJson.hashCode),
                        name.hashCode),
                    slug.hashCode),
                seo.hashCode),
            backgroundImage.hashCode),
        backgroundImageAlt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCategoryInput')
          ..add('description', description)
          ..add('descriptionJson', descriptionJson)
          ..add('name', name)
          ..add('slug', slug)
          ..add('seo', seo)
          ..add('backgroundImage', backgroundImage)
          ..add('backgroundImageAlt', backgroundImageAlt))
        .toString();
  }
}

class GCategoryInputBuilder
    implements Builder<GCategoryInput, GCategoryInputBuilder> {
  _$GCategoryInput _$v;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GJSONStringBuilder _descriptionJson;
  GJSONStringBuilder get descriptionJson =>
      _$this._descriptionJson ??= new GJSONStringBuilder();
  set descriptionJson(GJSONStringBuilder descriptionJson) =>
      _$this._descriptionJson = descriptionJson;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  GSeoInputBuilder _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder seo) => _$this._seo = seo;

  GUploadBuilder _backgroundImage;
  GUploadBuilder get backgroundImage =>
      _$this._backgroundImage ??= new GUploadBuilder();
  set backgroundImage(GUploadBuilder backgroundImage) =>
      _$this._backgroundImage = backgroundImage;

  String _backgroundImageAlt;
  String get backgroundImageAlt => _$this._backgroundImageAlt;
  set backgroundImageAlt(String backgroundImageAlt) =>
      _$this._backgroundImageAlt = backgroundImageAlt;

  GCategoryInputBuilder();

  GCategoryInputBuilder get _$this {
    if (_$v != null) {
      _description = _$v.description;
      _descriptionJson = _$v.descriptionJson?.toBuilder();
      _name = _$v.name;
      _slug = _$v.slug;
      _seo = _$v.seo?.toBuilder();
      _backgroundImage = _$v.backgroundImage?.toBuilder();
      _backgroundImageAlt = _$v.backgroundImageAlt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategoryInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCategoryInput;
  }

  @override
  void update(void Function(GCategoryInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCategoryInput build() {
    _$GCategoryInput _$result;
    try {
      _$result = _$v ??
          new _$GCategoryInput._(
              description: description,
              descriptionJson: _descriptionJson?.build(),
              name: name,
              slug: slug,
              seo: _seo?.build(),
              backgroundImage: _backgroundImage?.build(),
              backgroundImageAlt: backgroundImageAlt);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'descriptionJson';
        _descriptionJson?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'backgroundImage';
        _backgroundImage?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCategoryInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCategorySortingInput extends GCategorySortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GCategorySortField field;

  factory _$GCategorySortingInput(
          [void Function(GCategorySortingInputBuilder) updates]) =>
      (new GCategorySortingInputBuilder()..update(updates)).build();

  _$GCategorySortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GCategorySortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GCategorySortingInput', 'field');
    }
  }

  @override
  GCategorySortingInput rebuild(
          void Function(GCategorySortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategorySortingInputBuilder toBuilder() =>
      new GCategorySortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategorySortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCategorySortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GCategorySortingInputBuilder
    implements Builder<GCategorySortingInput, GCategorySortingInputBuilder> {
  _$GCategorySortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GCategorySortField _field;
  GCategorySortField get field => _$this._field;
  set field(GCategorySortField field) => _$this._field = field;

  GCategorySortingInputBuilder();

  GCategorySortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategorySortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCategorySortingInput;
  }

  @override
  void update(void Function(GCategorySortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCategorySortingInput build() {
    final _$result = _$v ??
        new _$GCategorySortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutCreateInput extends GCheckoutCreateInput {
  @override
  final BuiltList<GCheckoutLineInput> lines;
  @override
  final String email;
  @override
  final GAddressInput shippingAddress;
  @override
  final GAddressInput billingAddress;

  factory _$GCheckoutCreateInput(
          [void Function(GCheckoutCreateInputBuilder) updates]) =>
      (new GCheckoutCreateInputBuilder()..update(updates)).build();

  _$GCheckoutCreateInput._(
      {this.lines, this.email, this.shippingAddress, this.billingAddress})
      : super._();

  @override
  GCheckoutCreateInput rebuild(
          void Function(GCheckoutCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutCreateInputBuilder toBuilder() =>
      new GCheckoutCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutCreateInput &&
        lines == other.lines &&
        email == other.email &&
        shippingAddress == other.shippingAddress &&
        billingAddress == other.billingAddress;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, lines.hashCode), email.hashCode),
            shippingAddress.hashCode),
        billingAddress.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCheckoutCreateInput')
          ..add('lines', lines)
          ..add('email', email)
          ..add('shippingAddress', shippingAddress)
          ..add('billingAddress', billingAddress))
        .toString();
  }
}

class GCheckoutCreateInputBuilder
    implements Builder<GCheckoutCreateInput, GCheckoutCreateInputBuilder> {
  _$GCheckoutCreateInput _$v;

  ListBuilder<GCheckoutLineInput> _lines;
  ListBuilder<GCheckoutLineInput> get lines =>
      _$this._lines ??= new ListBuilder<GCheckoutLineInput>();
  set lines(ListBuilder<GCheckoutLineInput> lines) => _$this._lines = lines;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  GAddressInputBuilder _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  GAddressInputBuilder _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder billingAddress) =>
      _$this._billingAddress = billingAddress;

  GCheckoutCreateInputBuilder();

  GCheckoutCreateInputBuilder get _$this {
    if (_$v != null) {
      _lines = _$v.lines?.toBuilder();
      _email = _$v.email;
      _shippingAddress = _$v.shippingAddress?.toBuilder();
      _billingAddress = _$v.billingAddress?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCheckoutCreateInput;
  }

  @override
  void update(void Function(GCheckoutCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCheckoutCreateInput build() {
    _$GCheckoutCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCheckoutCreateInput._(
              lines: _lines?.build(),
              email: email,
              shippingAddress: _shippingAddress?.build(),
              billingAddress: _billingAddress?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'lines';
        _lines?.build();

        _$failedField = 'shippingAddress';
        _shippingAddress?.build();
        _$failedField = 'billingAddress';
        _billingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCheckoutCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutLineInput extends GCheckoutLineInput {
  @override
  final int quantity;
  @override
  final String variantId;

  factory _$GCheckoutLineInput(
          [void Function(GCheckoutLineInputBuilder) updates]) =>
      (new GCheckoutLineInputBuilder()..update(updates)).build();

  _$GCheckoutLineInput._({this.quantity, this.variantId}) : super._() {
    if (quantity == null) {
      throw new BuiltValueNullFieldError('GCheckoutLineInput', 'quantity');
    }
    if (variantId == null) {
      throw new BuiltValueNullFieldError('GCheckoutLineInput', 'variantId');
    }
  }

  @override
  GCheckoutLineInput rebuild(
          void Function(GCheckoutLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutLineInputBuilder toBuilder() =>
      new GCheckoutLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutLineInput &&
        quantity == other.quantity &&
        variantId == other.variantId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, quantity.hashCode), variantId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCheckoutLineInput')
          ..add('quantity', quantity)
          ..add('variantId', variantId))
        .toString();
  }
}

class GCheckoutLineInputBuilder
    implements Builder<GCheckoutLineInput, GCheckoutLineInputBuilder> {
  _$GCheckoutLineInput _$v;

  int _quantity;
  int get quantity => _$this._quantity;
  set quantity(int quantity) => _$this._quantity = quantity;

  String _variantId;
  String get variantId => _$this._variantId;
  set variantId(String variantId) => _$this._variantId = variantId;

  GCheckoutLineInputBuilder();

  GCheckoutLineInputBuilder get _$this {
    if (_$v != null) {
      _quantity = _$v.quantity;
      _variantId = _$v.variantId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutLineInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCheckoutLineInput;
  }

  @override
  void update(void Function(GCheckoutLineInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCheckoutLineInput build() {
    final _$result = _$v ??
        new _$GCheckoutLineInput._(quantity: quantity, variantId: variantId);
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionCreateInput extends GCollectionCreateInput {
  @override
  final bool isPublished;
  @override
  final String name;
  @override
  final String slug;
  @override
  final String description;
  @override
  final GJSONString descriptionJson;
  @override
  final GUpload backgroundImage;
  @override
  final String backgroundImageAlt;
  @override
  final GSeoInput seo;
  @override
  final GDate publicationDate;
  @override
  final BuiltList<String> products;

  factory _$GCollectionCreateInput(
          [void Function(GCollectionCreateInputBuilder) updates]) =>
      (new GCollectionCreateInputBuilder()..update(updates)).build();

  _$GCollectionCreateInput._(
      {this.isPublished,
      this.name,
      this.slug,
      this.description,
      this.descriptionJson,
      this.backgroundImage,
      this.backgroundImageAlt,
      this.seo,
      this.publicationDate,
      this.products})
      : super._();

  @override
  GCollectionCreateInput rebuild(
          void Function(GCollectionCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionCreateInputBuilder toBuilder() =>
      new GCollectionCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionCreateInput &&
        isPublished == other.isPublished &&
        name == other.name &&
        slug == other.slug &&
        description == other.description &&
        descriptionJson == other.descriptionJson &&
        backgroundImage == other.backgroundImage &&
        backgroundImageAlt == other.backgroundImageAlt &&
        seo == other.seo &&
        publicationDate == other.publicationDate &&
        products == other.products;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, isPublished.hashCode),
                                        name.hashCode),
                                    slug.hashCode),
                                description.hashCode),
                            descriptionJson.hashCode),
                        backgroundImage.hashCode),
                    backgroundImageAlt.hashCode),
                seo.hashCode),
            publicationDate.hashCode),
        products.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCollectionCreateInput')
          ..add('isPublished', isPublished)
          ..add('name', name)
          ..add('slug', slug)
          ..add('description', description)
          ..add('descriptionJson', descriptionJson)
          ..add('backgroundImage', backgroundImage)
          ..add('backgroundImageAlt', backgroundImageAlt)
          ..add('seo', seo)
          ..add('publicationDate', publicationDate)
          ..add('products', products))
        .toString();
  }
}

class GCollectionCreateInputBuilder
    implements Builder<GCollectionCreateInput, GCollectionCreateInputBuilder> {
  _$GCollectionCreateInput _$v;

  bool _isPublished;
  bool get isPublished => _$this._isPublished;
  set isPublished(bool isPublished) => _$this._isPublished = isPublished;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GJSONStringBuilder _descriptionJson;
  GJSONStringBuilder get descriptionJson =>
      _$this._descriptionJson ??= new GJSONStringBuilder();
  set descriptionJson(GJSONStringBuilder descriptionJson) =>
      _$this._descriptionJson = descriptionJson;

  GUploadBuilder _backgroundImage;
  GUploadBuilder get backgroundImage =>
      _$this._backgroundImage ??= new GUploadBuilder();
  set backgroundImage(GUploadBuilder backgroundImage) =>
      _$this._backgroundImage = backgroundImage;

  String _backgroundImageAlt;
  String get backgroundImageAlt => _$this._backgroundImageAlt;
  set backgroundImageAlt(String backgroundImageAlt) =>
      _$this._backgroundImageAlt = backgroundImageAlt;

  GSeoInputBuilder _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder seo) => _$this._seo = seo;

  GDateBuilder _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder publicationDate) =>
      _$this._publicationDate = publicationDate;

  ListBuilder<String> _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String> products) => _$this._products = products;

  GCollectionCreateInputBuilder();

  GCollectionCreateInputBuilder get _$this {
    if (_$v != null) {
      _isPublished = _$v.isPublished;
      _name = _$v.name;
      _slug = _$v.slug;
      _description = _$v.description;
      _descriptionJson = _$v.descriptionJson?.toBuilder();
      _backgroundImage = _$v.backgroundImage?.toBuilder();
      _backgroundImageAlt = _$v.backgroundImageAlt;
      _seo = _$v.seo?.toBuilder();
      _publicationDate = _$v.publicationDate?.toBuilder();
      _products = _$v.products?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCollectionCreateInput;
  }

  @override
  void update(void Function(GCollectionCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCollectionCreateInput build() {
    _$GCollectionCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCollectionCreateInput._(
              isPublished: isPublished,
              name: name,
              slug: slug,
              description: description,
              descriptionJson: _descriptionJson?.build(),
              backgroundImage: _backgroundImage?.build(),
              backgroundImageAlt: backgroundImageAlt,
              seo: _seo?.build(),
              publicationDate: _publicationDate?.build(),
              products: _products?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'descriptionJson';
        _descriptionJson?.build();
        _$failedField = 'backgroundImage';
        _backgroundImage?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'publicationDate';
        _publicationDate?.build();
        _$failedField = 'products';
        _products?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCollectionCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionFilterInput extends GCollectionFilterInput {
  @override
  final GCollectionPublished published;
  @override
  final String search;
  @override
  final BuiltList<String> ids;

  factory _$GCollectionFilterInput(
          [void Function(GCollectionFilterInputBuilder) updates]) =>
      (new GCollectionFilterInputBuilder()..update(updates)).build();

  _$GCollectionFilterInput._({this.published, this.search, this.ids})
      : super._();

  @override
  GCollectionFilterInput rebuild(
          void Function(GCollectionFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionFilterInputBuilder toBuilder() =>
      new GCollectionFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionFilterInput &&
        published == other.published &&
        search == other.search &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, published.hashCode), search.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCollectionFilterInput')
          ..add('published', published)
          ..add('search', search)
          ..add('ids', ids))
        .toString();
  }
}

class GCollectionFilterInputBuilder
    implements Builder<GCollectionFilterInput, GCollectionFilterInputBuilder> {
  _$GCollectionFilterInput _$v;

  GCollectionPublished _published;
  GCollectionPublished get published => _$this._published;
  set published(GCollectionPublished published) =>
      _$this._published = published;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  ListBuilder<String> _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String> ids) => _$this._ids = ids;

  GCollectionFilterInputBuilder();

  GCollectionFilterInputBuilder get _$this {
    if (_$v != null) {
      _published = _$v.published;
      _search = _$v.search;
      _ids = _$v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCollectionFilterInput;
  }

  @override
  void update(void Function(GCollectionFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCollectionFilterInput build() {
    _$GCollectionFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GCollectionFilterInput._(
              published: published, search: search, ids: _ids?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCollectionFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionInput extends GCollectionInput {
  @override
  final bool isPublished;
  @override
  final String name;
  @override
  final String slug;
  @override
  final String description;
  @override
  final GJSONString descriptionJson;
  @override
  final GUpload backgroundImage;
  @override
  final String backgroundImageAlt;
  @override
  final GSeoInput seo;
  @override
  final GDate publicationDate;

  factory _$GCollectionInput(
          [void Function(GCollectionInputBuilder) updates]) =>
      (new GCollectionInputBuilder()..update(updates)).build();

  _$GCollectionInput._(
      {this.isPublished,
      this.name,
      this.slug,
      this.description,
      this.descriptionJson,
      this.backgroundImage,
      this.backgroundImageAlt,
      this.seo,
      this.publicationDate})
      : super._();

  @override
  GCollectionInput rebuild(void Function(GCollectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionInputBuilder toBuilder() =>
      new GCollectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionInput &&
        isPublished == other.isPublished &&
        name == other.name &&
        slug == other.slug &&
        description == other.description &&
        descriptionJson == other.descriptionJson &&
        backgroundImage == other.backgroundImage &&
        backgroundImageAlt == other.backgroundImageAlt &&
        seo == other.seo &&
        publicationDate == other.publicationDate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, isPublished.hashCode),
                                    name.hashCode),
                                slug.hashCode),
                            description.hashCode),
                        descriptionJson.hashCode),
                    backgroundImage.hashCode),
                backgroundImageAlt.hashCode),
            seo.hashCode),
        publicationDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCollectionInput')
          ..add('isPublished', isPublished)
          ..add('name', name)
          ..add('slug', slug)
          ..add('description', description)
          ..add('descriptionJson', descriptionJson)
          ..add('backgroundImage', backgroundImage)
          ..add('backgroundImageAlt', backgroundImageAlt)
          ..add('seo', seo)
          ..add('publicationDate', publicationDate))
        .toString();
  }
}

class GCollectionInputBuilder
    implements Builder<GCollectionInput, GCollectionInputBuilder> {
  _$GCollectionInput _$v;

  bool _isPublished;
  bool get isPublished => _$this._isPublished;
  set isPublished(bool isPublished) => _$this._isPublished = isPublished;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GJSONStringBuilder _descriptionJson;
  GJSONStringBuilder get descriptionJson =>
      _$this._descriptionJson ??= new GJSONStringBuilder();
  set descriptionJson(GJSONStringBuilder descriptionJson) =>
      _$this._descriptionJson = descriptionJson;

  GUploadBuilder _backgroundImage;
  GUploadBuilder get backgroundImage =>
      _$this._backgroundImage ??= new GUploadBuilder();
  set backgroundImage(GUploadBuilder backgroundImage) =>
      _$this._backgroundImage = backgroundImage;

  String _backgroundImageAlt;
  String get backgroundImageAlt => _$this._backgroundImageAlt;
  set backgroundImageAlt(String backgroundImageAlt) =>
      _$this._backgroundImageAlt = backgroundImageAlt;

  GSeoInputBuilder _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder seo) => _$this._seo = seo;

  GDateBuilder _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder publicationDate) =>
      _$this._publicationDate = publicationDate;

  GCollectionInputBuilder();

  GCollectionInputBuilder get _$this {
    if (_$v != null) {
      _isPublished = _$v.isPublished;
      _name = _$v.name;
      _slug = _$v.slug;
      _description = _$v.description;
      _descriptionJson = _$v.descriptionJson?.toBuilder();
      _backgroundImage = _$v.backgroundImage?.toBuilder();
      _backgroundImageAlt = _$v.backgroundImageAlt;
      _seo = _$v.seo?.toBuilder();
      _publicationDate = _$v.publicationDate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCollectionInput;
  }

  @override
  void update(void Function(GCollectionInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCollectionInput build() {
    _$GCollectionInput _$result;
    try {
      _$result = _$v ??
          new _$GCollectionInput._(
              isPublished: isPublished,
              name: name,
              slug: slug,
              description: description,
              descriptionJson: _descriptionJson?.build(),
              backgroundImage: _backgroundImage?.build(),
              backgroundImageAlt: backgroundImageAlt,
              seo: _seo?.build(),
              publicationDate: _publicationDate?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'descriptionJson';
        _descriptionJson?.build();
        _$failedField = 'backgroundImage';
        _backgroundImage?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'publicationDate';
        _publicationDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCollectionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionSortingInput extends GCollectionSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GCollectionSortField field;

  factory _$GCollectionSortingInput(
          [void Function(GCollectionSortingInputBuilder) updates]) =>
      (new GCollectionSortingInputBuilder()..update(updates)).build();

  _$GCollectionSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError(
          'GCollectionSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GCollectionSortingInput', 'field');
    }
  }

  @override
  GCollectionSortingInput rebuild(
          void Function(GCollectionSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionSortingInputBuilder toBuilder() =>
      new GCollectionSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCollectionSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GCollectionSortingInputBuilder
    implements
        Builder<GCollectionSortingInput, GCollectionSortingInputBuilder> {
  _$GCollectionSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GCollectionSortField _field;
  GCollectionSortField get field => _$this._field;
  set field(GCollectionSortField field) => _$this._field = field;

  GCollectionSortingInputBuilder();

  GCollectionSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCollectionSortingInput;
  }

  @override
  void update(void Function(GCollectionSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCollectionSortingInput build() {
    final _$result = _$v ??
        new _$GCollectionSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GConfigurationItemInput extends GConfigurationItemInput {
  @override
  final String name;
  @override
  final String value;

  factory _$GConfigurationItemInput(
          [void Function(GConfigurationItemInputBuilder) updates]) =>
      (new GConfigurationItemInputBuilder()..update(updates)).build();

  _$GConfigurationItemInput._({this.name, this.value}) : super._() {
    if (name == null) {
      throw new BuiltValueNullFieldError('GConfigurationItemInput', 'name');
    }
  }

  @override
  GConfigurationItemInput rebuild(
          void Function(GConfigurationItemInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigurationItemInputBuilder toBuilder() =>
      new GConfigurationItemInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigurationItemInput &&
        name == other.name &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GConfigurationItemInput')
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

class GConfigurationItemInputBuilder
    implements
        Builder<GConfigurationItemInput, GConfigurationItemInputBuilder> {
  _$GConfigurationItemInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GConfigurationItemInputBuilder();

  GConfigurationItemInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigurationItemInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GConfigurationItemInput;
  }

  @override
  void update(void Function(GConfigurationItemInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GConfigurationItemInput build() {
    final _$result =
        _$v ?? new _$GConfigurationItemInput._(name: name, value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerFilterInput extends GCustomerFilterInput {
  @override
  final GDateRangeInput dateJoined;
  @override
  final GPriceRangeInput moneySpent;
  @override
  final GIntRangeInput numberOfOrders;
  @override
  final GDateRangeInput placedOrders;
  @override
  final String search;

  factory _$GCustomerFilterInput(
          [void Function(GCustomerFilterInputBuilder) updates]) =>
      (new GCustomerFilterInputBuilder()..update(updates)).build();

  _$GCustomerFilterInput._(
      {this.dateJoined,
      this.moneySpent,
      this.numberOfOrders,
      this.placedOrders,
      this.search})
      : super._();

  @override
  GCustomerFilterInput rebuild(
          void Function(GCustomerFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerFilterInputBuilder toBuilder() =>
      new GCustomerFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerFilterInput &&
        dateJoined == other.dateJoined &&
        moneySpent == other.moneySpent &&
        numberOfOrders == other.numberOfOrders &&
        placedOrders == other.placedOrders &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, dateJoined.hashCode), moneySpent.hashCode),
                numberOfOrders.hashCode),
            placedOrders.hashCode),
        search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCustomerFilterInput')
          ..add('dateJoined', dateJoined)
          ..add('moneySpent', moneySpent)
          ..add('numberOfOrders', numberOfOrders)
          ..add('placedOrders', placedOrders)
          ..add('search', search))
        .toString();
  }
}

class GCustomerFilterInputBuilder
    implements Builder<GCustomerFilterInput, GCustomerFilterInputBuilder> {
  _$GCustomerFilterInput _$v;

  GDateRangeInputBuilder _dateJoined;
  GDateRangeInputBuilder get dateJoined =>
      _$this._dateJoined ??= new GDateRangeInputBuilder();
  set dateJoined(GDateRangeInputBuilder dateJoined) =>
      _$this._dateJoined = dateJoined;

  GPriceRangeInputBuilder _moneySpent;
  GPriceRangeInputBuilder get moneySpent =>
      _$this._moneySpent ??= new GPriceRangeInputBuilder();
  set moneySpent(GPriceRangeInputBuilder moneySpent) =>
      _$this._moneySpent = moneySpent;

  GIntRangeInputBuilder _numberOfOrders;
  GIntRangeInputBuilder get numberOfOrders =>
      _$this._numberOfOrders ??= new GIntRangeInputBuilder();
  set numberOfOrders(GIntRangeInputBuilder numberOfOrders) =>
      _$this._numberOfOrders = numberOfOrders;

  GDateRangeInputBuilder _placedOrders;
  GDateRangeInputBuilder get placedOrders =>
      _$this._placedOrders ??= new GDateRangeInputBuilder();
  set placedOrders(GDateRangeInputBuilder placedOrders) =>
      _$this._placedOrders = placedOrders;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GCustomerFilterInputBuilder();

  GCustomerFilterInputBuilder get _$this {
    if (_$v != null) {
      _dateJoined = _$v.dateJoined?.toBuilder();
      _moneySpent = _$v.moneySpent?.toBuilder();
      _numberOfOrders = _$v.numberOfOrders?.toBuilder();
      _placedOrders = _$v.placedOrders?.toBuilder();
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCustomerFilterInput;
  }

  @override
  void update(void Function(GCustomerFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCustomerFilterInput build() {
    _$GCustomerFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerFilterInput._(
              dateJoined: _dateJoined?.build(),
              moneySpent: _moneySpent?.build(),
              numberOfOrders: _numberOfOrders?.build(),
              placedOrders: _placedOrders?.build(),
              search: search);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'dateJoined';
        _dateJoined?.build();
        _$failedField = 'moneySpent';
        _moneySpent?.build();
        _$failedField = 'numberOfOrders';
        _numberOfOrders?.build();
        _$failedField = 'placedOrders';
        _placedOrders?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCustomerFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerInput extends GCustomerInput {
  @override
  final GAddressInput defaultBillingAddress;
  @override
  final GAddressInput defaultShippingAddress;
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final String email;
  @override
  final bool isActive;
  @override
  final String note;

  factory _$GCustomerInput([void Function(GCustomerInputBuilder) updates]) =>
      (new GCustomerInputBuilder()..update(updates)).build();

  _$GCustomerInput._(
      {this.defaultBillingAddress,
      this.defaultShippingAddress,
      this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note})
      : super._();

  @override
  GCustomerInput rebuild(void Function(GCustomerInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerInputBuilder toBuilder() =>
      new GCustomerInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerInput &&
        defaultBillingAddress == other.defaultBillingAddress &&
        defaultShippingAddress == other.defaultShippingAddress &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, defaultBillingAddress.hashCode),
                            defaultShippingAddress.hashCode),
                        firstName.hashCode),
                    lastName.hashCode),
                email.hashCode),
            isActive.hashCode),
        note.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GCustomerInput')
          ..add('defaultBillingAddress', defaultBillingAddress)
          ..add('defaultShippingAddress', defaultShippingAddress)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note))
        .toString();
  }
}

class GCustomerInputBuilder
    implements Builder<GCustomerInput, GCustomerInputBuilder> {
  _$GCustomerInput _$v;

  GAddressInputBuilder _defaultBillingAddress;
  GAddressInputBuilder get defaultBillingAddress =>
      _$this._defaultBillingAddress ??= new GAddressInputBuilder();
  set defaultBillingAddress(GAddressInputBuilder defaultBillingAddress) =>
      _$this._defaultBillingAddress = defaultBillingAddress;

  GAddressInputBuilder _defaultShippingAddress;
  GAddressInputBuilder get defaultShippingAddress =>
      _$this._defaultShippingAddress ??= new GAddressInputBuilder();
  set defaultShippingAddress(GAddressInputBuilder defaultShippingAddress) =>
      _$this._defaultShippingAddress = defaultShippingAddress;

  String _firstName;
  String get firstName => _$this._firstName;
  set firstName(String firstName) => _$this._firstName = firstName;

  String _lastName;
  String get lastName => _$this._lastName;
  set lastName(String lastName) => _$this._lastName = lastName;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  String _note;
  String get note => _$this._note;
  set note(String note) => _$this._note = note;

  GCustomerInputBuilder();

  GCustomerInputBuilder get _$this {
    if (_$v != null) {
      _defaultBillingAddress = _$v.defaultBillingAddress?.toBuilder();
      _defaultShippingAddress = _$v.defaultShippingAddress?.toBuilder();
      _firstName = _$v.firstName;
      _lastName = _$v.lastName;
      _email = _$v.email;
      _isActive = _$v.isActive;
      _note = _$v.note;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GCustomerInput;
  }

  @override
  void update(void Function(GCustomerInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GCustomerInput build() {
    _$GCustomerInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerInput._(
              defaultBillingAddress: _defaultBillingAddress?.build(),
              defaultShippingAddress: _defaultShippingAddress?.build(),
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'defaultBillingAddress';
        _defaultBillingAddress?.build();
        _$failedField = 'defaultShippingAddress';
        _defaultShippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GCustomerInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDate extends GDate {
  @override
  final String value;

  factory _$GDate([void Function(GDateBuilder) updates]) =>
      (new GDateBuilder()..update(updates)).build();

  _$GDate._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GDate', 'value');
    }
  }

  @override
  GDate rebuild(void Function(GDateBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateBuilder toBuilder() => new GDateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDate && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDate')..add('value', value))
        .toString();
  }
}

class GDateBuilder implements Builder<GDate, GDateBuilder> {
  _$GDate _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GDateBuilder();

  GDateBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDate other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDate;
  }

  @override
  void update(void Function(GDateBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDate build() {
    final _$result = _$v ?? new _$GDate._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GDateRangeInput extends GDateRangeInput {
  @override
  final GDate gte;
  @override
  final GDate lte;

  factory _$GDateRangeInput([void Function(GDateRangeInputBuilder) updates]) =>
      (new GDateRangeInputBuilder()..update(updates)).build();

  _$GDateRangeInput._({this.gte, this.lte}) : super._();

  @override
  GDateRangeInput rebuild(void Function(GDateRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateRangeInputBuilder toBuilder() =>
      new GDateRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDateRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GDateRangeInputBuilder
    implements Builder<GDateRangeInput, GDateRangeInputBuilder> {
  _$GDateRangeInput _$v;

  GDateBuilder _gte;
  GDateBuilder get gte => _$this._gte ??= new GDateBuilder();
  set gte(GDateBuilder gte) => _$this._gte = gte;

  GDateBuilder _lte;
  GDateBuilder get lte => _$this._lte ??= new GDateBuilder();
  set lte(GDateBuilder lte) => _$this._lte = lte;

  GDateRangeInputBuilder();

  GDateRangeInputBuilder get _$this {
    if (_$v != null) {
      _gte = _$v.gte?.toBuilder();
      _lte = _$v.lte?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateRangeInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDateRangeInput;
  }

  @override
  void update(void Function(GDateRangeInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDateRangeInput build() {
    _$GDateRangeInput _$result;
    try {
      _$result = _$v ??
          new _$GDateRangeInput._(gte: _gte?.build(), lte: _lte?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'gte';
        _gte?.build();
        _$failedField = 'lte';
        _lte?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GDateRangeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDateTime extends GDateTime {
  @override
  final String value;

  factory _$GDateTime([void Function(GDateTimeBuilder) updates]) =>
      (new GDateTimeBuilder()..update(updates)).build();

  _$GDateTime._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GDateTime', 'value');
    }
  }

  @override
  GDateTime rebuild(void Function(GDateTimeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateTimeBuilder toBuilder() => new GDateTimeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateTime && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDateTime')..add('value', value))
        .toString();
  }
}

class GDateTimeBuilder implements Builder<GDateTime, GDateTimeBuilder> {
  _$GDateTime _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GDateTimeBuilder();

  GDateTimeBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateTime other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDateTime;
  }

  @override
  void update(void Function(GDateTimeBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDateTime build() {
    final _$result = _$v ?? new _$GDateTime._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GDateTimeRangeInput extends GDateTimeRangeInput {
  @override
  final GDateTime gte;
  @override
  final GDateTime lte;

  factory _$GDateTimeRangeInput(
          [void Function(GDateTimeRangeInputBuilder) updates]) =>
      (new GDateTimeRangeInputBuilder()..update(updates)).build();

  _$GDateTimeRangeInput._({this.gte, this.lte}) : super._();

  @override
  GDateTimeRangeInput rebuild(
          void Function(GDateTimeRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateTimeRangeInputBuilder toBuilder() =>
      new GDateTimeRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateTimeRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDateTimeRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GDateTimeRangeInputBuilder
    implements Builder<GDateTimeRangeInput, GDateTimeRangeInputBuilder> {
  _$GDateTimeRangeInput _$v;

  GDateTimeBuilder _gte;
  GDateTimeBuilder get gte => _$this._gte ??= new GDateTimeBuilder();
  set gte(GDateTimeBuilder gte) => _$this._gte = gte;

  GDateTimeBuilder _lte;
  GDateTimeBuilder get lte => _$this._lte ??= new GDateTimeBuilder();
  set lte(GDateTimeBuilder lte) => _$this._lte = lte;

  GDateTimeRangeInputBuilder();

  GDateTimeRangeInputBuilder get _$this {
    if (_$v != null) {
      _gte = _$v.gte?.toBuilder();
      _lte = _$v.lte?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateTimeRangeInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDateTimeRangeInput;
  }

  @override
  void update(void Function(GDateTimeRangeInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDateTimeRangeInput build() {
    _$GDateTimeRangeInput _$result;
    try {
      _$result = _$v ??
          new _$GDateTimeRangeInput._(gte: _gte?.build(), lte: _lte?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'gte';
        _gte?.build();
        _$failedField = 'lte';
        _lte?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GDateTimeRangeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDecimal extends GDecimal {
  @override
  final String value;

  factory _$GDecimal([void Function(GDecimalBuilder) updates]) =>
      (new GDecimalBuilder()..update(updates)).build();

  _$GDecimal._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GDecimal', 'value');
    }
  }

  @override
  GDecimal rebuild(void Function(GDecimalBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDecimalBuilder toBuilder() => new GDecimalBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDecimal && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDecimal')..add('value', value))
        .toString();
  }
}

class GDecimalBuilder implements Builder<GDecimal, GDecimalBuilder> {
  _$GDecimal _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GDecimalBuilder();

  GDecimalBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDecimal other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDecimal;
  }

  @override
  void update(void Function(GDecimalBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDecimal build() {
    final _$result = _$v ?? new _$GDecimal._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GDigitalContentInput extends GDigitalContentInput {
  @override
  final bool useDefaultSettings;
  @override
  final int maxDownloads;
  @override
  final int urlValidDays;
  @override
  final bool automaticFulfillment;

  factory _$GDigitalContentInput(
          [void Function(GDigitalContentInputBuilder) updates]) =>
      (new GDigitalContentInputBuilder()..update(updates)).build();

  _$GDigitalContentInput._(
      {this.useDefaultSettings,
      this.maxDownloads,
      this.urlValidDays,
      this.automaticFulfillment})
      : super._() {
    if (useDefaultSettings == null) {
      throw new BuiltValueNullFieldError(
          'GDigitalContentInput', 'useDefaultSettings');
    }
  }

  @override
  GDigitalContentInput rebuild(
          void Function(GDigitalContentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDigitalContentInputBuilder toBuilder() =>
      new GDigitalContentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDigitalContentInput &&
        useDefaultSettings == other.useDefaultSettings &&
        maxDownloads == other.maxDownloads &&
        urlValidDays == other.urlValidDays &&
        automaticFulfillment == other.automaticFulfillment;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, useDefaultSettings.hashCode), maxDownloads.hashCode),
            urlValidDays.hashCode),
        automaticFulfillment.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDigitalContentInput')
          ..add('useDefaultSettings', useDefaultSettings)
          ..add('maxDownloads', maxDownloads)
          ..add('urlValidDays', urlValidDays)
          ..add('automaticFulfillment', automaticFulfillment))
        .toString();
  }
}

class GDigitalContentInputBuilder
    implements Builder<GDigitalContentInput, GDigitalContentInputBuilder> {
  _$GDigitalContentInput _$v;

  bool _useDefaultSettings;
  bool get useDefaultSettings => _$this._useDefaultSettings;
  set useDefaultSettings(bool useDefaultSettings) =>
      _$this._useDefaultSettings = useDefaultSettings;

  int _maxDownloads;
  int get maxDownloads => _$this._maxDownloads;
  set maxDownloads(int maxDownloads) => _$this._maxDownloads = maxDownloads;

  int _urlValidDays;
  int get urlValidDays => _$this._urlValidDays;
  set urlValidDays(int urlValidDays) => _$this._urlValidDays = urlValidDays;

  bool _automaticFulfillment;
  bool get automaticFulfillment => _$this._automaticFulfillment;
  set automaticFulfillment(bool automaticFulfillment) =>
      _$this._automaticFulfillment = automaticFulfillment;

  GDigitalContentInputBuilder();

  GDigitalContentInputBuilder get _$this {
    if (_$v != null) {
      _useDefaultSettings = _$v.useDefaultSettings;
      _maxDownloads = _$v.maxDownloads;
      _urlValidDays = _$v.urlValidDays;
      _automaticFulfillment = _$v.automaticFulfillment;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDigitalContentInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDigitalContentInput;
  }

  @override
  void update(void Function(GDigitalContentInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDigitalContentInput build() {
    final _$result = _$v ??
        new _$GDigitalContentInput._(
            useDefaultSettings: useDefaultSettings,
            maxDownloads: maxDownloads,
            urlValidDays: urlValidDays,
            automaticFulfillment: automaticFulfillment);
    replace(_$result);
    return _$result;
  }
}

class _$GDigitalContentUploadInput extends GDigitalContentUploadInput {
  @override
  final bool useDefaultSettings;
  @override
  final int maxDownloads;
  @override
  final int urlValidDays;
  @override
  final bool automaticFulfillment;
  @override
  final GUpload contentFile;

  factory _$GDigitalContentUploadInput(
          [void Function(GDigitalContentUploadInputBuilder) updates]) =>
      (new GDigitalContentUploadInputBuilder()..update(updates)).build();

  _$GDigitalContentUploadInput._(
      {this.useDefaultSettings,
      this.maxDownloads,
      this.urlValidDays,
      this.automaticFulfillment,
      this.contentFile})
      : super._() {
    if (useDefaultSettings == null) {
      throw new BuiltValueNullFieldError(
          'GDigitalContentUploadInput', 'useDefaultSettings');
    }
    if (contentFile == null) {
      throw new BuiltValueNullFieldError(
          'GDigitalContentUploadInput', 'contentFile');
    }
  }

  @override
  GDigitalContentUploadInput rebuild(
          void Function(GDigitalContentUploadInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDigitalContentUploadInputBuilder toBuilder() =>
      new GDigitalContentUploadInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDigitalContentUploadInput &&
        useDefaultSettings == other.useDefaultSettings &&
        maxDownloads == other.maxDownloads &&
        urlValidDays == other.urlValidDays &&
        automaticFulfillment == other.automaticFulfillment &&
        contentFile == other.contentFile;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, useDefaultSettings.hashCode), maxDownloads.hashCode),
                urlValidDays.hashCode),
            automaticFulfillment.hashCode),
        contentFile.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDigitalContentUploadInput')
          ..add('useDefaultSettings', useDefaultSettings)
          ..add('maxDownloads', maxDownloads)
          ..add('urlValidDays', urlValidDays)
          ..add('automaticFulfillment', automaticFulfillment)
          ..add('contentFile', contentFile))
        .toString();
  }
}

class GDigitalContentUploadInputBuilder
    implements
        Builder<GDigitalContentUploadInput, GDigitalContentUploadInputBuilder> {
  _$GDigitalContentUploadInput _$v;

  bool _useDefaultSettings;
  bool get useDefaultSettings => _$this._useDefaultSettings;
  set useDefaultSettings(bool useDefaultSettings) =>
      _$this._useDefaultSettings = useDefaultSettings;

  int _maxDownloads;
  int get maxDownloads => _$this._maxDownloads;
  set maxDownloads(int maxDownloads) => _$this._maxDownloads = maxDownloads;

  int _urlValidDays;
  int get urlValidDays => _$this._urlValidDays;
  set urlValidDays(int urlValidDays) => _$this._urlValidDays = urlValidDays;

  bool _automaticFulfillment;
  bool get automaticFulfillment => _$this._automaticFulfillment;
  set automaticFulfillment(bool automaticFulfillment) =>
      _$this._automaticFulfillment = automaticFulfillment;

  GUploadBuilder _contentFile;
  GUploadBuilder get contentFile =>
      _$this._contentFile ??= new GUploadBuilder();
  set contentFile(GUploadBuilder contentFile) =>
      _$this._contentFile = contentFile;

  GDigitalContentUploadInputBuilder();

  GDigitalContentUploadInputBuilder get _$this {
    if (_$v != null) {
      _useDefaultSettings = _$v.useDefaultSettings;
      _maxDownloads = _$v.maxDownloads;
      _urlValidDays = _$v.urlValidDays;
      _automaticFulfillment = _$v.automaticFulfillment;
      _contentFile = _$v.contentFile?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDigitalContentUploadInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDigitalContentUploadInput;
  }

  @override
  void update(void Function(GDigitalContentUploadInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDigitalContentUploadInput build() {
    _$GDigitalContentUploadInput _$result;
    try {
      _$result = _$v ??
          new _$GDigitalContentUploadInput._(
              useDefaultSettings: useDefaultSettings,
              maxDownloads: maxDownloads,
              urlValidDays: urlValidDays,
              automaticFulfillment: automaticFulfillment,
              contentFile: contentFile.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'contentFile';
        contentFile.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GDigitalContentUploadInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDigitalContentUrlCreateInput extends GDigitalContentUrlCreateInput {
  @override
  final String content;

  factory _$GDigitalContentUrlCreateInput(
          [void Function(GDigitalContentUrlCreateInputBuilder) updates]) =>
      (new GDigitalContentUrlCreateInputBuilder()..update(updates)).build();

  _$GDigitalContentUrlCreateInput._({this.content}) : super._() {
    if (content == null) {
      throw new BuiltValueNullFieldError(
          'GDigitalContentUrlCreateInput', 'content');
    }
  }

  @override
  GDigitalContentUrlCreateInput rebuild(
          void Function(GDigitalContentUrlCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDigitalContentUrlCreateInputBuilder toBuilder() =>
      new GDigitalContentUrlCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDigitalContentUrlCreateInput && content == other.content;
  }

  @override
  int get hashCode {
    return $jf($jc(0, content.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDigitalContentUrlCreateInput')
          ..add('content', content))
        .toString();
  }
}

class GDigitalContentUrlCreateInputBuilder
    implements
        Builder<GDigitalContentUrlCreateInput,
            GDigitalContentUrlCreateInputBuilder> {
  _$GDigitalContentUrlCreateInput _$v;

  String _content;
  String get content => _$this._content;
  set content(String content) => _$this._content = content;

  GDigitalContentUrlCreateInputBuilder();

  GDigitalContentUrlCreateInputBuilder get _$this {
    if (_$v != null) {
      _content = _$v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDigitalContentUrlCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDigitalContentUrlCreateInput;
  }

  @override
  void update(void Function(GDigitalContentUrlCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDigitalContentUrlCreateInput build() {
    final _$result =
        _$v ?? new _$GDigitalContentUrlCreateInput._(content: content);
    replace(_$result);
    return _$result;
  }
}

class _$GDraftOrderCreateInput extends GDraftOrderCreateInput {
  @override
  final GAddressInput billingAddress;
  @override
  final String user;
  @override
  final String userEmail;
  @override
  final GDecimal discount;
  @override
  final GAddressInput shippingAddress;
  @override
  final String shippingMethod;
  @override
  final String voucher;
  @override
  final String customerNote;
  @override
  final BuiltList<GOrderLineCreateInput> lines;

  factory _$GDraftOrderCreateInput(
          [void Function(GDraftOrderCreateInputBuilder) updates]) =>
      (new GDraftOrderCreateInputBuilder()..update(updates)).build();

  _$GDraftOrderCreateInput._(
      {this.billingAddress,
      this.user,
      this.userEmail,
      this.discount,
      this.shippingAddress,
      this.shippingMethod,
      this.voucher,
      this.customerNote,
      this.lines})
      : super._();

  @override
  GDraftOrderCreateInput rebuild(
          void Function(GDraftOrderCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDraftOrderCreateInputBuilder toBuilder() =>
      new GDraftOrderCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDraftOrderCreateInput &&
        billingAddress == other.billingAddress &&
        user == other.user &&
        userEmail == other.userEmail &&
        discount == other.discount &&
        shippingAddress == other.shippingAddress &&
        shippingMethod == other.shippingMethod &&
        voucher == other.voucher &&
        customerNote == other.customerNote &&
        lines == other.lines;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, billingAddress.hashCode),
                                    user.hashCode),
                                userEmail.hashCode),
                            discount.hashCode),
                        shippingAddress.hashCode),
                    shippingMethod.hashCode),
                voucher.hashCode),
            customerNote.hashCode),
        lines.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDraftOrderCreateInput')
          ..add('billingAddress', billingAddress)
          ..add('user', user)
          ..add('userEmail', userEmail)
          ..add('discount', discount)
          ..add('shippingAddress', shippingAddress)
          ..add('shippingMethod', shippingMethod)
          ..add('voucher', voucher)
          ..add('customerNote', customerNote)
          ..add('lines', lines))
        .toString();
  }
}

class GDraftOrderCreateInputBuilder
    implements Builder<GDraftOrderCreateInput, GDraftOrderCreateInputBuilder> {
  _$GDraftOrderCreateInput _$v;

  GAddressInputBuilder _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder billingAddress) =>
      _$this._billingAddress = billingAddress;

  String _user;
  String get user => _$this._user;
  set user(String user) => _$this._user = user;

  String _userEmail;
  String get userEmail => _$this._userEmail;
  set userEmail(String userEmail) => _$this._userEmail = userEmail;

  GDecimalBuilder _discount;
  GDecimalBuilder get discount => _$this._discount ??= new GDecimalBuilder();
  set discount(GDecimalBuilder discount) => _$this._discount = discount;

  GAddressInputBuilder _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  String _shippingMethod;
  String get shippingMethod => _$this._shippingMethod;
  set shippingMethod(String shippingMethod) =>
      _$this._shippingMethod = shippingMethod;

  String _voucher;
  String get voucher => _$this._voucher;
  set voucher(String voucher) => _$this._voucher = voucher;

  String _customerNote;
  String get customerNote => _$this._customerNote;
  set customerNote(String customerNote) => _$this._customerNote = customerNote;

  ListBuilder<GOrderLineCreateInput> _lines;
  ListBuilder<GOrderLineCreateInput> get lines =>
      _$this._lines ??= new ListBuilder<GOrderLineCreateInput>();
  set lines(ListBuilder<GOrderLineCreateInput> lines) => _$this._lines = lines;

  GDraftOrderCreateInputBuilder();

  GDraftOrderCreateInputBuilder get _$this {
    if (_$v != null) {
      _billingAddress = _$v.billingAddress?.toBuilder();
      _user = _$v.user;
      _userEmail = _$v.userEmail;
      _discount = _$v.discount?.toBuilder();
      _shippingAddress = _$v.shippingAddress?.toBuilder();
      _shippingMethod = _$v.shippingMethod;
      _voucher = _$v.voucher;
      _customerNote = _$v.customerNote;
      _lines = _$v.lines?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDraftOrderCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDraftOrderCreateInput;
  }

  @override
  void update(void Function(GDraftOrderCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDraftOrderCreateInput build() {
    _$GDraftOrderCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GDraftOrderCreateInput._(
              billingAddress: _billingAddress?.build(),
              user: user,
              userEmail: userEmail,
              discount: _discount?.build(),
              shippingAddress: _shippingAddress?.build(),
              shippingMethod: shippingMethod,
              voucher: voucher,
              customerNote: customerNote,
              lines: _lines?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'billingAddress';
        _billingAddress?.build();

        _$failedField = 'discount';
        _discount?.build();
        _$failedField = 'shippingAddress';
        _shippingAddress?.build();

        _$failedField = 'lines';
        _lines?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GDraftOrderCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDraftOrderInput extends GDraftOrderInput {
  @override
  final GAddressInput billingAddress;
  @override
  final String user;
  @override
  final String userEmail;
  @override
  final GDecimal discount;
  @override
  final GAddressInput shippingAddress;
  @override
  final String shippingMethod;
  @override
  final String voucher;
  @override
  final String customerNote;

  factory _$GDraftOrderInput(
          [void Function(GDraftOrderInputBuilder) updates]) =>
      (new GDraftOrderInputBuilder()..update(updates)).build();

  _$GDraftOrderInput._(
      {this.billingAddress,
      this.user,
      this.userEmail,
      this.discount,
      this.shippingAddress,
      this.shippingMethod,
      this.voucher,
      this.customerNote})
      : super._();

  @override
  GDraftOrderInput rebuild(void Function(GDraftOrderInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDraftOrderInputBuilder toBuilder() =>
      new GDraftOrderInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDraftOrderInput &&
        billingAddress == other.billingAddress &&
        user == other.user &&
        userEmail == other.userEmail &&
        discount == other.discount &&
        shippingAddress == other.shippingAddress &&
        shippingMethod == other.shippingMethod &&
        voucher == other.voucher &&
        customerNote == other.customerNote;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, billingAddress.hashCode), user.hashCode),
                            userEmail.hashCode),
                        discount.hashCode),
                    shippingAddress.hashCode),
                shippingMethod.hashCode),
            voucher.hashCode),
        customerNote.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GDraftOrderInput')
          ..add('billingAddress', billingAddress)
          ..add('user', user)
          ..add('userEmail', userEmail)
          ..add('discount', discount)
          ..add('shippingAddress', shippingAddress)
          ..add('shippingMethod', shippingMethod)
          ..add('voucher', voucher)
          ..add('customerNote', customerNote))
        .toString();
  }
}

class GDraftOrderInputBuilder
    implements Builder<GDraftOrderInput, GDraftOrderInputBuilder> {
  _$GDraftOrderInput _$v;

  GAddressInputBuilder _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder billingAddress) =>
      _$this._billingAddress = billingAddress;

  String _user;
  String get user => _$this._user;
  set user(String user) => _$this._user = user;

  String _userEmail;
  String get userEmail => _$this._userEmail;
  set userEmail(String userEmail) => _$this._userEmail = userEmail;

  GDecimalBuilder _discount;
  GDecimalBuilder get discount => _$this._discount ??= new GDecimalBuilder();
  set discount(GDecimalBuilder discount) => _$this._discount = discount;

  GAddressInputBuilder _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  String _shippingMethod;
  String get shippingMethod => _$this._shippingMethod;
  set shippingMethod(String shippingMethod) =>
      _$this._shippingMethod = shippingMethod;

  String _voucher;
  String get voucher => _$this._voucher;
  set voucher(String voucher) => _$this._voucher = voucher;

  String _customerNote;
  String get customerNote => _$this._customerNote;
  set customerNote(String customerNote) => _$this._customerNote = customerNote;

  GDraftOrderInputBuilder();

  GDraftOrderInputBuilder get _$this {
    if (_$v != null) {
      _billingAddress = _$v.billingAddress?.toBuilder();
      _user = _$v.user;
      _userEmail = _$v.userEmail;
      _discount = _$v.discount?.toBuilder();
      _shippingAddress = _$v.shippingAddress?.toBuilder();
      _shippingMethod = _$v.shippingMethod;
      _voucher = _$v.voucher;
      _customerNote = _$v.customerNote;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDraftOrderInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GDraftOrderInput;
  }

  @override
  void update(void Function(GDraftOrderInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GDraftOrderInput build() {
    _$GDraftOrderInput _$result;
    try {
      _$result = _$v ??
          new _$GDraftOrderInput._(
              billingAddress: _billingAddress?.build(),
              user: user,
              userEmail: userEmail,
              discount: _discount?.build(),
              shippingAddress: _shippingAddress?.build(),
              shippingMethod: shippingMethod,
              voucher: voucher,
              customerNote: customerNote);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'billingAddress';
        _billingAddress?.build();

        _$failedField = 'discount';
        _discount?.build();
        _$failedField = 'shippingAddress';
        _shippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GDraftOrderInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GFulfillmentCancelInput extends GFulfillmentCancelInput {
  @override
  final String warehouseId;

  factory _$GFulfillmentCancelInput(
          [void Function(GFulfillmentCancelInputBuilder) updates]) =>
      (new GFulfillmentCancelInputBuilder()..update(updates)).build();

  _$GFulfillmentCancelInput._({this.warehouseId}) : super._() {
    if (warehouseId == null) {
      throw new BuiltValueNullFieldError(
          'GFulfillmentCancelInput', 'warehouseId');
    }
  }

  @override
  GFulfillmentCancelInput rebuild(
          void Function(GFulfillmentCancelInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFulfillmentCancelInputBuilder toBuilder() =>
      new GFulfillmentCancelInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFulfillmentCancelInput && warehouseId == other.warehouseId;
  }

  @override
  int get hashCode {
    return $jf($jc(0, warehouseId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GFulfillmentCancelInput')
          ..add('warehouseId', warehouseId))
        .toString();
  }
}

class GFulfillmentCancelInputBuilder
    implements
        Builder<GFulfillmentCancelInput, GFulfillmentCancelInputBuilder> {
  _$GFulfillmentCancelInput _$v;

  String _warehouseId;
  String get warehouseId => _$this._warehouseId;
  set warehouseId(String warehouseId) => _$this._warehouseId = warehouseId;

  GFulfillmentCancelInputBuilder();

  GFulfillmentCancelInputBuilder get _$this {
    if (_$v != null) {
      _warehouseId = _$v.warehouseId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFulfillmentCancelInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GFulfillmentCancelInput;
  }

  @override
  void update(void Function(GFulfillmentCancelInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GFulfillmentCancelInput build() {
    final _$result =
        _$v ?? new _$GFulfillmentCancelInput._(warehouseId: warehouseId);
    replace(_$result);
    return _$result;
  }
}

class _$GFulfillmentUpdateTrackingInput
    extends GFulfillmentUpdateTrackingInput {
  @override
  final String trackingNumber;
  @override
  final bool notifyCustomer;

  factory _$GFulfillmentUpdateTrackingInput(
          [void Function(GFulfillmentUpdateTrackingInputBuilder) updates]) =>
      (new GFulfillmentUpdateTrackingInputBuilder()..update(updates)).build();

  _$GFulfillmentUpdateTrackingInput._(
      {this.trackingNumber, this.notifyCustomer})
      : super._();

  @override
  GFulfillmentUpdateTrackingInput rebuild(
          void Function(GFulfillmentUpdateTrackingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFulfillmentUpdateTrackingInputBuilder toBuilder() =>
      new GFulfillmentUpdateTrackingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFulfillmentUpdateTrackingInput &&
        trackingNumber == other.trackingNumber &&
        notifyCustomer == other.notifyCustomer;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, trackingNumber.hashCode), notifyCustomer.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GFulfillmentUpdateTrackingInput')
          ..add('trackingNumber', trackingNumber)
          ..add('notifyCustomer', notifyCustomer))
        .toString();
  }
}

class GFulfillmentUpdateTrackingInputBuilder
    implements
        Builder<GFulfillmentUpdateTrackingInput,
            GFulfillmentUpdateTrackingInputBuilder> {
  _$GFulfillmentUpdateTrackingInput _$v;

  String _trackingNumber;
  String get trackingNumber => _$this._trackingNumber;
  set trackingNumber(String trackingNumber) =>
      _$this._trackingNumber = trackingNumber;

  bool _notifyCustomer;
  bool get notifyCustomer => _$this._notifyCustomer;
  set notifyCustomer(bool notifyCustomer) =>
      _$this._notifyCustomer = notifyCustomer;

  GFulfillmentUpdateTrackingInputBuilder();

  GFulfillmentUpdateTrackingInputBuilder get _$this {
    if (_$v != null) {
      _trackingNumber = _$v.trackingNumber;
      _notifyCustomer = _$v.notifyCustomer;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFulfillmentUpdateTrackingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GFulfillmentUpdateTrackingInput;
  }

  @override
  void update(void Function(GFulfillmentUpdateTrackingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GFulfillmentUpdateTrackingInput build() {
    final _$result = _$v ??
        new _$GFulfillmentUpdateTrackingInput._(
            trackingNumber: trackingNumber, notifyCustomer: notifyCustomer);
    replace(_$result);
    return _$result;
  }
}

class _$GGenericScalar extends GGenericScalar {
  @override
  final String value;

  factory _$GGenericScalar([void Function(GGenericScalarBuilder) updates]) =>
      (new GGenericScalarBuilder()..update(updates)).build();

  _$GGenericScalar._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GGenericScalar', 'value');
    }
  }

  @override
  GGenericScalar rebuild(void Function(GGenericScalarBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGenericScalarBuilder toBuilder() =>
      new GGenericScalarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGenericScalar && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GGenericScalar')..add('value', value))
        .toString();
  }
}

class GGenericScalarBuilder
    implements Builder<GGenericScalar, GGenericScalarBuilder> {
  _$GGenericScalar _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GGenericScalarBuilder();

  GGenericScalarBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGenericScalar other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GGenericScalar;
  }

  @override
  void update(void Function(GGenericScalarBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GGenericScalar build() {
    final _$result = _$v ?? new _$GGenericScalar._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardCreateInput extends GGiftCardCreateInput {
  @override
  final GDate startDate;
  @override
  final GDate endDate;
  @override
  final GDecimal balance;
  @override
  final String userEmail;
  @override
  final String code;

  factory _$GGiftCardCreateInput(
          [void Function(GGiftCardCreateInputBuilder) updates]) =>
      (new GGiftCardCreateInputBuilder()..update(updates)).build();

  _$GGiftCardCreateInput._(
      {this.startDate, this.endDate, this.balance, this.userEmail, this.code})
      : super._();

  @override
  GGiftCardCreateInput rebuild(
          void Function(GGiftCardCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardCreateInputBuilder toBuilder() =>
      new GGiftCardCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardCreateInput &&
        startDate == other.startDate &&
        endDate == other.endDate &&
        balance == other.balance &&
        userEmail == other.userEmail &&
        code == other.code;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, startDate.hashCode), endDate.hashCode),
                balance.hashCode),
            userEmail.hashCode),
        code.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GGiftCardCreateInput')
          ..add('startDate', startDate)
          ..add('endDate', endDate)
          ..add('balance', balance)
          ..add('userEmail', userEmail)
          ..add('code', code))
        .toString();
  }
}

class GGiftCardCreateInputBuilder
    implements Builder<GGiftCardCreateInput, GGiftCardCreateInputBuilder> {
  _$GGiftCardCreateInput _$v;

  GDateBuilder _startDate;
  GDateBuilder get startDate => _$this._startDate ??= new GDateBuilder();
  set startDate(GDateBuilder startDate) => _$this._startDate = startDate;

  GDateBuilder _endDate;
  GDateBuilder get endDate => _$this._endDate ??= new GDateBuilder();
  set endDate(GDateBuilder endDate) => _$this._endDate = endDate;

  GDecimalBuilder _balance;
  GDecimalBuilder get balance => _$this._balance ??= new GDecimalBuilder();
  set balance(GDecimalBuilder balance) => _$this._balance = balance;

  String _userEmail;
  String get userEmail => _$this._userEmail;
  set userEmail(String userEmail) => _$this._userEmail = userEmail;

  String _code;
  String get code => _$this._code;
  set code(String code) => _$this._code = code;

  GGiftCardCreateInputBuilder();

  GGiftCardCreateInputBuilder get _$this {
    if (_$v != null) {
      _startDate = _$v.startDate?.toBuilder();
      _endDate = _$v.endDate?.toBuilder();
      _balance = _$v.balance?.toBuilder();
      _userEmail = _$v.userEmail;
      _code = _$v.code;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GGiftCardCreateInput;
  }

  @override
  void update(void Function(GGiftCardCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GGiftCardCreateInput build() {
    _$GGiftCardCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardCreateInput._(
              startDate: _startDate?.build(),
              endDate: _endDate?.build(),
              balance: _balance?.build(),
              userEmail: userEmail,
              code: code);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();
        _$failedField = 'balance';
        _balance?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GGiftCardCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardUpdateInput extends GGiftCardUpdateInput {
  @override
  final GDate startDate;
  @override
  final GDate endDate;
  @override
  final GDecimal balance;
  @override
  final String userEmail;

  factory _$GGiftCardUpdateInput(
          [void Function(GGiftCardUpdateInputBuilder) updates]) =>
      (new GGiftCardUpdateInputBuilder()..update(updates)).build();

  _$GGiftCardUpdateInput._(
      {this.startDate, this.endDate, this.balance, this.userEmail})
      : super._();

  @override
  GGiftCardUpdateInput rebuild(
          void Function(GGiftCardUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardUpdateInputBuilder toBuilder() =>
      new GGiftCardUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardUpdateInput &&
        startDate == other.startDate &&
        endDate == other.endDate &&
        balance == other.balance &&
        userEmail == other.userEmail;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, startDate.hashCode), endDate.hashCode),
            balance.hashCode),
        userEmail.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GGiftCardUpdateInput')
          ..add('startDate', startDate)
          ..add('endDate', endDate)
          ..add('balance', balance)
          ..add('userEmail', userEmail))
        .toString();
  }
}

class GGiftCardUpdateInputBuilder
    implements Builder<GGiftCardUpdateInput, GGiftCardUpdateInputBuilder> {
  _$GGiftCardUpdateInput _$v;

  GDateBuilder _startDate;
  GDateBuilder get startDate => _$this._startDate ??= new GDateBuilder();
  set startDate(GDateBuilder startDate) => _$this._startDate = startDate;

  GDateBuilder _endDate;
  GDateBuilder get endDate => _$this._endDate ??= new GDateBuilder();
  set endDate(GDateBuilder endDate) => _$this._endDate = endDate;

  GDecimalBuilder _balance;
  GDecimalBuilder get balance => _$this._balance ??= new GDecimalBuilder();
  set balance(GDecimalBuilder balance) => _$this._balance = balance;

  String _userEmail;
  String get userEmail => _$this._userEmail;
  set userEmail(String userEmail) => _$this._userEmail = userEmail;

  GGiftCardUpdateInputBuilder();

  GGiftCardUpdateInputBuilder get _$this {
    if (_$v != null) {
      _startDate = _$v.startDate?.toBuilder();
      _endDate = _$v.endDate?.toBuilder();
      _balance = _$v.balance?.toBuilder();
      _userEmail = _$v.userEmail;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GGiftCardUpdateInput;
  }

  @override
  void update(void Function(GGiftCardUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GGiftCardUpdateInput build() {
    _$GGiftCardUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardUpdateInput._(
              startDate: _startDate?.build(),
              endDate: _endDate?.build(),
              balance: _balance?.build(),
              userEmail: userEmail);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();
        _$failedField = 'balance';
        _balance?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GGiftCardUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIntRangeInput extends GIntRangeInput {
  @override
  final int gte;
  @override
  final int lte;

  factory _$GIntRangeInput([void Function(GIntRangeInputBuilder) updates]) =>
      (new GIntRangeInputBuilder()..update(updates)).build();

  _$GIntRangeInput._({this.gte, this.lte}) : super._();

  @override
  GIntRangeInput rebuild(void Function(GIntRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIntRangeInputBuilder toBuilder() =>
      new GIntRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIntRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GIntRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GIntRangeInputBuilder
    implements Builder<GIntRangeInput, GIntRangeInputBuilder> {
  _$GIntRangeInput _$v;

  int _gte;
  int get gte => _$this._gte;
  set gte(int gte) => _$this._gte = gte;

  int _lte;
  int get lte => _$this._lte;
  set lte(int lte) => _$this._lte = lte;

  GIntRangeInputBuilder();

  GIntRangeInputBuilder get _$this {
    if (_$v != null) {
      _gte = _$v.gte;
      _lte = _$v.lte;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIntRangeInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GIntRangeInput;
  }

  @override
  void update(void Function(GIntRangeInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GIntRangeInput build() {
    final _$result = _$v ?? new _$GIntRangeInput._(gte: gte, lte: lte);
    replace(_$result);
    return _$result;
  }
}

class _$GJSONString extends GJSONString {
  @override
  final String value;

  factory _$GJSONString([void Function(GJSONStringBuilder) updates]) =>
      (new GJSONStringBuilder()..update(updates)).build();

  _$GJSONString._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GJSONString', 'value');
    }
  }

  @override
  GJSONString rebuild(void Function(GJSONStringBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJSONStringBuilder toBuilder() => new GJSONStringBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJSONString && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GJSONString')..add('value', value))
        .toString();
  }
}

class GJSONStringBuilder implements Builder<GJSONString, GJSONStringBuilder> {
  _$GJSONString _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GJSONStringBuilder();

  GJSONStringBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJSONString other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GJSONString;
  }

  @override
  void update(void Function(GJSONStringBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GJSONString build() {
    final _$result = _$v ?? new _$GJSONString._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuCreateInput extends GMenuCreateInput {
  @override
  final String name;
  @override
  final BuiltList<GMenuItemInput> items;

  factory _$GMenuCreateInput(
          [void Function(GMenuCreateInputBuilder) updates]) =>
      (new GMenuCreateInputBuilder()..update(updates)).build();

  _$GMenuCreateInput._({this.name, this.items}) : super._() {
    if (name == null) {
      throw new BuiltValueNullFieldError('GMenuCreateInput', 'name');
    }
  }

  @override
  GMenuCreateInput rebuild(void Function(GMenuCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuCreateInputBuilder toBuilder() =>
      new GMenuCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuCreateInput &&
        name == other.name &&
        items == other.items;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), items.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuCreateInput')
          ..add('name', name)
          ..add('items', items))
        .toString();
  }
}

class GMenuCreateInputBuilder
    implements Builder<GMenuCreateInput, GMenuCreateInputBuilder> {
  _$GMenuCreateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  ListBuilder<GMenuItemInput> _items;
  ListBuilder<GMenuItemInput> get items =>
      _$this._items ??= new ListBuilder<GMenuItemInput>();
  set items(ListBuilder<GMenuItemInput> items) => _$this._items = items;

  GMenuCreateInputBuilder();

  GMenuCreateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _items = _$v.items?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuCreateInput;
  }

  @override
  void update(void Function(GMenuCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuCreateInput build() {
    _$GMenuCreateInput _$result;
    try {
      _$result =
          _$v ?? new _$GMenuCreateInput._(name: name, items: _items?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'items';
        _items?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GMenuCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMenuFilterInput extends GMenuFilterInput {
  @override
  final String search;

  factory _$GMenuFilterInput(
          [void Function(GMenuFilterInputBuilder) updates]) =>
      (new GMenuFilterInputBuilder()..update(updates)).build();

  _$GMenuFilterInput._({this.search}) : super._();

  @override
  GMenuFilterInput rebuild(void Function(GMenuFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuFilterInputBuilder toBuilder() =>
      new GMenuFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuFilterInput && search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(0, search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuFilterInput')
          ..add('search', search))
        .toString();
  }
}

class GMenuFilterInputBuilder
    implements Builder<GMenuFilterInput, GMenuFilterInputBuilder> {
  _$GMenuFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GMenuFilterInputBuilder();

  GMenuFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuFilterInput;
  }

  @override
  void update(void Function(GMenuFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuFilterInput build() {
    final _$result = _$v ?? new _$GMenuFilterInput._(search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuInput extends GMenuInput {
  @override
  final String name;

  factory _$GMenuInput([void Function(GMenuInputBuilder) updates]) =>
      (new GMenuInputBuilder()..update(updates)).build();

  _$GMenuInput._({this.name}) : super._();

  @override
  GMenuInput rebuild(void Function(GMenuInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuInputBuilder toBuilder() => new GMenuInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuInput && name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(0, name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuInput')..add('name', name))
        .toString();
  }
}

class GMenuInputBuilder implements Builder<GMenuInput, GMenuInputBuilder> {
  _$GMenuInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GMenuInputBuilder();

  GMenuInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuInput;
  }

  @override
  void update(void Function(GMenuInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuInput build() {
    final _$result = _$v ?? new _$GMenuInput._(name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemCreateInput extends GMenuItemCreateInput {
  @override
  final String name;
  @override
  final String url;
  @override
  final String category;
  @override
  final String collection;
  @override
  final String page;
  @override
  final String menu;
  @override
  final String parent;

  factory _$GMenuItemCreateInput(
          [void Function(GMenuItemCreateInputBuilder) updates]) =>
      (new GMenuItemCreateInputBuilder()..update(updates)).build();

  _$GMenuItemCreateInput._(
      {this.name,
      this.url,
      this.category,
      this.collection,
      this.page,
      this.menu,
      this.parent})
      : super._() {
    if (name == null) {
      throw new BuiltValueNullFieldError('GMenuItemCreateInput', 'name');
    }
    if (menu == null) {
      throw new BuiltValueNullFieldError('GMenuItemCreateInput', 'menu');
    }
  }

  @override
  GMenuItemCreateInput rebuild(
          void Function(GMenuItemCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemCreateInputBuilder toBuilder() =>
      new GMenuItemCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemCreateInput &&
        name == other.name &&
        url == other.url &&
        category == other.category &&
        collection == other.collection &&
        page == other.page &&
        menu == other.menu &&
        parent == other.parent;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, name.hashCode), url.hashCode),
                        category.hashCode),
                    collection.hashCode),
                page.hashCode),
            menu.hashCode),
        parent.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuItemCreateInput')
          ..add('name', name)
          ..add('url', url)
          ..add('category', category)
          ..add('collection', collection)
          ..add('page', page)
          ..add('menu', menu)
          ..add('parent', parent))
        .toString();
  }
}

class GMenuItemCreateInputBuilder
    implements Builder<GMenuItemCreateInput, GMenuItemCreateInputBuilder> {
  _$GMenuItemCreateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _url;
  String get url => _$this._url;
  set url(String url) => _$this._url = url;

  String _category;
  String get category => _$this._category;
  set category(String category) => _$this._category = category;

  String _collection;
  String get collection => _$this._collection;
  set collection(String collection) => _$this._collection = collection;

  String _page;
  String get page => _$this._page;
  set page(String page) => _$this._page = page;

  String _menu;
  String get menu => _$this._menu;
  set menu(String menu) => _$this._menu = menu;

  String _parent;
  String get parent => _$this._parent;
  set parent(String parent) => _$this._parent = parent;

  GMenuItemCreateInputBuilder();

  GMenuItemCreateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _url = _$v.url;
      _category = _$v.category;
      _collection = _$v.collection;
      _page = _$v.page;
      _menu = _$v.menu;
      _parent = _$v.parent;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuItemCreateInput;
  }

  @override
  void update(void Function(GMenuItemCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuItemCreateInput build() {
    final _$result = _$v ??
        new _$GMenuItemCreateInput._(
            name: name,
            url: url,
            category: category,
            collection: collection,
            page: page,
            menu: menu,
            parent: parent);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemFilterInput extends GMenuItemFilterInput {
  @override
  final String search;

  factory _$GMenuItemFilterInput(
          [void Function(GMenuItemFilterInputBuilder) updates]) =>
      (new GMenuItemFilterInputBuilder()..update(updates)).build();

  _$GMenuItemFilterInput._({this.search}) : super._();

  @override
  GMenuItemFilterInput rebuild(
          void Function(GMenuItemFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemFilterInputBuilder toBuilder() =>
      new GMenuItemFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemFilterInput && search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(0, search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuItemFilterInput')
          ..add('search', search))
        .toString();
  }
}

class GMenuItemFilterInputBuilder
    implements Builder<GMenuItemFilterInput, GMenuItemFilterInputBuilder> {
  _$GMenuItemFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GMenuItemFilterInputBuilder();

  GMenuItemFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuItemFilterInput;
  }

  @override
  void update(void Function(GMenuItemFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuItemFilterInput build() {
    final _$result = _$v ?? new _$GMenuItemFilterInput._(search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemInput extends GMenuItemInput {
  @override
  final String name;
  @override
  final String url;
  @override
  final String category;
  @override
  final String collection;
  @override
  final String page;

  factory _$GMenuItemInput([void Function(GMenuItemInputBuilder) updates]) =>
      (new GMenuItemInputBuilder()..update(updates)).build();

  _$GMenuItemInput._(
      {this.name, this.url, this.category, this.collection, this.page})
      : super._();

  @override
  GMenuItemInput rebuild(void Function(GMenuItemInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemInputBuilder toBuilder() =>
      new GMenuItemInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemInput &&
        name == other.name &&
        url == other.url &&
        category == other.category &&
        collection == other.collection &&
        page == other.page;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, name.hashCode), url.hashCode), category.hashCode),
            collection.hashCode),
        page.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuItemInput')
          ..add('name', name)
          ..add('url', url)
          ..add('category', category)
          ..add('collection', collection)
          ..add('page', page))
        .toString();
  }
}

class GMenuItemInputBuilder
    implements Builder<GMenuItemInput, GMenuItemInputBuilder> {
  _$GMenuItemInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _url;
  String get url => _$this._url;
  set url(String url) => _$this._url = url;

  String _category;
  String get category => _$this._category;
  set category(String category) => _$this._category = category;

  String _collection;
  String get collection => _$this._collection;
  set collection(String collection) => _$this._collection = collection;

  String _page;
  String get page => _$this._page;
  set page(String page) => _$this._page = page;

  GMenuItemInputBuilder();

  GMenuItemInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _url = _$v.url;
      _category = _$v.category;
      _collection = _$v.collection;
      _page = _$v.page;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuItemInput;
  }

  @override
  void update(void Function(GMenuItemInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuItemInput build() {
    final _$result = _$v ??
        new _$GMenuItemInput._(
            name: name,
            url: url,
            category: category,
            collection: collection,
            page: page);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemMoveInput extends GMenuItemMoveInput {
  @override
  final String itemId;
  @override
  final String parentId;
  @override
  final int sortOrder;

  factory _$GMenuItemMoveInput(
          [void Function(GMenuItemMoveInputBuilder) updates]) =>
      (new GMenuItemMoveInputBuilder()..update(updates)).build();

  _$GMenuItemMoveInput._({this.itemId, this.parentId, this.sortOrder})
      : super._() {
    if (itemId == null) {
      throw new BuiltValueNullFieldError('GMenuItemMoveInput', 'itemId');
    }
  }

  @override
  GMenuItemMoveInput rebuild(
          void Function(GMenuItemMoveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemMoveInputBuilder toBuilder() =>
      new GMenuItemMoveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemMoveInput &&
        itemId == other.itemId &&
        parentId == other.parentId &&
        sortOrder == other.sortOrder;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, itemId.hashCode), parentId.hashCode), sortOrder.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuItemMoveInput')
          ..add('itemId', itemId)
          ..add('parentId', parentId)
          ..add('sortOrder', sortOrder))
        .toString();
  }
}

class GMenuItemMoveInputBuilder
    implements Builder<GMenuItemMoveInput, GMenuItemMoveInputBuilder> {
  _$GMenuItemMoveInput _$v;

  String _itemId;
  String get itemId => _$this._itemId;
  set itemId(String itemId) => _$this._itemId = itemId;

  String _parentId;
  String get parentId => _$this._parentId;
  set parentId(String parentId) => _$this._parentId = parentId;

  int _sortOrder;
  int get sortOrder => _$this._sortOrder;
  set sortOrder(int sortOrder) => _$this._sortOrder = sortOrder;

  GMenuItemMoveInputBuilder();

  GMenuItemMoveInputBuilder get _$this {
    if (_$v != null) {
      _itemId = _$v.itemId;
      _parentId = _$v.parentId;
      _sortOrder = _$v.sortOrder;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemMoveInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuItemMoveInput;
  }

  @override
  void update(void Function(GMenuItemMoveInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuItemMoveInput build() {
    final _$result = _$v ??
        new _$GMenuItemMoveInput._(
            itemId: itemId, parentId: parentId, sortOrder: sortOrder);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemSortingInput extends GMenuItemSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GMenuItemsSortField field;

  factory _$GMenuItemSortingInput(
          [void Function(GMenuItemSortingInputBuilder) updates]) =>
      (new GMenuItemSortingInputBuilder()..update(updates)).build();

  _$GMenuItemSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GMenuItemSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GMenuItemSortingInput', 'field');
    }
  }

  @override
  GMenuItemSortingInput rebuild(
          void Function(GMenuItemSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemSortingInputBuilder toBuilder() =>
      new GMenuItemSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuItemSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GMenuItemSortingInputBuilder
    implements Builder<GMenuItemSortingInput, GMenuItemSortingInputBuilder> {
  _$GMenuItemSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GMenuItemsSortField _field;
  GMenuItemsSortField get field => _$this._field;
  set field(GMenuItemsSortField field) => _$this._field = field;

  GMenuItemSortingInputBuilder();

  GMenuItemSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuItemSortingInput;
  }

  @override
  void update(void Function(GMenuItemSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuItemSortingInput build() {
    final _$result = _$v ??
        new _$GMenuItemSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuSortingInput extends GMenuSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GMenuSortField field;

  factory _$GMenuSortingInput(
          [void Function(GMenuSortingInputBuilder) updates]) =>
      (new GMenuSortingInputBuilder()..update(updates)).build();

  _$GMenuSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GMenuSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GMenuSortingInput', 'field');
    }
  }

  @override
  GMenuSortingInput rebuild(void Function(GMenuSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuSortingInputBuilder toBuilder() =>
      new GMenuSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMenuSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GMenuSortingInputBuilder
    implements Builder<GMenuSortingInput, GMenuSortingInputBuilder> {
  _$GMenuSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GMenuSortField _field;
  GMenuSortField get field => _$this._field;
  set field(GMenuSortField field) => _$this._field = field;

  GMenuSortingInputBuilder();

  GMenuSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMenuSortingInput;
  }

  @override
  void update(void Function(GMenuSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMenuSortingInput build() {
    final _$result =
        _$v ?? new _$GMenuSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GMetaInput extends GMetaInput {
  @override
  final String namespace;
  @override
  final String clientName;
  @override
  final String key;
  @override
  final String value;

  factory _$GMetaInput([void Function(GMetaInputBuilder) updates]) =>
      (new GMetaInputBuilder()..update(updates)).build();

  _$GMetaInput._({this.namespace, this.clientName, this.key, this.value})
      : super._() {
    if (namespace == null) {
      throw new BuiltValueNullFieldError('GMetaInput', 'namespace');
    }
    if (clientName == null) {
      throw new BuiltValueNullFieldError('GMetaInput', 'clientName');
    }
    if (key == null) {
      throw new BuiltValueNullFieldError('GMetaInput', 'key');
    }
    if (value == null) {
      throw new BuiltValueNullFieldError('GMetaInput', 'value');
    }
  }

  @override
  GMetaInput rebuild(void Function(GMetaInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetaInputBuilder toBuilder() => new GMetaInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetaInput &&
        namespace == other.namespace &&
        clientName == other.clientName &&
        key == other.key &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, namespace.hashCode), clientName.hashCode), key.hashCode),
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMetaInput')
          ..add('namespace', namespace)
          ..add('clientName', clientName)
          ..add('key', key)
          ..add('value', value))
        .toString();
  }
}

class GMetaInputBuilder implements Builder<GMetaInput, GMetaInputBuilder> {
  _$GMetaInput _$v;

  String _namespace;
  String get namespace => _$this._namespace;
  set namespace(String namespace) => _$this._namespace = namespace;

  String _clientName;
  String get clientName => _$this._clientName;
  set clientName(String clientName) => _$this._clientName = clientName;

  String _key;
  String get key => _$this._key;
  set key(String key) => _$this._key = key;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GMetaInputBuilder();

  GMetaInputBuilder get _$this {
    if (_$v != null) {
      _namespace = _$v.namespace;
      _clientName = _$v.clientName;
      _key = _$v.key;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetaInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMetaInput;
  }

  @override
  void update(void Function(GMetaInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMetaInput build() {
    final _$result = _$v ??
        new _$GMetaInput._(
            namespace: namespace,
            clientName: clientName,
            key: key,
            value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GMetaPath extends GMetaPath {
  @override
  final String namespace;
  @override
  final String clientName;
  @override
  final String key;

  factory _$GMetaPath([void Function(GMetaPathBuilder) updates]) =>
      (new GMetaPathBuilder()..update(updates)).build();

  _$GMetaPath._({this.namespace, this.clientName, this.key}) : super._() {
    if (namespace == null) {
      throw new BuiltValueNullFieldError('GMetaPath', 'namespace');
    }
    if (clientName == null) {
      throw new BuiltValueNullFieldError('GMetaPath', 'clientName');
    }
    if (key == null) {
      throw new BuiltValueNullFieldError('GMetaPath', 'key');
    }
  }

  @override
  GMetaPath rebuild(void Function(GMetaPathBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetaPathBuilder toBuilder() => new GMetaPathBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetaPath &&
        namespace == other.namespace &&
        clientName == other.clientName &&
        key == other.key;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, namespace.hashCode), clientName.hashCode), key.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMetaPath')
          ..add('namespace', namespace)
          ..add('clientName', clientName)
          ..add('key', key))
        .toString();
  }
}

class GMetaPathBuilder implements Builder<GMetaPath, GMetaPathBuilder> {
  _$GMetaPath _$v;

  String _namespace;
  String get namespace => _$this._namespace;
  set namespace(String namespace) => _$this._namespace = namespace;

  String _clientName;
  String get clientName => _$this._clientName;
  set clientName(String clientName) => _$this._clientName = clientName;

  String _key;
  String get key => _$this._key;
  set key(String key) => _$this._key = key;

  GMetaPathBuilder();

  GMetaPathBuilder get _$this {
    if (_$v != null) {
      _namespace = _$v.namespace;
      _clientName = _$v.clientName;
      _key = _$v.key;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetaPath other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMetaPath;
  }

  @override
  void update(void Function(GMetaPathBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMetaPath build() {
    final _$result = _$v ??
        new _$GMetaPath._(
            namespace: namespace, clientName: clientName, key: key);
    replace(_$result);
    return _$result;
  }
}

class _$GMetadataInput extends GMetadataInput {
  @override
  final String key;
  @override
  final String value;

  factory _$GMetadataInput([void Function(GMetadataInputBuilder) updates]) =>
      (new GMetadataInputBuilder()..update(updates)).build();

  _$GMetadataInput._({this.key, this.value}) : super._() {
    if (key == null) {
      throw new BuiltValueNullFieldError('GMetadataInput', 'key');
    }
    if (value == null) {
      throw new BuiltValueNullFieldError('GMetadataInput', 'value');
    }
  }

  @override
  GMetadataInput rebuild(void Function(GMetadataInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetadataInputBuilder toBuilder() =>
      new GMetadataInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetadataInput && key == other.key && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, key.hashCode), value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMetadataInput')
          ..add('key', key)
          ..add('value', value))
        .toString();
  }
}

class GMetadataInputBuilder
    implements Builder<GMetadataInput, GMetadataInputBuilder> {
  _$GMetadataInput _$v;

  String _key;
  String get key => _$this._key;
  set key(String key) => _$this._key = key;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GMetadataInputBuilder();

  GMetadataInputBuilder get _$this {
    if (_$v != null) {
      _key = _$v.key;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetadataInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMetadataInput;
  }

  @override
  void update(void Function(GMetadataInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMetadataInput build() {
    final _$result = _$v ?? new _$GMetadataInput._(key: key, value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GMoveProductInput extends GMoveProductInput {
  @override
  final String productId;
  @override
  final int sortOrder;

  factory _$GMoveProductInput(
          [void Function(GMoveProductInputBuilder) updates]) =>
      (new GMoveProductInputBuilder()..update(updates)).build();

  _$GMoveProductInput._({this.productId, this.sortOrder}) : super._() {
    if (productId == null) {
      throw new BuiltValueNullFieldError('GMoveProductInput', 'productId');
    }
  }

  @override
  GMoveProductInput rebuild(void Function(GMoveProductInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMoveProductInputBuilder toBuilder() =>
      new GMoveProductInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMoveProductInput &&
        productId == other.productId &&
        sortOrder == other.sortOrder;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, productId.hashCode), sortOrder.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GMoveProductInput')
          ..add('productId', productId)
          ..add('sortOrder', sortOrder))
        .toString();
  }
}

class GMoveProductInputBuilder
    implements Builder<GMoveProductInput, GMoveProductInputBuilder> {
  _$GMoveProductInput _$v;

  String _productId;
  String get productId => _$this._productId;
  set productId(String productId) => _$this._productId = productId;

  int _sortOrder;
  int get sortOrder => _$this._sortOrder;
  set sortOrder(int sortOrder) => _$this._sortOrder = sortOrder;

  GMoveProductInputBuilder();

  GMoveProductInputBuilder get _$this {
    if (_$v != null) {
      _productId = _$v.productId;
      _sortOrder = _$v.sortOrder;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMoveProductInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GMoveProductInput;
  }

  @override
  void update(void Function(GMoveProductInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GMoveProductInput build() {
    final _$result = _$v ??
        new _$GMoveProductInput._(productId: productId, sortOrder: sortOrder);
    replace(_$result);
    return _$result;
  }
}

class _$GNameTranslationInput extends GNameTranslationInput {
  @override
  final String name;

  factory _$GNameTranslationInput(
          [void Function(GNameTranslationInputBuilder) updates]) =>
      (new GNameTranslationInputBuilder()..update(updates)).build();

  _$GNameTranslationInput._({this.name}) : super._();

  @override
  GNameTranslationInput rebuild(
          void Function(GNameTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNameTranslationInputBuilder toBuilder() =>
      new GNameTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNameTranslationInput && name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(0, name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GNameTranslationInput')
          ..add('name', name))
        .toString();
  }
}

class GNameTranslationInputBuilder
    implements Builder<GNameTranslationInput, GNameTranslationInputBuilder> {
  _$GNameTranslationInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GNameTranslationInputBuilder();

  GNameTranslationInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNameTranslationInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GNameTranslationInput;
  }

  @override
  void update(void Function(GNameTranslationInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GNameTranslationInput build() {
    final _$result = _$v ?? new _$GNameTranslationInput._(name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderAddNoteInput extends GOrderAddNoteInput {
  @override
  final String message;

  factory _$GOrderAddNoteInput(
          [void Function(GOrderAddNoteInputBuilder) updates]) =>
      (new GOrderAddNoteInputBuilder()..update(updates)).build();

  _$GOrderAddNoteInput._({this.message}) : super._() {
    if (message == null) {
      throw new BuiltValueNullFieldError('GOrderAddNoteInput', 'message');
    }
  }

  @override
  GOrderAddNoteInput rebuild(
          void Function(GOrderAddNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderAddNoteInputBuilder toBuilder() =>
      new GOrderAddNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderAddNoteInput && message == other.message;
  }

  @override
  int get hashCode {
    return $jf($jc(0, message.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderAddNoteInput')
          ..add('message', message))
        .toString();
  }
}

class GOrderAddNoteInputBuilder
    implements Builder<GOrderAddNoteInput, GOrderAddNoteInputBuilder> {
  _$GOrderAddNoteInput _$v;

  String _message;
  String get message => _$this._message;
  set message(String message) => _$this._message = message;

  GOrderAddNoteInputBuilder();

  GOrderAddNoteInputBuilder get _$this {
    if (_$v != null) {
      _message = _$v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderAddNoteInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderAddNoteInput;
  }

  @override
  void update(void Function(GOrderAddNoteInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderAddNoteInput build() {
    final _$result = _$v ?? new _$GOrderAddNoteInput._(message: message);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderDraftFilterInput extends GOrderDraftFilterInput {
  @override
  final String customer;
  @override
  final GDateRangeInput created;
  @override
  final String search;

  factory _$GOrderDraftFilterInput(
          [void Function(GOrderDraftFilterInputBuilder) updates]) =>
      (new GOrderDraftFilterInputBuilder()..update(updates)).build();

  _$GOrderDraftFilterInput._({this.customer, this.created, this.search})
      : super._();

  @override
  GOrderDraftFilterInput rebuild(
          void Function(GOrderDraftFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderDraftFilterInputBuilder toBuilder() =>
      new GOrderDraftFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderDraftFilterInput &&
        customer == other.customer &&
        created == other.created &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, customer.hashCode), created.hashCode), search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderDraftFilterInput')
          ..add('customer', customer)
          ..add('created', created)
          ..add('search', search))
        .toString();
  }
}

class GOrderDraftFilterInputBuilder
    implements Builder<GOrderDraftFilterInput, GOrderDraftFilterInputBuilder> {
  _$GOrderDraftFilterInput _$v;

  String _customer;
  String get customer => _$this._customer;
  set customer(String customer) => _$this._customer = customer;

  GDateRangeInputBuilder _created;
  GDateRangeInputBuilder get created =>
      _$this._created ??= new GDateRangeInputBuilder();
  set created(GDateRangeInputBuilder created) => _$this._created = created;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GOrderDraftFilterInputBuilder();

  GOrderDraftFilterInputBuilder get _$this {
    if (_$v != null) {
      _customer = _$v.customer;
      _created = _$v.created?.toBuilder();
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderDraftFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderDraftFilterInput;
  }

  @override
  void update(void Function(GOrderDraftFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderDraftFilterInput build() {
    _$GOrderDraftFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderDraftFilterInput._(
              customer: customer, created: _created?.build(), search: search);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'created';
        _created?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GOrderDraftFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFilterInput extends GOrderFilterInput {
  @override
  final BuiltList<GPaymentChargeStatusEnum> paymentStatus;
  @override
  final BuiltList<GOrderStatusFilter> status;
  @override
  final String customer;
  @override
  final GDateRangeInput created;
  @override
  final String search;

  factory _$GOrderFilterInput(
          [void Function(GOrderFilterInputBuilder) updates]) =>
      (new GOrderFilterInputBuilder()..update(updates)).build();

  _$GOrderFilterInput._(
      {this.paymentStatus,
      this.status,
      this.customer,
      this.created,
      this.search})
      : super._();

  @override
  GOrderFilterInput rebuild(void Function(GOrderFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFilterInputBuilder toBuilder() =>
      new GOrderFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFilterInput &&
        paymentStatus == other.paymentStatus &&
        status == other.status &&
        customer == other.customer &&
        created == other.created &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, paymentStatus.hashCode), status.hashCode),
                customer.hashCode),
            created.hashCode),
        search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderFilterInput')
          ..add('paymentStatus', paymentStatus)
          ..add('status', status)
          ..add('customer', customer)
          ..add('created', created)
          ..add('search', search))
        .toString();
  }
}

class GOrderFilterInputBuilder
    implements Builder<GOrderFilterInput, GOrderFilterInputBuilder> {
  _$GOrderFilterInput _$v;

  ListBuilder<GPaymentChargeStatusEnum> _paymentStatus;
  ListBuilder<GPaymentChargeStatusEnum> get paymentStatus =>
      _$this._paymentStatus ??= new ListBuilder<GPaymentChargeStatusEnum>();
  set paymentStatus(ListBuilder<GPaymentChargeStatusEnum> paymentStatus) =>
      _$this._paymentStatus = paymentStatus;

  ListBuilder<GOrderStatusFilter> _status;
  ListBuilder<GOrderStatusFilter> get status =>
      _$this._status ??= new ListBuilder<GOrderStatusFilter>();
  set status(ListBuilder<GOrderStatusFilter> status) => _$this._status = status;

  String _customer;
  String get customer => _$this._customer;
  set customer(String customer) => _$this._customer = customer;

  GDateRangeInputBuilder _created;
  GDateRangeInputBuilder get created =>
      _$this._created ??= new GDateRangeInputBuilder();
  set created(GDateRangeInputBuilder created) => _$this._created = created;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GOrderFilterInputBuilder();

  GOrderFilterInputBuilder get _$this {
    if (_$v != null) {
      _paymentStatus = _$v.paymentStatus?.toBuilder();
      _status = _$v.status?.toBuilder();
      _customer = _$v.customer;
      _created = _$v.created?.toBuilder();
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderFilterInput;
  }

  @override
  void update(void Function(GOrderFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderFilterInput build() {
    _$GOrderFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderFilterInput._(
              paymentStatus: _paymentStatus?.build(),
              status: _status?.build(),
              customer: customer,
              created: _created?.build(),
              search: search);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'paymentStatus';
        _paymentStatus?.build();
        _$failedField = 'status';
        _status?.build();

        _$failedField = 'created';
        _created?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GOrderFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFulfillInput extends GOrderFulfillInput {
  @override
  final BuiltList<GOrderFulfillLineInput> lines;
  @override
  final bool notifyCustomer;

  factory _$GOrderFulfillInput(
          [void Function(GOrderFulfillInputBuilder) updates]) =>
      (new GOrderFulfillInputBuilder()..update(updates)).build();

  _$GOrderFulfillInput._({this.lines, this.notifyCustomer}) : super._() {
    if (lines == null) {
      throw new BuiltValueNullFieldError('GOrderFulfillInput', 'lines');
    }
  }

  @override
  GOrderFulfillInput rebuild(
          void Function(GOrderFulfillInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFulfillInputBuilder toBuilder() =>
      new GOrderFulfillInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFulfillInput &&
        lines == other.lines &&
        notifyCustomer == other.notifyCustomer;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, lines.hashCode), notifyCustomer.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderFulfillInput')
          ..add('lines', lines)
          ..add('notifyCustomer', notifyCustomer))
        .toString();
  }
}

class GOrderFulfillInputBuilder
    implements Builder<GOrderFulfillInput, GOrderFulfillInputBuilder> {
  _$GOrderFulfillInput _$v;

  ListBuilder<GOrderFulfillLineInput> _lines;
  ListBuilder<GOrderFulfillLineInput> get lines =>
      _$this._lines ??= new ListBuilder<GOrderFulfillLineInput>();
  set lines(ListBuilder<GOrderFulfillLineInput> lines) => _$this._lines = lines;

  bool _notifyCustomer;
  bool get notifyCustomer => _$this._notifyCustomer;
  set notifyCustomer(bool notifyCustomer) =>
      _$this._notifyCustomer = notifyCustomer;

  GOrderFulfillInputBuilder();

  GOrderFulfillInputBuilder get _$this {
    if (_$v != null) {
      _lines = _$v.lines?.toBuilder();
      _notifyCustomer = _$v.notifyCustomer;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFulfillInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderFulfillInput;
  }

  @override
  void update(void Function(GOrderFulfillInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderFulfillInput build() {
    _$GOrderFulfillInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderFulfillInput._(
              lines: lines.build(), notifyCustomer: notifyCustomer);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'lines';
        lines.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GOrderFulfillInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFulfillLineInput extends GOrderFulfillLineInput {
  @override
  final String orderLineId;
  @override
  final BuiltList<GOrderFulfillStockInput> stocks;

  factory _$GOrderFulfillLineInput(
          [void Function(GOrderFulfillLineInputBuilder) updates]) =>
      (new GOrderFulfillLineInputBuilder()..update(updates)).build();

  _$GOrderFulfillLineInput._({this.orderLineId, this.stocks}) : super._() {
    if (stocks == null) {
      throw new BuiltValueNullFieldError('GOrderFulfillLineInput', 'stocks');
    }
  }

  @override
  GOrderFulfillLineInput rebuild(
          void Function(GOrderFulfillLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFulfillLineInputBuilder toBuilder() =>
      new GOrderFulfillLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFulfillLineInput &&
        orderLineId == other.orderLineId &&
        stocks == other.stocks;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, orderLineId.hashCode), stocks.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderFulfillLineInput')
          ..add('orderLineId', orderLineId)
          ..add('stocks', stocks))
        .toString();
  }
}

class GOrderFulfillLineInputBuilder
    implements Builder<GOrderFulfillLineInput, GOrderFulfillLineInputBuilder> {
  _$GOrderFulfillLineInput _$v;

  String _orderLineId;
  String get orderLineId => _$this._orderLineId;
  set orderLineId(String orderLineId) => _$this._orderLineId = orderLineId;

  ListBuilder<GOrderFulfillStockInput> _stocks;
  ListBuilder<GOrderFulfillStockInput> get stocks =>
      _$this._stocks ??= new ListBuilder<GOrderFulfillStockInput>();
  set stocks(ListBuilder<GOrderFulfillStockInput> stocks) =>
      _$this._stocks = stocks;

  GOrderFulfillLineInputBuilder();

  GOrderFulfillLineInputBuilder get _$this {
    if (_$v != null) {
      _orderLineId = _$v.orderLineId;
      _stocks = _$v.stocks?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFulfillLineInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderFulfillLineInput;
  }

  @override
  void update(void Function(GOrderFulfillLineInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderFulfillLineInput build() {
    _$GOrderFulfillLineInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderFulfillLineInput._(
              orderLineId: orderLineId, stocks: stocks.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'stocks';
        stocks.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GOrderFulfillLineInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFulfillStockInput extends GOrderFulfillStockInput {
  @override
  final int quantity;
  @override
  final String warehouse;

  factory _$GOrderFulfillStockInput(
          [void Function(GOrderFulfillStockInputBuilder) updates]) =>
      (new GOrderFulfillStockInputBuilder()..update(updates)).build();

  _$GOrderFulfillStockInput._({this.quantity, this.warehouse}) : super._();

  @override
  GOrderFulfillStockInput rebuild(
          void Function(GOrderFulfillStockInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFulfillStockInputBuilder toBuilder() =>
      new GOrderFulfillStockInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFulfillStockInput &&
        quantity == other.quantity &&
        warehouse == other.warehouse;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, quantity.hashCode), warehouse.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderFulfillStockInput')
          ..add('quantity', quantity)
          ..add('warehouse', warehouse))
        .toString();
  }
}

class GOrderFulfillStockInputBuilder
    implements
        Builder<GOrderFulfillStockInput, GOrderFulfillStockInputBuilder> {
  _$GOrderFulfillStockInput _$v;

  int _quantity;
  int get quantity => _$this._quantity;
  set quantity(int quantity) => _$this._quantity = quantity;

  String _warehouse;
  String get warehouse => _$this._warehouse;
  set warehouse(String warehouse) => _$this._warehouse = warehouse;

  GOrderFulfillStockInputBuilder();

  GOrderFulfillStockInputBuilder get _$this {
    if (_$v != null) {
      _quantity = _$v.quantity;
      _warehouse = _$v.warehouse;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFulfillStockInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderFulfillStockInput;
  }

  @override
  void update(void Function(GOrderFulfillStockInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderFulfillStockInput build() {
    final _$result = _$v ??
        new _$GOrderFulfillStockInput._(
            quantity: quantity, warehouse: warehouse);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderLineCreateInput extends GOrderLineCreateInput {
  @override
  final int quantity;
  @override
  final String variantId;

  factory _$GOrderLineCreateInput(
          [void Function(GOrderLineCreateInputBuilder) updates]) =>
      (new GOrderLineCreateInputBuilder()..update(updates)).build();

  _$GOrderLineCreateInput._({this.quantity, this.variantId}) : super._() {
    if (quantity == null) {
      throw new BuiltValueNullFieldError('GOrderLineCreateInput', 'quantity');
    }
    if (variantId == null) {
      throw new BuiltValueNullFieldError('GOrderLineCreateInput', 'variantId');
    }
  }

  @override
  GOrderLineCreateInput rebuild(
          void Function(GOrderLineCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderLineCreateInputBuilder toBuilder() =>
      new GOrderLineCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderLineCreateInput &&
        quantity == other.quantity &&
        variantId == other.variantId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, quantity.hashCode), variantId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderLineCreateInput')
          ..add('quantity', quantity)
          ..add('variantId', variantId))
        .toString();
  }
}

class GOrderLineCreateInputBuilder
    implements Builder<GOrderLineCreateInput, GOrderLineCreateInputBuilder> {
  _$GOrderLineCreateInput _$v;

  int _quantity;
  int get quantity => _$this._quantity;
  set quantity(int quantity) => _$this._quantity = quantity;

  String _variantId;
  String get variantId => _$this._variantId;
  set variantId(String variantId) => _$this._variantId = variantId;

  GOrderLineCreateInputBuilder();

  GOrderLineCreateInputBuilder get _$this {
    if (_$v != null) {
      _quantity = _$v.quantity;
      _variantId = _$v.variantId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderLineCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderLineCreateInput;
  }

  @override
  void update(void Function(GOrderLineCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderLineCreateInput build() {
    final _$result = _$v ??
        new _$GOrderLineCreateInput._(quantity: quantity, variantId: variantId);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderLineInput extends GOrderLineInput {
  @override
  final int quantity;

  factory _$GOrderLineInput([void Function(GOrderLineInputBuilder) updates]) =>
      (new GOrderLineInputBuilder()..update(updates)).build();

  _$GOrderLineInput._({this.quantity}) : super._() {
    if (quantity == null) {
      throw new BuiltValueNullFieldError('GOrderLineInput', 'quantity');
    }
  }

  @override
  GOrderLineInput rebuild(void Function(GOrderLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderLineInputBuilder toBuilder() =>
      new GOrderLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderLineInput && quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc(0, quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderLineInput')
          ..add('quantity', quantity))
        .toString();
  }
}

class GOrderLineInputBuilder
    implements Builder<GOrderLineInput, GOrderLineInputBuilder> {
  _$GOrderLineInput _$v;

  int _quantity;
  int get quantity => _$this._quantity;
  set quantity(int quantity) => _$this._quantity = quantity;

  GOrderLineInputBuilder();

  GOrderLineInputBuilder get _$this {
    if (_$v != null) {
      _quantity = _$v.quantity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderLineInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderLineInput;
  }

  @override
  void update(void Function(GOrderLineInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderLineInput build() {
    final _$result = _$v ?? new _$GOrderLineInput._(quantity: quantity);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderSortingInput extends GOrderSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GOrderSortField field;

  factory _$GOrderSortingInput(
          [void Function(GOrderSortingInputBuilder) updates]) =>
      (new GOrderSortingInputBuilder()..update(updates)).build();

  _$GOrderSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GOrderSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GOrderSortingInput', 'field');
    }
  }

  @override
  GOrderSortingInput rebuild(
          void Function(GOrderSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderSortingInputBuilder toBuilder() =>
      new GOrderSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GOrderSortingInputBuilder
    implements Builder<GOrderSortingInput, GOrderSortingInputBuilder> {
  _$GOrderSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GOrderSortField _field;
  GOrderSortField get field => _$this._field;
  set field(GOrderSortField field) => _$this._field = field;

  GOrderSortingInputBuilder();

  GOrderSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderSortingInput;
  }

  @override
  void update(void Function(GOrderSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderSortingInput build() {
    final _$result =
        _$v ?? new _$GOrderSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderUpdateInput extends GOrderUpdateInput {
  @override
  final GAddressInput billingAddress;
  @override
  final String userEmail;
  @override
  final GAddressInput shippingAddress;

  factory _$GOrderUpdateInput(
          [void Function(GOrderUpdateInputBuilder) updates]) =>
      (new GOrderUpdateInputBuilder()..update(updates)).build();

  _$GOrderUpdateInput._(
      {this.billingAddress, this.userEmail, this.shippingAddress})
      : super._();

  @override
  GOrderUpdateInput rebuild(void Function(GOrderUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderUpdateInputBuilder toBuilder() =>
      new GOrderUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderUpdateInput &&
        billingAddress == other.billingAddress &&
        userEmail == other.userEmail &&
        shippingAddress == other.shippingAddress;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, billingAddress.hashCode), userEmail.hashCode),
        shippingAddress.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderUpdateInput')
          ..add('billingAddress', billingAddress)
          ..add('userEmail', userEmail)
          ..add('shippingAddress', shippingAddress))
        .toString();
  }
}

class GOrderUpdateInputBuilder
    implements Builder<GOrderUpdateInput, GOrderUpdateInputBuilder> {
  _$GOrderUpdateInput _$v;

  GAddressInputBuilder _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder billingAddress) =>
      _$this._billingAddress = billingAddress;

  String _userEmail;
  String get userEmail => _$this._userEmail;
  set userEmail(String userEmail) => _$this._userEmail = userEmail;

  GAddressInputBuilder _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  GOrderUpdateInputBuilder();

  GOrderUpdateInputBuilder get _$this {
    if (_$v != null) {
      _billingAddress = _$v.billingAddress?.toBuilder();
      _userEmail = _$v.userEmail;
      _shippingAddress = _$v.shippingAddress?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderUpdateInput;
  }

  @override
  void update(void Function(GOrderUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderUpdateInput build() {
    _$GOrderUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderUpdateInput._(
              billingAddress: _billingAddress?.build(),
              userEmail: userEmail,
              shippingAddress: _shippingAddress?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'billingAddress';
        _billingAddress?.build();

        _$failedField = 'shippingAddress';
        _shippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GOrderUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderUpdateShippingInput extends GOrderUpdateShippingInput {
  @override
  final String shippingMethod;

  factory _$GOrderUpdateShippingInput(
          [void Function(GOrderUpdateShippingInputBuilder) updates]) =>
      (new GOrderUpdateShippingInputBuilder()..update(updates)).build();

  _$GOrderUpdateShippingInput._({this.shippingMethod}) : super._();

  @override
  GOrderUpdateShippingInput rebuild(
          void Function(GOrderUpdateShippingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderUpdateShippingInputBuilder toBuilder() =>
      new GOrderUpdateShippingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderUpdateShippingInput &&
        shippingMethod == other.shippingMethod;
  }

  @override
  int get hashCode {
    return $jf($jc(0, shippingMethod.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GOrderUpdateShippingInput')
          ..add('shippingMethod', shippingMethod))
        .toString();
  }
}

class GOrderUpdateShippingInputBuilder
    implements
        Builder<GOrderUpdateShippingInput, GOrderUpdateShippingInputBuilder> {
  _$GOrderUpdateShippingInput _$v;

  String _shippingMethod;
  String get shippingMethod => _$this._shippingMethod;
  set shippingMethod(String shippingMethod) =>
      _$this._shippingMethod = shippingMethod;

  GOrderUpdateShippingInputBuilder();

  GOrderUpdateShippingInputBuilder get _$this {
    if (_$v != null) {
      _shippingMethod = _$v.shippingMethod;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderUpdateShippingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GOrderUpdateShippingInput;
  }

  @override
  void update(void Function(GOrderUpdateShippingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GOrderUpdateShippingInput build() {
    final _$result = _$v ??
        new _$GOrderUpdateShippingInput._(shippingMethod: shippingMethod);
    replace(_$result);
    return _$result;
  }
}

class _$GPageFilterInput extends GPageFilterInput {
  @override
  final String search;

  factory _$GPageFilterInput(
          [void Function(GPageFilterInputBuilder) updates]) =>
      (new GPageFilterInputBuilder()..update(updates)).build();

  _$GPageFilterInput._({this.search}) : super._();

  @override
  GPageFilterInput rebuild(void Function(GPageFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageFilterInputBuilder toBuilder() =>
      new GPageFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageFilterInput && search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(0, search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPageFilterInput')
          ..add('search', search))
        .toString();
  }
}

class GPageFilterInputBuilder
    implements Builder<GPageFilterInput, GPageFilterInputBuilder> {
  _$GPageFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GPageFilterInputBuilder();

  GPageFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPageFilterInput;
  }

  @override
  void update(void Function(GPageFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPageFilterInput build() {
    final _$result = _$v ?? new _$GPageFilterInput._(search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GPageInput extends GPageInput {
  @override
  final String slug;
  @override
  final String title;
  @override
  final String content;
  @override
  final GJSONString contentJson;
  @override
  final bool isPublished;
  @override
  final String publicationDate;
  @override
  final GSeoInput seo;

  factory _$GPageInput([void Function(GPageInputBuilder) updates]) =>
      (new GPageInputBuilder()..update(updates)).build();

  _$GPageInput._(
      {this.slug,
      this.title,
      this.content,
      this.contentJson,
      this.isPublished,
      this.publicationDate,
      this.seo})
      : super._();

  @override
  GPageInput rebuild(void Function(GPageInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageInputBuilder toBuilder() => new GPageInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageInput &&
        slug == other.slug &&
        title == other.title &&
        content == other.content &&
        contentJson == other.contentJson &&
        isPublished == other.isPublished &&
        publicationDate == other.publicationDate &&
        seo == other.seo;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, slug.hashCode), title.hashCode),
                        content.hashCode),
                    contentJson.hashCode),
                isPublished.hashCode),
            publicationDate.hashCode),
        seo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPageInput')
          ..add('slug', slug)
          ..add('title', title)
          ..add('content', content)
          ..add('contentJson', contentJson)
          ..add('isPublished', isPublished)
          ..add('publicationDate', publicationDate)
          ..add('seo', seo))
        .toString();
  }
}

class GPageInputBuilder implements Builder<GPageInput, GPageInputBuilder> {
  _$GPageInput _$v;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  String _title;
  String get title => _$this._title;
  set title(String title) => _$this._title = title;

  String _content;
  String get content => _$this._content;
  set content(String content) => _$this._content = content;

  GJSONStringBuilder _contentJson;
  GJSONStringBuilder get contentJson =>
      _$this._contentJson ??= new GJSONStringBuilder();
  set contentJson(GJSONStringBuilder contentJson) =>
      _$this._contentJson = contentJson;

  bool _isPublished;
  bool get isPublished => _$this._isPublished;
  set isPublished(bool isPublished) => _$this._isPublished = isPublished;

  String _publicationDate;
  String get publicationDate => _$this._publicationDate;
  set publicationDate(String publicationDate) =>
      _$this._publicationDate = publicationDate;

  GSeoInputBuilder _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder seo) => _$this._seo = seo;

  GPageInputBuilder();

  GPageInputBuilder get _$this {
    if (_$v != null) {
      _slug = _$v.slug;
      _title = _$v.title;
      _content = _$v.content;
      _contentJson = _$v.contentJson?.toBuilder();
      _isPublished = _$v.isPublished;
      _publicationDate = _$v.publicationDate;
      _seo = _$v.seo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPageInput;
  }

  @override
  void update(void Function(GPageInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPageInput build() {
    _$GPageInput _$result;
    try {
      _$result = _$v ??
          new _$GPageInput._(
              slug: slug,
              title: title,
              content: content,
              contentJson: _contentJson?.build(),
              isPublished: isPublished,
              publicationDate: publicationDate,
              seo: _seo?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'contentJson';
        _contentJson?.build();

        _$failedField = 'seo';
        _seo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GPageInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSortingInput extends GPageSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GPageSortField field;

  factory _$GPageSortingInput(
          [void Function(GPageSortingInputBuilder) updates]) =>
      (new GPageSortingInputBuilder()..update(updates)).build();

  _$GPageSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GPageSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GPageSortingInput', 'field');
    }
  }

  @override
  GPageSortingInput rebuild(void Function(GPageSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSortingInputBuilder toBuilder() =>
      new GPageSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPageSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GPageSortingInputBuilder
    implements Builder<GPageSortingInput, GPageSortingInputBuilder> {
  _$GPageSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GPageSortField _field;
  GPageSortField get field => _$this._field;
  set field(GPageSortField field) => _$this._field = field;

  GPageSortingInputBuilder();

  GPageSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPageSortingInput;
  }

  @override
  void update(void Function(GPageSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPageSortingInput build() {
    final _$result =
        _$v ?? new _$GPageSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GPageTranslationInput extends GPageTranslationInput {
  @override
  final String seoTitle;
  @override
  final String seoDescription;
  @override
  final String title;
  @override
  final String content;
  @override
  final GJSONString contentJson;

  factory _$GPageTranslationInput(
          [void Function(GPageTranslationInputBuilder) updates]) =>
      (new GPageTranslationInputBuilder()..update(updates)).build();

  _$GPageTranslationInput._(
      {this.seoTitle,
      this.seoDescription,
      this.title,
      this.content,
      this.contentJson})
      : super._();

  @override
  GPageTranslationInput rebuild(
          void Function(GPageTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageTranslationInputBuilder toBuilder() =>
      new GPageTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageTranslationInput &&
        seoTitle == other.seoTitle &&
        seoDescription == other.seoDescription &&
        title == other.title &&
        content == other.content &&
        contentJson == other.contentJson;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, seoTitle.hashCode), seoDescription.hashCode),
                title.hashCode),
            content.hashCode),
        contentJson.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPageTranslationInput')
          ..add('seoTitle', seoTitle)
          ..add('seoDescription', seoDescription)
          ..add('title', title)
          ..add('content', content)
          ..add('contentJson', contentJson))
        .toString();
  }
}

class GPageTranslationInputBuilder
    implements Builder<GPageTranslationInput, GPageTranslationInputBuilder> {
  _$GPageTranslationInput _$v;

  String _seoTitle;
  String get seoTitle => _$this._seoTitle;
  set seoTitle(String seoTitle) => _$this._seoTitle = seoTitle;

  String _seoDescription;
  String get seoDescription => _$this._seoDescription;
  set seoDescription(String seoDescription) =>
      _$this._seoDescription = seoDescription;

  String _title;
  String get title => _$this._title;
  set title(String title) => _$this._title = title;

  String _content;
  String get content => _$this._content;
  set content(String content) => _$this._content = content;

  GJSONStringBuilder _contentJson;
  GJSONStringBuilder get contentJson =>
      _$this._contentJson ??= new GJSONStringBuilder();
  set contentJson(GJSONStringBuilder contentJson) =>
      _$this._contentJson = contentJson;

  GPageTranslationInputBuilder();

  GPageTranslationInputBuilder get _$this {
    if (_$v != null) {
      _seoTitle = _$v.seoTitle;
      _seoDescription = _$v.seoDescription;
      _title = _$v.title;
      _content = _$v.content;
      _contentJson = _$v.contentJson?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageTranslationInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPageTranslationInput;
  }

  @override
  void update(void Function(GPageTranslationInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPageTranslationInput build() {
    _$GPageTranslationInput _$result;
    try {
      _$result = _$v ??
          new _$GPageTranslationInput._(
              seoTitle: seoTitle,
              seoDescription: seoDescription,
              title: title,
              content: content,
              contentJson: _contentJson?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'contentJson';
        _contentJson?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GPageTranslationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPaymentInput extends GPaymentInput {
  @override
  final String gateway;
  @override
  final String token;
  @override
  final GDecimal amount;
  @override
  final GAddressInput billingAddress;

  factory _$GPaymentInput([void Function(GPaymentInputBuilder) updates]) =>
      (new GPaymentInputBuilder()..update(updates)).build();

  _$GPaymentInput._(
      {this.gateway, this.token, this.amount, this.billingAddress})
      : super._() {
    if (gateway == null) {
      throw new BuiltValueNullFieldError('GPaymentInput', 'gateway');
    }
    if (token == null) {
      throw new BuiltValueNullFieldError('GPaymentInput', 'token');
    }
  }

  @override
  GPaymentInput rebuild(void Function(GPaymentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPaymentInputBuilder toBuilder() => new GPaymentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPaymentInput &&
        gateway == other.gateway &&
        token == other.token &&
        amount == other.amount &&
        billingAddress == other.billingAddress;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, gateway.hashCode), token.hashCode), amount.hashCode),
        billingAddress.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPaymentInput')
          ..add('gateway', gateway)
          ..add('token', token)
          ..add('amount', amount)
          ..add('billingAddress', billingAddress))
        .toString();
  }
}

class GPaymentInputBuilder
    implements Builder<GPaymentInput, GPaymentInputBuilder> {
  _$GPaymentInput _$v;

  String _gateway;
  String get gateway => _$this._gateway;
  set gateway(String gateway) => _$this._gateway = gateway;

  String _token;
  String get token => _$this._token;
  set token(String token) => _$this._token = token;

  GDecimalBuilder _amount;
  GDecimalBuilder get amount => _$this._amount ??= new GDecimalBuilder();
  set amount(GDecimalBuilder amount) => _$this._amount = amount;

  GAddressInputBuilder _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder billingAddress) =>
      _$this._billingAddress = billingAddress;

  GPaymentInputBuilder();

  GPaymentInputBuilder get _$this {
    if (_$v != null) {
      _gateway = _$v.gateway;
      _token = _$v.token;
      _amount = _$v.amount?.toBuilder();
      _billingAddress = _$v.billingAddress?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPaymentInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPaymentInput;
  }

  @override
  void update(void Function(GPaymentInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPaymentInput build() {
    _$GPaymentInput _$result;
    try {
      _$result = _$v ??
          new _$GPaymentInput._(
              gateway: gateway,
              token: token,
              amount: _amount?.build(),
              billingAddress: _billingAddress?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'amount';
        _amount?.build();
        _$failedField = 'billingAddress';
        _billingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GPaymentInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupCreateInput extends GPermissionGroupCreateInput {
  @override
  final BuiltList<GPermissionEnum> addPermissions;
  @override
  final BuiltList<String> addUsers;
  @override
  final String name;

  factory _$GPermissionGroupCreateInput(
          [void Function(GPermissionGroupCreateInputBuilder) updates]) =>
      (new GPermissionGroupCreateInputBuilder()..update(updates)).build();

  _$GPermissionGroupCreateInput._(
      {this.addPermissions, this.addUsers, this.name})
      : super._() {
    if (addPermissions == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupCreateInput', 'addPermissions');
    }
    if (addUsers == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupCreateInput', 'addUsers');
    }
    if (name == null) {
      throw new BuiltValueNullFieldError('GPermissionGroupCreateInput', 'name');
    }
  }

  @override
  GPermissionGroupCreateInput rebuild(
          void Function(GPermissionGroupCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupCreateInputBuilder toBuilder() =>
      new GPermissionGroupCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupCreateInput &&
        addPermissions == other.addPermissions &&
        addUsers == other.addUsers &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, addPermissions.hashCode), addUsers.hashCode),
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPermissionGroupCreateInput')
          ..add('addPermissions', addPermissions)
          ..add('addUsers', addUsers)
          ..add('name', name))
        .toString();
  }
}

class GPermissionGroupCreateInputBuilder
    implements
        Builder<GPermissionGroupCreateInput,
            GPermissionGroupCreateInputBuilder> {
  _$GPermissionGroupCreateInput _$v;

  ListBuilder<GPermissionEnum> _addPermissions;
  ListBuilder<GPermissionEnum> get addPermissions =>
      _$this._addPermissions ??= new ListBuilder<GPermissionEnum>();
  set addPermissions(ListBuilder<GPermissionEnum> addPermissions) =>
      _$this._addPermissions = addPermissions;

  ListBuilder<String> _addUsers;
  ListBuilder<String> get addUsers =>
      _$this._addUsers ??= new ListBuilder<String>();
  set addUsers(ListBuilder<String> addUsers) => _$this._addUsers = addUsers;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GPermissionGroupCreateInputBuilder();

  GPermissionGroupCreateInputBuilder get _$this {
    if (_$v != null) {
      _addPermissions = _$v.addPermissions?.toBuilder();
      _addUsers = _$v.addUsers?.toBuilder();
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPermissionGroupCreateInput;
  }

  @override
  void update(void Function(GPermissionGroupCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPermissionGroupCreateInput build() {
    _$GPermissionGroupCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GPermissionGroupCreateInput._(
              addPermissions: addPermissions.build(),
              addUsers: addUsers.build(),
              name: name);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'addPermissions';
        addPermissions.build();
        _$failedField = 'addUsers';
        addUsers.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GPermissionGroupCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupFilterInput extends GPermissionGroupFilterInput {
  @override
  final String search;

  factory _$GPermissionGroupFilterInput(
          [void Function(GPermissionGroupFilterInputBuilder) updates]) =>
      (new GPermissionGroupFilterInputBuilder()..update(updates)).build();

  _$GPermissionGroupFilterInput._({this.search}) : super._();

  @override
  GPermissionGroupFilterInput rebuild(
          void Function(GPermissionGroupFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupFilterInputBuilder toBuilder() =>
      new GPermissionGroupFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupFilterInput && search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(0, search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPermissionGroupFilterInput')
          ..add('search', search))
        .toString();
  }
}

class GPermissionGroupFilterInputBuilder
    implements
        Builder<GPermissionGroupFilterInput,
            GPermissionGroupFilterInputBuilder> {
  _$GPermissionGroupFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GPermissionGroupFilterInputBuilder();

  GPermissionGroupFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPermissionGroupFilterInput;
  }

  @override
  void update(void Function(GPermissionGroupFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPermissionGroupFilterInput build() {
    final _$result = _$v ?? new _$GPermissionGroupFilterInput._(search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupSortingInput extends GPermissionGroupSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GPermissionGroupSortField field;

  factory _$GPermissionGroupSortingInput(
          [void Function(GPermissionGroupSortingInputBuilder) updates]) =>
      (new GPermissionGroupSortingInputBuilder()..update(updates)).build();

  _$GPermissionGroupSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupSortingInput', 'field');
    }
  }

  @override
  GPermissionGroupSortingInput rebuild(
          void Function(GPermissionGroupSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupSortingInputBuilder toBuilder() =>
      new GPermissionGroupSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPermissionGroupSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GPermissionGroupSortingInputBuilder
    implements
        Builder<GPermissionGroupSortingInput,
            GPermissionGroupSortingInputBuilder> {
  _$GPermissionGroupSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GPermissionGroupSortField _field;
  GPermissionGroupSortField get field => _$this._field;
  set field(GPermissionGroupSortField field) => _$this._field = field;

  GPermissionGroupSortingInputBuilder();

  GPermissionGroupSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPermissionGroupSortingInput;
  }

  @override
  void update(void Function(GPermissionGroupSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPermissionGroupSortingInput build() {
    final _$result = _$v ??
        new _$GPermissionGroupSortingInput._(
            direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupUpdateInput extends GPermissionGroupUpdateInput {
  @override
  final BuiltList<GPermissionEnum> addPermissions;
  @override
  final BuiltList<String> addUsers;
  @override
  final String name;
  @override
  final BuiltList<GPermissionEnum> removePermissions;
  @override
  final BuiltList<String> removeUsers;

  factory _$GPermissionGroupUpdateInput(
          [void Function(GPermissionGroupUpdateInputBuilder) updates]) =>
      (new GPermissionGroupUpdateInputBuilder()..update(updates)).build();

  _$GPermissionGroupUpdateInput._(
      {this.addPermissions,
      this.addUsers,
      this.name,
      this.removePermissions,
      this.removeUsers})
      : super._() {
    if (addPermissions == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupUpdateInput', 'addPermissions');
    }
    if (addUsers == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupUpdateInput', 'addUsers');
    }
    if (removePermissions == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupUpdateInput', 'removePermissions');
    }
    if (removeUsers == null) {
      throw new BuiltValueNullFieldError(
          'GPermissionGroupUpdateInput', 'removeUsers');
    }
  }

  @override
  GPermissionGroupUpdateInput rebuild(
          void Function(GPermissionGroupUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupUpdateInputBuilder toBuilder() =>
      new GPermissionGroupUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupUpdateInput &&
        addPermissions == other.addPermissions &&
        addUsers == other.addUsers &&
        name == other.name &&
        removePermissions == other.removePermissions &&
        removeUsers == other.removeUsers;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, addPermissions.hashCode), addUsers.hashCode),
                name.hashCode),
            removePermissions.hashCode),
        removeUsers.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPermissionGroupUpdateInput')
          ..add('addPermissions', addPermissions)
          ..add('addUsers', addUsers)
          ..add('name', name)
          ..add('removePermissions', removePermissions)
          ..add('removeUsers', removeUsers))
        .toString();
  }
}

class GPermissionGroupUpdateInputBuilder
    implements
        Builder<GPermissionGroupUpdateInput,
            GPermissionGroupUpdateInputBuilder> {
  _$GPermissionGroupUpdateInput _$v;

  ListBuilder<GPermissionEnum> _addPermissions;
  ListBuilder<GPermissionEnum> get addPermissions =>
      _$this._addPermissions ??= new ListBuilder<GPermissionEnum>();
  set addPermissions(ListBuilder<GPermissionEnum> addPermissions) =>
      _$this._addPermissions = addPermissions;

  ListBuilder<String> _addUsers;
  ListBuilder<String> get addUsers =>
      _$this._addUsers ??= new ListBuilder<String>();
  set addUsers(ListBuilder<String> addUsers) => _$this._addUsers = addUsers;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  ListBuilder<GPermissionEnum> _removePermissions;
  ListBuilder<GPermissionEnum> get removePermissions =>
      _$this._removePermissions ??= new ListBuilder<GPermissionEnum>();
  set removePermissions(ListBuilder<GPermissionEnum> removePermissions) =>
      _$this._removePermissions = removePermissions;

  ListBuilder<String> _removeUsers;
  ListBuilder<String> get removeUsers =>
      _$this._removeUsers ??= new ListBuilder<String>();
  set removeUsers(ListBuilder<String> removeUsers) =>
      _$this._removeUsers = removeUsers;

  GPermissionGroupUpdateInputBuilder();

  GPermissionGroupUpdateInputBuilder get _$this {
    if (_$v != null) {
      _addPermissions = _$v.addPermissions?.toBuilder();
      _addUsers = _$v.addUsers?.toBuilder();
      _name = _$v.name;
      _removePermissions = _$v.removePermissions?.toBuilder();
      _removeUsers = _$v.removeUsers?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPermissionGroupUpdateInput;
  }

  @override
  void update(void Function(GPermissionGroupUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPermissionGroupUpdateInput build() {
    _$GPermissionGroupUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GPermissionGroupUpdateInput._(
              addPermissions: addPermissions.build(),
              addUsers: addUsers.build(),
              name: name,
              removePermissions: removePermissions.build(),
              removeUsers: removeUsers.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'addPermissions';
        addPermissions.build();
        _$failedField = 'addUsers';
        addUsers.build();

        _$failedField = 'removePermissions';
        removePermissions.build();
        _$failedField = 'removeUsers';
        removeUsers.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GPermissionGroupUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPluginFilterInput extends GPluginFilterInput {
  @override
  final bool active;
  @override
  final String search;

  factory _$GPluginFilterInput(
          [void Function(GPluginFilterInputBuilder) updates]) =>
      (new GPluginFilterInputBuilder()..update(updates)).build();

  _$GPluginFilterInput._({this.active, this.search}) : super._();

  @override
  GPluginFilterInput rebuild(
          void Function(GPluginFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPluginFilterInputBuilder toBuilder() =>
      new GPluginFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPluginFilterInput &&
        active == other.active &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, active.hashCode), search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPluginFilterInput')
          ..add('active', active)
          ..add('search', search))
        .toString();
  }
}

class GPluginFilterInputBuilder
    implements Builder<GPluginFilterInput, GPluginFilterInputBuilder> {
  _$GPluginFilterInput _$v;

  bool _active;
  bool get active => _$this._active;
  set active(bool active) => _$this._active = active;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GPluginFilterInputBuilder();

  GPluginFilterInputBuilder get _$this {
    if (_$v != null) {
      _active = _$v.active;
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPluginFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPluginFilterInput;
  }

  @override
  void update(void Function(GPluginFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPluginFilterInput build() {
    final _$result =
        _$v ?? new _$GPluginFilterInput._(active: active, search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GPluginSortingInput extends GPluginSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GPluginSortField field;

  factory _$GPluginSortingInput(
          [void Function(GPluginSortingInputBuilder) updates]) =>
      (new GPluginSortingInputBuilder()..update(updates)).build();

  _$GPluginSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GPluginSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GPluginSortingInput', 'field');
    }
  }

  @override
  GPluginSortingInput rebuild(
          void Function(GPluginSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPluginSortingInputBuilder toBuilder() =>
      new GPluginSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPluginSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPluginSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GPluginSortingInputBuilder
    implements Builder<GPluginSortingInput, GPluginSortingInputBuilder> {
  _$GPluginSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GPluginSortField _field;
  GPluginSortField get field => _$this._field;
  set field(GPluginSortField field) => _$this._field = field;

  GPluginSortingInputBuilder();

  GPluginSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPluginSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPluginSortingInput;
  }

  @override
  void update(void Function(GPluginSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPluginSortingInput build() {
    final _$result =
        _$v ?? new _$GPluginSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GPluginUpdateInput extends GPluginUpdateInput {
  @override
  final bool active;
  @override
  final BuiltList<GConfigurationItemInput> configuration;

  factory _$GPluginUpdateInput(
          [void Function(GPluginUpdateInputBuilder) updates]) =>
      (new GPluginUpdateInputBuilder()..update(updates)).build();

  _$GPluginUpdateInput._({this.active, this.configuration}) : super._();

  @override
  GPluginUpdateInput rebuild(
          void Function(GPluginUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPluginUpdateInputBuilder toBuilder() =>
      new GPluginUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPluginUpdateInput &&
        active == other.active &&
        configuration == other.configuration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, active.hashCode), configuration.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPluginUpdateInput')
          ..add('active', active)
          ..add('configuration', configuration))
        .toString();
  }
}

class GPluginUpdateInputBuilder
    implements Builder<GPluginUpdateInput, GPluginUpdateInputBuilder> {
  _$GPluginUpdateInput _$v;

  bool _active;
  bool get active => _$this._active;
  set active(bool active) => _$this._active = active;

  ListBuilder<GConfigurationItemInput> _configuration;
  ListBuilder<GConfigurationItemInput> get configuration =>
      _$this._configuration ??= new ListBuilder<GConfigurationItemInput>();
  set configuration(ListBuilder<GConfigurationItemInput> configuration) =>
      _$this._configuration = configuration;

  GPluginUpdateInputBuilder();

  GPluginUpdateInputBuilder get _$this {
    if (_$v != null) {
      _active = _$v.active;
      _configuration = _$v.configuration?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPluginUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPluginUpdateInput;
  }

  @override
  void update(void Function(GPluginUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPluginUpdateInput build() {
    _$GPluginUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GPluginUpdateInput._(
              active: active, configuration: _configuration?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'configuration';
        _configuration?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GPluginUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPriceRangeInput extends GPriceRangeInput {
  @override
  final double gte;
  @override
  final double lte;

  factory _$GPriceRangeInput(
          [void Function(GPriceRangeInputBuilder) updates]) =>
      (new GPriceRangeInputBuilder()..update(updates)).build();

  _$GPriceRangeInput._({this.gte, this.lte}) : super._();

  @override
  GPriceRangeInput rebuild(void Function(GPriceRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPriceRangeInputBuilder toBuilder() =>
      new GPriceRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPriceRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GPriceRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GPriceRangeInputBuilder
    implements Builder<GPriceRangeInput, GPriceRangeInputBuilder> {
  _$GPriceRangeInput _$v;

  double _gte;
  double get gte => _$this._gte;
  set gte(double gte) => _$this._gte = gte;

  double _lte;
  double get lte => _$this._lte;
  set lte(double lte) => _$this._lte = lte;

  GPriceRangeInputBuilder();

  GPriceRangeInputBuilder get _$this {
    if (_$v != null) {
      _gte = _$v.gte;
      _lte = _$v.lte;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPriceRangeInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GPriceRangeInput;
  }

  @override
  void update(void Function(GPriceRangeInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GPriceRangeInput build() {
    final _$result = _$v ?? new _$GPriceRangeInput._(gte: gte, lte: lte);
    replace(_$result);
    return _$result;
  }
}

class _$GProductCreateInput extends GProductCreateInput {
  @override
  final BuiltList<GAttributeValueInput> attributes;
  @override
  final GDate publicationDate;
  @override
  final String category;
  @override
  final bool chargeTaxes;
  @override
  final BuiltList<String> collections;
  @override
  final String description;
  @override
  final GJSONString descriptionJson;
  @override
  final bool isPublished;
  @override
  final String name;
  @override
  final String slug;
  @override
  final GDecimal basePrice;
  @override
  final String taxCode;
  @override
  final GSeoInput seo;
  @override
  final GWeightScalar weight;
  @override
  final String sku;
  @override
  final bool trackInventory;
  @override
  final String productType;
  @override
  final BuiltList<GStockInput> stocks;

  factory _$GProductCreateInput(
          [void Function(GProductCreateInputBuilder) updates]) =>
      (new GProductCreateInputBuilder()..update(updates)).build();

  _$GProductCreateInput._(
      {this.attributes,
      this.publicationDate,
      this.category,
      this.chargeTaxes,
      this.collections,
      this.description,
      this.descriptionJson,
      this.isPublished,
      this.name,
      this.slug,
      this.basePrice,
      this.taxCode,
      this.seo,
      this.weight,
      this.sku,
      this.trackInventory,
      this.productType,
      this.stocks})
      : super._() {
    if (productType == null) {
      throw new BuiltValueNullFieldError('GProductCreateInput', 'productType');
    }
    if (stocks == null) {
      throw new BuiltValueNullFieldError('GProductCreateInput', 'stocks');
    }
  }

  @override
  GProductCreateInput rebuild(
          void Function(GProductCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductCreateInputBuilder toBuilder() =>
      new GProductCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductCreateInput &&
        attributes == other.attributes &&
        publicationDate == other.publicationDate &&
        category == other.category &&
        chargeTaxes == other.chargeTaxes &&
        collections == other.collections &&
        description == other.description &&
        descriptionJson == other.descriptionJson &&
        isPublished == other.isPublished &&
        name == other.name &&
        slug == other.slug &&
        basePrice == other.basePrice &&
        taxCode == other.taxCode &&
        seo == other.seo &&
        weight == other.weight &&
        sku == other.sku &&
        trackInventory == other.trackInventory &&
        productType == other.productType &&
        stocks == other.stocks;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            0,
                                                                            attributes
                                                                                .hashCode),
                                                                        publicationDate
                                                                            .hashCode),
                                                                    category
                                                                        .hashCode),
                                                                chargeTaxes
                                                                    .hashCode),
                                                            collections
                                                                .hashCode),
                                                        description.hashCode),
                                                    descriptionJson.hashCode),
                                                isPublished.hashCode),
                                            name.hashCode),
                                        slug.hashCode),
                                    basePrice.hashCode),
                                taxCode.hashCode),
                            seo.hashCode),
                        weight.hashCode),
                    sku.hashCode),
                trackInventory.hashCode),
            productType.hashCode),
        stocks.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductCreateInput')
          ..add('attributes', attributes)
          ..add('publicationDate', publicationDate)
          ..add('category', category)
          ..add('chargeTaxes', chargeTaxes)
          ..add('collections', collections)
          ..add('description', description)
          ..add('descriptionJson', descriptionJson)
          ..add('isPublished', isPublished)
          ..add('name', name)
          ..add('slug', slug)
          ..add('basePrice', basePrice)
          ..add('taxCode', taxCode)
          ..add('seo', seo)
          ..add('weight', weight)
          ..add('sku', sku)
          ..add('trackInventory', trackInventory)
          ..add('productType', productType)
          ..add('stocks', stocks))
        .toString();
  }
}

class GProductCreateInputBuilder
    implements Builder<GProductCreateInput, GProductCreateInputBuilder> {
  _$GProductCreateInput _$v;

  ListBuilder<GAttributeValueInput> _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput> attributes) =>
      _$this._attributes = attributes;

  GDateBuilder _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder publicationDate) =>
      _$this._publicationDate = publicationDate;

  String _category;
  String get category => _$this._category;
  set category(String category) => _$this._category = category;

  bool _chargeTaxes;
  bool get chargeTaxes => _$this._chargeTaxes;
  set chargeTaxes(bool chargeTaxes) => _$this._chargeTaxes = chargeTaxes;

  ListBuilder<String> _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String> collections) =>
      _$this._collections = collections;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GJSONStringBuilder _descriptionJson;
  GJSONStringBuilder get descriptionJson =>
      _$this._descriptionJson ??= new GJSONStringBuilder();
  set descriptionJson(GJSONStringBuilder descriptionJson) =>
      _$this._descriptionJson = descriptionJson;

  bool _isPublished;
  bool get isPublished => _$this._isPublished;
  set isPublished(bool isPublished) => _$this._isPublished = isPublished;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  GDecimalBuilder _basePrice;
  GDecimalBuilder get basePrice => _$this._basePrice ??= new GDecimalBuilder();
  set basePrice(GDecimalBuilder basePrice) => _$this._basePrice = basePrice;

  String _taxCode;
  String get taxCode => _$this._taxCode;
  set taxCode(String taxCode) => _$this._taxCode = taxCode;

  GSeoInputBuilder _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder seo) => _$this._seo = seo;

  GWeightScalarBuilder _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder weight) => _$this._weight = weight;

  String _sku;
  String get sku => _$this._sku;
  set sku(String sku) => _$this._sku = sku;

  bool _trackInventory;
  bool get trackInventory => _$this._trackInventory;
  set trackInventory(bool trackInventory) =>
      _$this._trackInventory = trackInventory;

  String _productType;
  String get productType => _$this._productType;
  set productType(String productType) => _$this._productType = productType;

  ListBuilder<GStockInput> _stocks;
  ListBuilder<GStockInput> get stocks =>
      _$this._stocks ??= new ListBuilder<GStockInput>();
  set stocks(ListBuilder<GStockInput> stocks) => _$this._stocks = stocks;

  GProductCreateInputBuilder();

  GProductCreateInputBuilder get _$this {
    if (_$v != null) {
      _attributes = _$v.attributes?.toBuilder();
      _publicationDate = _$v.publicationDate?.toBuilder();
      _category = _$v.category;
      _chargeTaxes = _$v.chargeTaxes;
      _collections = _$v.collections?.toBuilder();
      _description = _$v.description;
      _descriptionJson = _$v.descriptionJson?.toBuilder();
      _isPublished = _$v.isPublished;
      _name = _$v.name;
      _slug = _$v.slug;
      _basePrice = _$v.basePrice?.toBuilder();
      _taxCode = _$v.taxCode;
      _seo = _$v.seo?.toBuilder();
      _weight = _$v.weight?.toBuilder();
      _sku = _$v.sku;
      _trackInventory = _$v.trackInventory;
      _productType = _$v.productType;
      _stocks = _$v.stocks?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductCreateInput;
  }

  @override
  void update(void Function(GProductCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductCreateInput build() {
    _$GProductCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductCreateInput._(
              attributes: _attributes?.build(),
              publicationDate: _publicationDate?.build(),
              category: category,
              chargeTaxes: chargeTaxes,
              collections: _collections?.build(),
              description: description,
              descriptionJson: _descriptionJson?.build(),
              isPublished: isPublished,
              name: name,
              slug: slug,
              basePrice: _basePrice?.build(),
              taxCode: taxCode,
              seo: _seo?.build(),
              weight: _weight?.build(),
              sku: sku,
              trackInventory: trackInventory,
              productType: productType,
              stocks: stocks.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();
        _$failedField = 'publicationDate';
        _publicationDate?.build();

        _$failedField = 'collections';
        _collections?.build();

        _$failedField = 'descriptionJson';
        _descriptionJson?.build();

        _$failedField = 'basePrice';
        _basePrice?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'weight';
        _weight?.build();

        _$failedField = 'stocks';
        stocks.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductFilterInput extends GProductFilterInput {
  @override
  final bool isPublished;
  @override
  final BuiltList<String> collections;
  @override
  final BuiltList<String> categories;
  @override
  final bool hasCategory;
  @override
  final GPriceRangeInput price;
  @override
  final BuiltList<GAttributeInput> attributes;
  @override
  final GStockAvailability stockAvailability;
  @override
  final String productType;
  @override
  final GProductStockFilterInput stocks;
  @override
  final String search;
  @override
  final GPriceRangeInput minimalPrice;
  @override
  final BuiltList<String> productTypes;

  factory _$GProductFilterInput(
          [void Function(GProductFilterInputBuilder) updates]) =>
      (new GProductFilterInputBuilder()..update(updates)).build();

  _$GProductFilterInput._(
      {this.isPublished,
      this.collections,
      this.categories,
      this.hasCategory,
      this.price,
      this.attributes,
      this.stockAvailability,
      this.productType,
      this.stocks,
      this.search,
      this.minimalPrice,
      this.productTypes})
      : super._();

  @override
  GProductFilterInput rebuild(
          void Function(GProductFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductFilterInputBuilder toBuilder() =>
      new GProductFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductFilterInput &&
        isPublished == other.isPublished &&
        collections == other.collections &&
        categories == other.categories &&
        hasCategory == other.hasCategory &&
        price == other.price &&
        attributes == other.attributes &&
        stockAvailability == other.stockAvailability &&
        productType == other.productType &&
        stocks == other.stocks &&
        search == other.search &&
        minimalPrice == other.minimalPrice &&
        productTypes == other.productTypes;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, isPublished.hashCode),
                                                collections.hashCode),
                                            categories.hashCode),
                                        hasCategory.hashCode),
                                    price.hashCode),
                                attributes.hashCode),
                            stockAvailability.hashCode),
                        productType.hashCode),
                    stocks.hashCode),
                search.hashCode),
            minimalPrice.hashCode),
        productTypes.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductFilterInput')
          ..add('isPublished', isPublished)
          ..add('collections', collections)
          ..add('categories', categories)
          ..add('hasCategory', hasCategory)
          ..add('price', price)
          ..add('attributes', attributes)
          ..add('stockAvailability', stockAvailability)
          ..add('productType', productType)
          ..add('stocks', stocks)
          ..add('search', search)
          ..add('minimalPrice', minimalPrice)
          ..add('productTypes', productTypes))
        .toString();
  }
}

class GProductFilterInputBuilder
    implements Builder<GProductFilterInput, GProductFilterInputBuilder> {
  _$GProductFilterInput _$v;

  bool _isPublished;
  bool get isPublished => _$this._isPublished;
  set isPublished(bool isPublished) => _$this._isPublished = isPublished;

  ListBuilder<String> _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String> collections) =>
      _$this._collections = collections;

  ListBuilder<String> _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String> categories) =>
      _$this._categories = categories;

  bool _hasCategory;
  bool get hasCategory => _$this._hasCategory;
  set hasCategory(bool hasCategory) => _$this._hasCategory = hasCategory;

  GPriceRangeInputBuilder _price;
  GPriceRangeInputBuilder get price =>
      _$this._price ??= new GPriceRangeInputBuilder();
  set price(GPriceRangeInputBuilder price) => _$this._price = price;

  ListBuilder<GAttributeInput> _attributes;
  ListBuilder<GAttributeInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeInput>();
  set attributes(ListBuilder<GAttributeInput> attributes) =>
      _$this._attributes = attributes;

  GStockAvailability _stockAvailability;
  GStockAvailability get stockAvailability => _$this._stockAvailability;
  set stockAvailability(GStockAvailability stockAvailability) =>
      _$this._stockAvailability = stockAvailability;

  String _productType;
  String get productType => _$this._productType;
  set productType(String productType) => _$this._productType = productType;

  GProductStockFilterInputBuilder _stocks;
  GProductStockFilterInputBuilder get stocks =>
      _$this._stocks ??= new GProductStockFilterInputBuilder();
  set stocks(GProductStockFilterInputBuilder stocks) => _$this._stocks = stocks;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GPriceRangeInputBuilder _minimalPrice;
  GPriceRangeInputBuilder get minimalPrice =>
      _$this._minimalPrice ??= new GPriceRangeInputBuilder();
  set minimalPrice(GPriceRangeInputBuilder minimalPrice) =>
      _$this._minimalPrice = minimalPrice;

  ListBuilder<String> _productTypes;
  ListBuilder<String> get productTypes =>
      _$this._productTypes ??= new ListBuilder<String>();
  set productTypes(ListBuilder<String> productTypes) =>
      _$this._productTypes = productTypes;

  GProductFilterInputBuilder();

  GProductFilterInputBuilder get _$this {
    if (_$v != null) {
      _isPublished = _$v.isPublished;
      _collections = _$v.collections?.toBuilder();
      _categories = _$v.categories?.toBuilder();
      _hasCategory = _$v.hasCategory;
      _price = _$v.price?.toBuilder();
      _attributes = _$v.attributes?.toBuilder();
      _stockAvailability = _$v.stockAvailability;
      _productType = _$v.productType;
      _stocks = _$v.stocks?.toBuilder();
      _search = _$v.search;
      _minimalPrice = _$v.minimalPrice?.toBuilder();
      _productTypes = _$v.productTypes?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductFilterInput;
  }

  @override
  void update(void Function(GProductFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductFilterInput build() {
    _$GProductFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GProductFilterInput._(
              isPublished: isPublished,
              collections: _collections?.build(),
              categories: _categories?.build(),
              hasCategory: hasCategory,
              price: _price?.build(),
              attributes: _attributes?.build(),
              stockAvailability: stockAvailability,
              productType: productType,
              stocks: _stocks?.build(),
              search: search,
              minimalPrice: _minimalPrice?.build(),
              productTypes: _productTypes?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'categories';
        _categories?.build();

        _$failedField = 'price';
        _price?.build();
        _$failedField = 'attributes';
        _attributes?.build();

        _$failedField = 'stocks';
        _stocks?.build();

        _$failedField = 'minimalPrice';
        _minimalPrice?.build();
        _$failedField = 'productTypes';
        _productTypes?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductImageCreateInput extends GProductImageCreateInput {
  @override
  final String alt;
  @override
  final GUpload image;
  @override
  final String product;

  factory _$GProductImageCreateInput(
          [void Function(GProductImageCreateInputBuilder) updates]) =>
      (new GProductImageCreateInputBuilder()..update(updates)).build();

  _$GProductImageCreateInput._({this.alt, this.image, this.product})
      : super._() {
    if (image == null) {
      throw new BuiltValueNullFieldError('GProductImageCreateInput', 'image');
    }
    if (product == null) {
      throw new BuiltValueNullFieldError('GProductImageCreateInput', 'product');
    }
  }

  @override
  GProductImageCreateInput rebuild(
          void Function(GProductImageCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductImageCreateInputBuilder toBuilder() =>
      new GProductImageCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductImageCreateInput &&
        alt == other.alt &&
        image == other.image &&
        product == other.product;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, alt.hashCode), image.hashCode), product.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductImageCreateInput')
          ..add('alt', alt)
          ..add('image', image)
          ..add('product', product))
        .toString();
  }
}

class GProductImageCreateInputBuilder
    implements
        Builder<GProductImageCreateInput, GProductImageCreateInputBuilder> {
  _$GProductImageCreateInput _$v;

  String _alt;
  String get alt => _$this._alt;
  set alt(String alt) => _$this._alt = alt;

  GUploadBuilder _image;
  GUploadBuilder get image => _$this._image ??= new GUploadBuilder();
  set image(GUploadBuilder image) => _$this._image = image;

  String _product;
  String get product => _$this._product;
  set product(String product) => _$this._product = product;

  GProductImageCreateInputBuilder();

  GProductImageCreateInputBuilder get _$this {
    if (_$v != null) {
      _alt = _$v.alt;
      _image = _$v.image?.toBuilder();
      _product = _$v.product;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductImageCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductImageCreateInput;
  }

  @override
  void update(void Function(GProductImageCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductImageCreateInput build() {
    _$GProductImageCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductImageCreateInput._(
              alt: alt, image: image.build(), product: product);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'image';
        image.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductImageCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductImageUpdateInput extends GProductImageUpdateInput {
  @override
  final String alt;

  factory _$GProductImageUpdateInput(
          [void Function(GProductImageUpdateInputBuilder) updates]) =>
      (new GProductImageUpdateInputBuilder()..update(updates)).build();

  _$GProductImageUpdateInput._({this.alt}) : super._();

  @override
  GProductImageUpdateInput rebuild(
          void Function(GProductImageUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductImageUpdateInputBuilder toBuilder() =>
      new GProductImageUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductImageUpdateInput && alt == other.alt;
  }

  @override
  int get hashCode {
    return $jf($jc(0, alt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductImageUpdateInput')
          ..add('alt', alt))
        .toString();
  }
}

class GProductImageUpdateInputBuilder
    implements
        Builder<GProductImageUpdateInput, GProductImageUpdateInputBuilder> {
  _$GProductImageUpdateInput _$v;

  String _alt;
  String get alt => _$this._alt;
  set alt(String alt) => _$this._alt = alt;

  GProductImageUpdateInputBuilder();

  GProductImageUpdateInputBuilder get _$this {
    if (_$v != null) {
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductImageUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductImageUpdateInput;
  }

  @override
  void update(void Function(GProductImageUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductImageUpdateInput build() {
    final _$result = _$v ?? new _$GProductImageUpdateInput._(alt: alt);
    replace(_$result);
    return _$result;
  }
}

class _$GProductInput extends GProductInput {
  @override
  final BuiltList<GAttributeValueInput> attributes;
  @override
  final GDate publicationDate;
  @override
  final String category;
  @override
  final bool chargeTaxes;
  @override
  final BuiltList<String> collections;
  @override
  final String description;
  @override
  final GJSONString descriptionJson;
  @override
  final bool isPublished;
  @override
  final String name;
  @override
  final String slug;
  @override
  final GDecimal basePrice;
  @override
  final String taxCode;
  @override
  final GSeoInput seo;
  @override
  final GWeightScalar weight;
  @override
  final String sku;
  @override
  final bool trackInventory;

  factory _$GProductInput([void Function(GProductInputBuilder) updates]) =>
      (new GProductInputBuilder()..update(updates)).build();

  _$GProductInput._(
      {this.attributes,
      this.publicationDate,
      this.category,
      this.chargeTaxes,
      this.collections,
      this.description,
      this.descriptionJson,
      this.isPublished,
      this.name,
      this.slug,
      this.basePrice,
      this.taxCode,
      this.seo,
      this.weight,
      this.sku,
      this.trackInventory})
      : super._();

  @override
  GProductInput rebuild(void Function(GProductInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductInputBuilder toBuilder() => new GProductInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductInput &&
        attributes == other.attributes &&
        publicationDate == other.publicationDate &&
        category == other.category &&
        chargeTaxes == other.chargeTaxes &&
        collections == other.collections &&
        description == other.description &&
        descriptionJson == other.descriptionJson &&
        isPublished == other.isPublished &&
        name == other.name &&
        slug == other.slug &&
        basePrice == other.basePrice &&
        taxCode == other.taxCode &&
        seo == other.seo &&
        weight == other.weight &&
        sku == other.sku &&
        trackInventory == other.trackInventory;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    attributes
                                                                        .hashCode),
                                                                publicationDate
                                                                    .hashCode),
                                                            category.hashCode),
                                                        chargeTaxes.hashCode),
                                                    collections.hashCode),
                                                description.hashCode),
                                            descriptionJson.hashCode),
                                        isPublished.hashCode),
                                    name.hashCode),
                                slug.hashCode),
                            basePrice.hashCode),
                        taxCode.hashCode),
                    seo.hashCode),
                weight.hashCode),
            sku.hashCode),
        trackInventory.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductInput')
          ..add('attributes', attributes)
          ..add('publicationDate', publicationDate)
          ..add('category', category)
          ..add('chargeTaxes', chargeTaxes)
          ..add('collections', collections)
          ..add('description', description)
          ..add('descriptionJson', descriptionJson)
          ..add('isPublished', isPublished)
          ..add('name', name)
          ..add('slug', slug)
          ..add('basePrice', basePrice)
          ..add('taxCode', taxCode)
          ..add('seo', seo)
          ..add('weight', weight)
          ..add('sku', sku)
          ..add('trackInventory', trackInventory))
        .toString();
  }
}

class GProductInputBuilder
    implements Builder<GProductInput, GProductInputBuilder> {
  _$GProductInput _$v;

  ListBuilder<GAttributeValueInput> _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput> attributes) =>
      _$this._attributes = attributes;

  GDateBuilder _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder publicationDate) =>
      _$this._publicationDate = publicationDate;

  String _category;
  String get category => _$this._category;
  set category(String category) => _$this._category = category;

  bool _chargeTaxes;
  bool get chargeTaxes => _$this._chargeTaxes;
  set chargeTaxes(bool chargeTaxes) => _$this._chargeTaxes = chargeTaxes;

  ListBuilder<String> _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String> collections) =>
      _$this._collections = collections;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GJSONStringBuilder _descriptionJson;
  GJSONStringBuilder get descriptionJson =>
      _$this._descriptionJson ??= new GJSONStringBuilder();
  set descriptionJson(GJSONStringBuilder descriptionJson) =>
      _$this._descriptionJson = descriptionJson;

  bool _isPublished;
  bool get isPublished => _$this._isPublished;
  set isPublished(bool isPublished) => _$this._isPublished = isPublished;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  GDecimalBuilder _basePrice;
  GDecimalBuilder get basePrice => _$this._basePrice ??= new GDecimalBuilder();
  set basePrice(GDecimalBuilder basePrice) => _$this._basePrice = basePrice;

  String _taxCode;
  String get taxCode => _$this._taxCode;
  set taxCode(String taxCode) => _$this._taxCode = taxCode;

  GSeoInputBuilder _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder seo) => _$this._seo = seo;

  GWeightScalarBuilder _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder weight) => _$this._weight = weight;

  String _sku;
  String get sku => _$this._sku;
  set sku(String sku) => _$this._sku = sku;

  bool _trackInventory;
  bool get trackInventory => _$this._trackInventory;
  set trackInventory(bool trackInventory) =>
      _$this._trackInventory = trackInventory;

  GProductInputBuilder();

  GProductInputBuilder get _$this {
    if (_$v != null) {
      _attributes = _$v.attributes?.toBuilder();
      _publicationDate = _$v.publicationDate?.toBuilder();
      _category = _$v.category;
      _chargeTaxes = _$v.chargeTaxes;
      _collections = _$v.collections?.toBuilder();
      _description = _$v.description;
      _descriptionJson = _$v.descriptionJson?.toBuilder();
      _isPublished = _$v.isPublished;
      _name = _$v.name;
      _slug = _$v.slug;
      _basePrice = _$v.basePrice?.toBuilder();
      _taxCode = _$v.taxCode;
      _seo = _$v.seo?.toBuilder();
      _weight = _$v.weight?.toBuilder();
      _sku = _$v.sku;
      _trackInventory = _$v.trackInventory;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductInput;
  }

  @override
  void update(void Function(GProductInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductInput build() {
    _$GProductInput _$result;
    try {
      _$result = _$v ??
          new _$GProductInput._(
              attributes: _attributes?.build(),
              publicationDate: _publicationDate?.build(),
              category: category,
              chargeTaxes: chargeTaxes,
              collections: _collections?.build(),
              description: description,
              descriptionJson: _descriptionJson?.build(),
              isPublished: isPublished,
              name: name,
              slug: slug,
              basePrice: _basePrice?.build(),
              taxCode: taxCode,
              seo: _seo?.build(),
              weight: _weight?.build(),
              sku: sku,
              trackInventory: trackInventory);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();
        _$failedField = 'publicationDate';
        _publicationDate?.build();

        _$failedField = 'collections';
        _collections?.build();

        _$failedField = 'descriptionJson';
        _descriptionJson?.build();

        _$failedField = 'basePrice';
        _basePrice?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'weight';
        _weight?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductOrder extends GProductOrder {
  @override
  final GOrderDirection direction;
  @override
  final String attributeId;
  @override
  final GProductOrderField field;

  factory _$GProductOrder([void Function(GProductOrderBuilder) updates]) =>
      (new GProductOrderBuilder()..update(updates)).build();

  _$GProductOrder._({this.direction, this.attributeId, this.field})
      : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GProductOrder', 'direction');
    }
  }

  @override
  GProductOrder rebuild(void Function(GProductOrderBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductOrderBuilder toBuilder() => new GProductOrderBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductOrder &&
        direction == other.direction &&
        attributeId == other.attributeId &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, direction.hashCode), attributeId.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductOrder')
          ..add('direction', direction)
          ..add('attributeId', attributeId)
          ..add('field', field))
        .toString();
  }
}

class GProductOrderBuilder
    implements Builder<GProductOrder, GProductOrderBuilder> {
  _$GProductOrder _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  String _attributeId;
  String get attributeId => _$this._attributeId;
  set attributeId(String attributeId) => _$this._attributeId = attributeId;

  GProductOrderField _field;
  GProductOrderField get field => _$this._field;
  set field(GProductOrderField field) => _$this._field = field;

  GProductOrderBuilder();

  GProductOrderBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _attributeId = _$v.attributeId;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductOrder other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductOrder;
  }

  @override
  void update(void Function(GProductOrderBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductOrder build() {
    final _$result = _$v ??
        new _$GProductOrder._(
            direction: direction, attributeId: attributeId, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GProductStockFilterInput extends GProductStockFilterInput {
  @override
  final BuiltList<String> warehouseIds;
  @override
  final GIntRangeInput quantity;

  factory _$GProductStockFilterInput(
          [void Function(GProductStockFilterInputBuilder) updates]) =>
      (new GProductStockFilterInputBuilder()..update(updates)).build();

  _$GProductStockFilterInput._({this.warehouseIds, this.quantity}) : super._() {
    if (warehouseIds == null) {
      throw new BuiltValueNullFieldError(
          'GProductStockFilterInput', 'warehouseIds');
    }
  }

  @override
  GProductStockFilterInput rebuild(
          void Function(GProductStockFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductStockFilterInputBuilder toBuilder() =>
      new GProductStockFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductStockFilterInput &&
        warehouseIds == other.warehouseIds &&
        quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, warehouseIds.hashCode), quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductStockFilterInput')
          ..add('warehouseIds', warehouseIds)
          ..add('quantity', quantity))
        .toString();
  }
}

class GProductStockFilterInputBuilder
    implements
        Builder<GProductStockFilterInput, GProductStockFilterInputBuilder> {
  _$GProductStockFilterInput _$v;

  ListBuilder<String> _warehouseIds;
  ListBuilder<String> get warehouseIds =>
      _$this._warehouseIds ??= new ListBuilder<String>();
  set warehouseIds(ListBuilder<String> warehouseIds) =>
      _$this._warehouseIds = warehouseIds;

  GIntRangeInputBuilder _quantity;
  GIntRangeInputBuilder get quantity =>
      _$this._quantity ??= new GIntRangeInputBuilder();
  set quantity(GIntRangeInputBuilder quantity) => _$this._quantity = quantity;

  GProductStockFilterInputBuilder();

  GProductStockFilterInputBuilder get _$this {
    if (_$v != null) {
      _warehouseIds = _$v.warehouseIds?.toBuilder();
      _quantity = _$v.quantity?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductStockFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductStockFilterInput;
  }

  @override
  void update(void Function(GProductStockFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductStockFilterInput build() {
    _$GProductStockFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GProductStockFilterInput._(
              warehouseIds: warehouseIds.build(), quantity: _quantity?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'warehouseIds';
        warehouseIds.build();
        _$failedField = 'quantity';
        _quantity?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductStockFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductTypeFilterInput extends GProductTypeFilterInput {
  @override
  final String search;
  @override
  final GProductTypeConfigurable configurable;
  @override
  final GProductTypeEnum productType;
  @override
  final BuiltList<String> ids;

  factory _$GProductTypeFilterInput(
          [void Function(GProductTypeFilterInputBuilder) updates]) =>
      (new GProductTypeFilterInputBuilder()..update(updates)).build();

  _$GProductTypeFilterInput._(
      {this.search, this.configurable, this.productType, this.ids})
      : super._();

  @override
  GProductTypeFilterInput rebuild(
          void Function(GProductTypeFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductTypeFilterInputBuilder toBuilder() =>
      new GProductTypeFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductTypeFilterInput &&
        search == other.search &&
        configurable == other.configurable &&
        productType == other.productType &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, search.hashCode), configurable.hashCode),
            productType.hashCode),
        ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductTypeFilterInput')
          ..add('search', search)
          ..add('configurable', configurable)
          ..add('productType', productType)
          ..add('ids', ids))
        .toString();
  }
}

class GProductTypeFilterInputBuilder
    implements
        Builder<GProductTypeFilterInput, GProductTypeFilterInputBuilder> {
  _$GProductTypeFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GProductTypeConfigurable _configurable;
  GProductTypeConfigurable get configurable => _$this._configurable;
  set configurable(GProductTypeConfigurable configurable) =>
      _$this._configurable = configurable;

  GProductTypeEnum _productType;
  GProductTypeEnum get productType => _$this._productType;
  set productType(GProductTypeEnum productType) =>
      _$this._productType = productType;

  ListBuilder<String> _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String> ids) => _$this._ids = ids;

  GProductTypeFilterInputBuilder();

  GProductTypeFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _configurable = _$v.configurable;
      _productType = _$v.productType;
      _ids = _$v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductTypeFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductTypeFilterInput;
  }

  @override
  void update(void Function(GProductTypeFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductTypeFilterInput build() {
    _$GProductTypeFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GProductTypeFilterInput._(
              search: search,
              configurable: configurable,
              productType: productType,
              ids: _ids?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductTypeFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductTypeInput extends GProductTypeInput {
  @override
  final String name;
  @override
  final String slug;
  @override
  final bool hasVariants;
  @override
  final BuiltList<String> productAttributes;
  @override
  final BuiltList<String> variantAttributes;
  @override
  final bool isShippingRequired;
  @override
  final bool isDigital;
  @override
  final GWeightScalar weight;
  @override
  final String taxCode;

  factory _$GProductTypeInput(
          [void Function(GProductTypeInputBuilder) updates]) =>
      (new GProductTypeInputBuilder()..update(updates)).build();

  _$GProductTypeInput._(
      {this.name,
      this.slug,
      this.hasVariants,
      this.productAttributes,
      this.variantAttributes,
      this.isShippingRequired,
      this.isDigital,
      this.weight,
      this.taxCode})
      : super._();

  @override
  GProductTypeInput rebuild(void Function(GProductTypeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductTypeInputBuilder toBuilder() =>
      new GProductTypeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductTypeInput &&
        name == other.name &&
        slug == other.slug &&
        hasVariants == other.hasVariants &&
        productAttributes == other.productAttributes &&
        variantAttributes == other.variantAttributes &&
        isShippingRequired == other.isShippingRequired &&
        isDigital == other.isDigital &&
        weight == other.weight &&
        taxCode == other.taxCode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, name.hashCode), slug.hashCode),
                                hasVariants.hashCode),
                            productAttributes.hashCode),
                        variantAttributes.hashCode),
                    isShippingRequired.hashCode),
                isDigital.hashCode),
            weight.hashCode),
        taxCode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductTypeInput')
          ..add('name', name)
          ..add('slug', slug)
          ..add('hasVariants', hasVariants)
          ..add('productAttributes', productAttributes)
          ..add('variantAttributes', variantAttributes)
          ..add('isShippingRequired', isShippingRequired)
          ..add('isDigital', isDigital)
          ..add('weight', weight)
          ..add('taxCode', taxCode))
        .toString();
  }
}

class GProductTypeInputBuilder
    implements Builder<GProductTypeInput, GProductTypeInputBuilder> {
  _$GProductTypeInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  bool _hasVariants;
  bool get hasVariants => _$this._hasVariants;
  set hasVariants(bool hasVariants) => _$this._hasVariants = hasVariants;

  ListBuilder<String> _productAttributes;
  ListBuilder<String> get productAttributes =>
      _$this._productAttributes ??= new ListBuilder<String>();
  set productAttributes(ListBuilder<String> productAttributes) =>
      _$this._productAttributes = productAttributes;

  ListBuilder<String> _variantAttributes;
  ListBuilder<String> get variantAttributes =>
      _$this._variantAttributes ??= new ListBuilder<String>();
  set variantAttributes(ListBuilder<String> variantAttributes) =>
      _$this._variantAttributes = variantAttributes;

  bool _isShippingRequired;
  bool get isShippingRequired => _$this._isShippingRequired;
  set isShippingRequired(bool isShippingRequired) =>
      _$this._isShippingRequired = isShippingRequired;

  bool _isDigital;
  bool get isDigital => _$this._isDigital;
  set isDigital(bool isDigital) => _$this._isDigital = isDigital;

  GWeightScalarBuilder _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder weight) => _$this._weight = weight;

  String _taxCode;
  String get taxCode => _$this._taxCode;
  set taxCode(String taxCode) => _$this._taxCode = taxCode;

  GProductTypeInputBuilder();

  GProductTypeInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _slug = _$v.slug;
      _hasVariants = _$v.hasVariants;
      _productAttributes = _$v.productAttributes?.toBuilder();
      _variantAttributes = _$v.variantAttributes?.toBuilder();
      _isShippingRequired = _$v.isShippingRequired;
      _isDigital = _$v.isDigital;
      _weight = _$v.weight?.toBuilder();
      _taxCode = _$v.taxCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductTypeInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductTypeInput;
  }

  @override
  void update(void Function(GProductTypeInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductTypeInput build() {
    _$GProductTypeInput _$result;
    try {
      _$result = _$v ??
          new _$GProductTypeInput._(
              name: name,
              slug: slug,
              hasVariants: hasVariants,
              productAttributes: _productAttributes?.build(),
              variantAttributes: _variantAttributes?.build(),
              isShippingRequired: isShippingRequired,
              isDigital: isDigital,
              weight: _weight?.build(),
              taxCode: taxCode);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'productAttributes';
        _productAttributes?.build();
        _$failedField = 'variantAttributes';
        _variantAttributes?.build();

        _$failedField = 'weight';
        _weight?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductTypeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductTypeSortingInput extends GProductTypeSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GProductTypeSortField field;

  factory _$GProductTypeSortingInput(
          [void Function(GProductTypeSortingInputBuilder) updates]) =>
      (new GProductTypeSortingInputBuilder()..update(updates)).build();

  _$GProductTypeSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError(
          'GProductTypeSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GProductTypeSortingInput', 'field');
    }
  }

  @override
  GProductTypeSortingInput rebuild(
          void Function(GProductTypeSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductTypeSortingInputBuilder toBuilder() =>
      new GProductTypeSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductTypeSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductTypeSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GProductTypeSortingInputBuilder
    implements
        Builder<GProductTypeSortingInput, GProductTypeSortingInputBuilder> {
  _$GProductTypeSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GProductTypeSortField _field;
  GProductTypeSortField get field => _$this._field;
  set field(GProductTypeSortField field) => _$this._field = field;

  GProductTypeSortingInputBuilder();

  GProductTypeSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductTypeSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductTypeSortingInput;
  }

  @override
  void update(void Function(GProductTypeSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductTypeSortingInput build() {
    final _$result = _$v ??
        new _$GProductTypeSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantBulkCreateInput extends GProductVariantBulkCreateInput {
  @override
  final BuiltList<GAttributeValueInput> attributes;
  @override
  final GDecimal costPrice;
  @override
  final GDecimal priceOverride;
  @override
  final String sku;
  @override
  final bool trackInventory;
  @override
  final GWeightScalar weight;
  @override
  final BuiltList<GStockInput> stocks;

  factory _$GProductVariantBulkCreateInput(
          [void Function(GProductVariantBulkCreateInputBuilder) updates]) =>
      (new GProductVariantBulkCreateInputBuilder()..update(updates)).build();

  _$GProductVariantBulkCreateInput._(
      {this.attributes,
      this.costPrice,
      this.priceOverride,
      this.sku,
      this.trackInventory,
      this.weight,
      this.stocks})
      : super._() {
    if (sku == null) {
      throw new BuiltValueNullFieldError(
          'GProductVariantBulkCreateInput', 'sku');
    }
    if (stocks == null) {
      throw new BuiltValueNullFieldError(
          'GProductVariantBulkCreateInput', 'stocks');
    }
  }

  @override
  GProductVariantBulkCreateInput rebuild(
          void Function(GProductVariantBulkCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantBulkCreateInputBuilder toBuilder() =>
      new GProductVariantBulkCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantBulkCreateInput &&
        attributes == other.attributes &&
        costPrice == other.costPrice &&
        priceOverride == other.priceOverride &&
        sku == other.sku &&
        trackInventory == other.trackInventory &&
        weight == other.weight &&
        stocks == other.stocks;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, attributes.hashCode), costPrice.hashCode),
                        priceOverride.hashCode),
                    sku.hashCode),
                trackInventory.hashCode),
            weight.hashCode),
        stocks.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductVariantBulkCreateInput')
          ..add('attributes', attributes)
          ..add('costPrice', costPrice)
          ..add('priceOverride', priceOverride)
          ..add('sku', sku)
          ..add('trackInventory', trackInventory)
          ..add('weight', weight)
          ..add('stocks', stocks))
        .toString();
  }
}

class GProductVariantBulkCreateInputBuilder
    implements
        Builder<GProductVariantBulkCreateInput,
            GProductVariantBulkCreateInputBuilder> {
  _$GProductVariantBulkCreateInput _$v;

  ListBuilder<GAttributeValueInput> _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput> attributes) =>
      _$this._attributes = attributes;

  GDecimalBuilder _costPrice;
  GDecimalBuilder get costPrice => _$this._costPrice ??= new GDecimalBuilder();
  set costPrice(GDecimalBuilder costPrice) => _$this._costPrice = costPrice;

  GDecimalBuilder _priceOverride;
  GDecimalBuilder get priceOverride =>
      _$this._priceOverride ??= new GDecimalBuilder();
  set priceOverride(GDecimalBuilder priceOverride) =>
      _$this._priceOverride = priceOverride;

  String _sku;
  String get sku => _$this._sku;
  set sku(String sku) => _$this._sku = sku;

  bool _trackInventory;
  bool get trackInventory => _$this._trackInventory;
  set trackInventory(bool trackInventory) =>
      _$this._trackInventory = trackInventory;

  GWeightScalarBuilder _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder weight) => _$this._weight = weight;

  ListBuilder<GStockInput> _stocks;
  ListBuilder<GStockInput> get stocks =>
      _$this._stocks ??= new ListBuilder<GStockInput>();
  set stocks(ListBuilder<GStockInput> stocks) => _$this._stocks = stocks;

  GProductVariantBulkCreateInputBuilder();

  GProductVariantBulkCreateInputBuilder get _$this {
    if (_$v != null) {
      _attributes = _$v.attributes?.toBuilder();
      _costPrice = _$v.costPrice?.toBuilder();
      _priceOverride = _$v.priceOverride?.toBuilder();
      _sku = _$v.sku;
      _trackInventory = _$v.trackInventory;
      _weight = _$v.weight?.toBuilder();
      _stocks = _$v.stocks?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantBulkCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductVariantBulkCreateInput;
  }

  @override
  void update(void Function(GProductVariantBulkCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductVariantBulkCreateInput build() {
    _$GProductVariantBulkCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantBulkCreateInput._(
              attributes: _attributes?.build(),
              costPrice: _costPrice?.build(),
              priceOverride: _priceOverride?.build(),
              sku: sku,
              trackInventory: trackInventory,
              weight: _weight?.build(),
              stocks: stocks.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();
        _$failedField = 'costPrice';
        _costPrice?.build();
        _$failedField = 'priceOverride';
        _priceOverride?.build();

        _$failedField = 'weight';
        _weight?.build();
        _$failedField = 'stocks';
        stocks.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductVariantBulkCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantCreateInput extends GProductVariantCreateInput {
  @override
  final BuiltList<GAttributeValueInput> attributes;
  @override
  final GDecimal costPrice;
  @override
  final GDecimal priceOverride;
  @override
  final String sku;
  @override
  final bool trackInventory;
  @override
  final GWeightScalar weight;
  @override
  final String product;
  @override
  final BuiltList<GStockInput> stocks;

  factory _$GProductVariantCreateInput(
          [void Function(GProductVariantCreateInputBuilder) updates]) =>
      (new GProductVariantCreateInputBuilder()..update(updates)).build();

  _$GProductVariantCreateInput._(
      {this.attributes,
      this.costPrice,
      this.priceOverride,
      this.sku,
      this.trackInventory,
      this.weight,
      this.product,
      this.stocks})
      : super._() {
    if (product == null) {
      throw new BuiltValueNullFieldError(
          'GProductVariantCreateInput', 'product');
    }
    if (stocks == null) {
      throw new BuiltValueNullFieldError(
          'GProductVariantCreateInput', 'stocks');
    }
  }

  @override
  GProductVariantCreateInput rebuild(
          void Function(GProductVariantCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantCreateInputBuilder toBuilder() =>
      new GProductVariantCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantCreateInput &&
        attributes == other.attributes &&
        costPrice == other.costPrice &&
        priceOverride == other.priceOverride &&
        sku == other.sku &&
        trackInventory == other.trackInventory &&
        weight == other.weight &&
        product == other.product &&
        stocks == other.stocks;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, attributes.hashCode),
                                costPrice.hashCode),
                            priceOverride.hashCode),
                        sku.hashCode),
                    trackInventory.hashCode),
                weight.hashCode),
            product.hashCode),
        stocks.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductVariantCreateInput')
          ..add('attributes', attributes)
          ..add('costPrice', costPrice)
          ..add('priceOverride', priceOverride)
          ..add('sku', sku)
          ..add('trackInventory', trackInventory)
          ..add('weight', weight)
          ..add('product', product)
          ..add('stocks', stocks))
        .toString();
  }
}

class GProductVariantCreateInputBuilder
    implements
        Builder<GProductVariantCreateInput, GProductVariantCreateInputBuilder> {
  _$GProductVariantCreateInput _$v;

  ListBuilder<GAttributeValueInput> _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput> attributes) =>
      _$this._attributes = attributes;

  GDecimalBuilder _costPrice;
  GDecimalBuilder get costPrice => _$this._costPrice ??= new GDecimalBuilder();
  set costPrice(GDecimalBuilder costPrice) => _$this._costPrice = costPrice;

  GDecimalBuilder _priceOverride;
  GDecimalBuilder get priceOverride =>
      _$this._priceOverride ??= new GDecimalBuilder();
  set priceOverride(GDecimalBuilder priceOverride) =>
      _$this._priceOverride = priceOverride;

  String _sku;
  String get sku => _$this._sku;
  set sku(String sku) => _$this._sku = sku;

  bool _trackInventory;
  bool get trackInventory => _$this._trackInventory;
  set trackInventory(bool trackInventory) =>
      _$this._trackInventory = trackInventory;

  GWeightScalarBuilder _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder weight) => _$this._weight = weight;

  String _product;
  String get product => _$this._product;
  set product(String product) => _$this._product = product;

  ListBuilder<GStockInput> _stocks;
  ListBuilder<GStockInput> get stocks =>
      _$this._stocks ??= new ListBuilder<GStockInput>();
  set stocks(ListBuilder<GStockInput> stocks) => _$this._stocks = stocks;

  GProductVariantCreateInputBuilder();

  GProductVariantCreateInputBuilder get _$this {
    if (_$v != null) {
      _attributes = _$v.attributes?.toBuilder();
      _costPrice = _$v.costPrice?.toBuilder();
      _priceOverride = _$v.priceOverride?.toBuilder();
      _sku = _$v.sku;
      _trackInventory = _$v.trackInventory;
      _weight = _$v.weight?.toBuilder();
      _product = _$v.product;
      _stocks = _$v.stocks?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductVariantCreateInput;
  }

  @override
  void update(void Function(GProductVariantCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductVariantCreateInput build() {
    _$GProductVariantCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantCreateInput._(
              attributes: _attributes?.build(),
              costPrice: _costPrice?.build(),
              priceOverride: _priceOverride?.build(),
              sku: sku,
              trackInventory: trackInventory,
              weight: _weight?.build(),
              product: product,
              stocks: stocks.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();
        _$failedField = 'costPrice';
        _costPrice?.build();
        _$failedField = 'priceOverride';
        _priceOverride?.build();

        _$failedField = 'weight';
        _weight?.build();

        _$failedField = 'stocks';
        stocks.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductVariantCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantInput extends GProductVariantInput {
  @override
  final BuiltList<GAttributeValueInput> attributes;
  @override
  final GDecimal costPrice;
  @override
  final GDecimal priceOverride;
  @override
  final String sku;
  @override
  final bool trackInventory;
  @override
  final GWeightScalar weight;

  factory _$GProductVariantInput(
          [void Function(GProductVariantInputBuilder) updates]) =>
      (new GProductVariantInputBuilder()..update(updates)).build();

  _$GProductVariantInput._(
      {this.attributes,
      this.costPrice,
      this.priceOverride,
      this.sku,
      this.trackInventory,
      this.weight})
      : super._();

  @override
  GProductVariantInput rebuild(
          void Function(GProductVariantInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantInputBuilder toBuilder() =>
      new GProductVariantInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantInput &&
        attributes == other.attributes &&
        costPrice == other.costPrice &&
        priceOverride == other.priceOverride &&
        sku == other.sku &&
        trackInventory == other.trackInventory &&
        weight == other.weight;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, attributes.hashCode), costPrice.hashCode),
                    priceOverride.hashCode),
                sku.hashCode),
            trackInventory.hashCode),
        weight.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GProductVariantInput')
          ..add('attributes', attributes)
          ..add('costPrice', costPrice)
          ..add('priceOverride', priceOverride)
          ..add('sku', sku)
          ..add('trackInventory', trackInventory)
          ..add('weight', weight))
        .toString();
  }
}

class GProductVariantInputBuilder
    implements Builder<GProductVariantInput, GProductVariantInputBuilder> {
  _$GProductVariantInput _$v;

  ListBuilder<GAttributeValueInput> _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput> attributes) =>
      _$this._attributes = attributes;

  GDecimalBuilder _costPrice;
  GDecimalBuilder get costPrice => _$this._costPrice ??= new GDecimalBuilder();
  set costPrice(GDecimalBuilder costPrice) => _$this._costPrice = costPrice;

  GDecimalBuilder _priceOverride;
  GDecimalBuilder get priceOverride =>
      _$this._priceOverride ??= new GDecimalBuilder();
  set priceOverride(GDecimalBuilder priceOverride) =>
      _$this._priceOverride = priceOverride;

  String _sku;
  String get sku => _$this._sku;
  set sku(String sku) => _$this._sku = sku;

  bool _trackInventory;
  bool get trackInventory => _$this._trackInventory;
  set trackInventory(bool trackInventory) =>
      _$this._trackInventory = trackInventory;

  GWeightScalarBuilder _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder weight) => _$this._weight = weight;

  GProductVariantInputBuilder();

  GProductVariantInputBuilder get _$this {
    if (_$v != null) {
      _attributes = _$v.attributes?.toBuilder();
      _costPrice = _$v.costPrice?.toBuilder();
      _priceOverride = _$v.priceOverride?.toBuilder();
      _sku = _$v.sku;
      _trackInventory = _$v.trackInventory;
      _weight = _$v.weight?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GProductVariantInput;
  }

  @override
  void update(void Function(GProductVariantInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GProductVariantInput build() {
    _$GProductVariantInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantInput._(
              attributes: _attributes?.build(),
              costPrice: _costPrice?.build(),
              priceOverride: _priceOverride?.build(),
              sku: sku,
              trackInventory: trackInventory,
              weight: _weight?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();
        _$failedField = 'costPrice';
        _costPrice?.build();
        _$failedField = 'priceOverride';
        _priceOverride?.build();

        _$failedField = 'weight';
        _weight?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GProductVariantInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GReorderInput extends GReorderInput {
  @override
  final String id;
  @override
  final int sortOrder;

  factory _$GReorderInput([void Function(GReorderInputBuilder) updates]) =>
      (new GReorderInputBuilder()..update(updates)).build();

  _$GReorderInput._({this.id, this.sortOrder}) : super._() {
    if (id == null) {
      throw new BuiltValueNullFieldError('GReorderInput', 'id');
    }
  }

  @override
  GReorderInput rebuild(void Function(GReorderInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReorderInputBuilder toBuilder() => new GReorderInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReorderInput &&
        id == other.id &&
        sortOrder == other.sortOrder;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), sortOrder.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GReorderInput')
          ..add('id', id)
          ..add('sortOrder', sortOrder))
        .toString();
  }
}

class GReorderInputBuilder
    implements Builder<GReorderInput, GReorderInputBuilder> {
  _$GReorderInput _$v;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  int _sortOrder;
  int get sortOrder => _$this._sortOrder;
  set sortOrder(int sortOrder) => _$this._sortOrder = sortOrder;

  GReorderInputBuilder();

  GReorderInputBuilder get _$this {
    if (_$v != null) {
      _id = _$v.id;
      _sortOrder = _$v.sortOrder;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReorderInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GReorderInput;
  }

  @override
  void update(void Function(GReorderInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GReorderInput build() {
    final _$result = _$v ?? new _$GReorderInput._(id: id, sortOrder: sortOrder);
    replace(_$result);
    return _$result;
  }
}

class _$GSaleFilterInput extends GSaleFilterInput {
  @override
  final BuiltList<GDiscountStatusEnum> status;
  @override
  final GDiscountValueTypeEnum saleType;
  @override
  final GDateTimeRangeInput started;
  @override
  final String search;

  factory _$GSaleFilterInput(
          [void Function(GSaleFilterInputBuilder) updates]) =>
      (new GSaleFilterInputBuilder()..update(updates)).build();

  _$GSaleFilterInput._({this.status, this.saleType, this.started, this.search})
      : super._();

  @override
  GSaleFilterInput rebuild(void Function(GSaleFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleFilterInputBuilder toBuilder() =>
      new GSaleFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleFilterInput &&
        status == other.status &&
        saleType == other.saleType &&
        started == other.started &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, status.hashCode), saleType.hashCode), started.hashCode),
        search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GSaleFilterInput')
          ..add('status', status)
          ..add('saleType', saleType)
          ..add('started', started)
          ..add('search', search))
        .toString();
  }
}

class GSaleFilterInputBuilder
    implements Builder<GSaleFilterInput, GSaleFilterInputBuilder> {
  _$GSaleFilterInput _$v;

  ListBuilder<GDiscountStatusEnum> _status;
  ListBuilder<GDiscountStatusEnum> get status =>
      _$this._status ??= new ListBuilder<GDiscountStatusEnum>();
  set status(ListBuilder<GDiscountStatusEnum> status) =>
      _$this._status = status;

  GDiscountValueTypeEnum _saleType;
  GDiscountValueTypeEnum get saleType => _$this._saleType;
  set saleType(GDiscountValueTypeEnum saleType) => _$this._saleType = saleType;

  GDateTimeRangeInputBuilder _started;
  GDateTimeRangeInputBuilder get started =>
      _$this._started ??= new GDateTimeRangeInputBuilder();
  set started(GDateTimeRangeInputBuilder started) => _$this._started = started;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GSaleFilterInputBuilder();

  GSaleFilterInputBuilder get _$this {
    if (_$v != null) {
      _status = _$v.status?.toBuilder();
      _saleType = _$v.saleType;
      _started = _$v.started?.toBuilder();
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GSaleFilterInput;
  }

  @override
  void update(void Function(GSaleFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GSaleFilterInput build() {
    _$GSaleFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GSaleFilterInput._(
              status: _status?.build(),
              saleType: saleType,
              started: _started?.build(),
              search: search);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'status';
        _status?.build();

        _$failedField = 'started';
        _started?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GSaleFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSaleInput extends GSaleInput {
  @override
  final String name;
  @override
  final GDiscountValueTypeEnum type;
  @override
  final GDecimal value;
  @override
  final BuiltList<String> products;
  @override
  final BuiltList<String> categories;
  @override
  final BuiltList<String> collections;
  @override
  final GDateTime startDate;
  @override
  final GDateTime endDate;

  factory _$GSaleInput([void Function(GSaleInputBuilder) updates]) =>
      (new GSaleInputBuilder()..update(updates)).build();

  _$GSaleInput._(
      {this.name,
      this.type,
      this.value,
      this.products,
      this.categories,
      this.collections,
      this.startDate,
      this.endDate})
      : super._();

  @override
  GSaleInput rebuild(void Function(GSaleInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleInputBuilder toBuilder() => new GSaleInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleInput &&
        name == other.name &&
        type == other.type &&
        value == other.value &&
        products == other.products &&
        categories == other.categories &&
        collections == other.collections &&
        startDate == other.startDate &&
        endDate == other.endDate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, name.hashCode), type.hashCode),
                            value.hashCode),
                        products.hashCode),
                    categories.hashCode),
                collections.hashCode),
            startDate.hashCode),
        endDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GSaleInput')
          ..add('name', name)
          ..add('type', type)
          ..add('value', value)
          ..add('products', products)
          ..add('categories', categories)
          ..add('collections', collections)
          ..add('startDate', startDate)
          ..add('endDate', endDate))
        .toString();
  }
}

class GSaleInputBuilder implements Builder<GSaleInput, GSaleInputBuilder> {
  _$GSaleInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GDiscountValueTypeEnum _type;
  GDiscountValueTypeEnum get type => _$this._type;
  set type(GDiscountValueTypeEnum type) => _$this._type = type;

  GDecimalBuilder _value;
  GDecimalBuilder get value => _$this._value ??= new GDecimalBuilder();
  set value(GDecimalBuilder value) => _$this._value = value;

  ListBuilder<String> _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String> products) => _$this._products = products;

  ListBuilder<String> _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String> categories) =>
      _$this._categories = categories;

  ListBuilder<String> _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String> collections) =>
      _$this._collections = collections;

  GDateTimeBuilder _startDate;
  GDateTimeBuilder get startDate =>
      _$this._startDate ??= new GDateTimeBuilder();
  set startDate(GDateTimeBuilder startDate) => _$this._startDate = startDate;

  GDateTimeBuilder _endDate;
  GDateTimeBuilder get endDate => _$this._endDate ??= new GDateTimeBuilder();
  set endDate(GDateTimeBuilder endDate) => _$this._endDate = endDate;

  GSaleInputBuilder();

  GSaleInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _type = _$v.type;
      _value = _$v.value?.toBuilder();
      _products = _$v.products?.toBuilder();
      _categories = _$v.categories?.toBuilder();
      _collections = _$v.collections?.toBuilder();
      _startDate = _$v.startDate?.toBuilder();
      _endDate = _$v.endDate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GSaleInput;
  }

  @override
  void update(void Function(GSaleInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GSaleInput build() {
    _$GSaleInput _$result;
    try {
      _$result = _$v ??
          new _$GSaleInput._(
              name: name,
              type: type,
              value: _value?.build(),
              products: _products?.build(),
              categories: _categories?.build(),
              collections: _collections?.build(),
              startDate: _startDate?.build(),
              endDate: _endDate?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'value';
        _value?.build();
        _$failedField = 'products';
        _products?.build();
        _$failedField = 'categories';
        _categories?.build();
        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GSaleInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSaleSortingInput extends GSaleSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GSaleSortField field;

  factory _$GSaleSortingInput(
          [void Function(GSaleSortingInputBuilder) updates]) =>
      (new GSaleSortingInputBuilder()..update(updates)).build();

  _$GSaleSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GSaleSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GSaleSortingInput', 'field');
    }
  }

  @override
  GSaleSortingInput rebuild(void Function(GSaleSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleSortingInputBuilder toBuilder() =>
      new GSaleSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GSaleSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GSaleSortingInputBuilder
    implements Builder<GSaleSortingInput, GSaleSortingInputBuilder> {
  _$GSaleSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GSaleSortField _field;
  GSaleSortField get field => _$this._field;
  set field(GSaleSortField field) => _$this._field = field;

  GSaleSortingInputBuilder();

  GSaleSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GSaleSortingInput;
  }

  @override
  void update(void Function(GSaleSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GSaleSortingInput build() {
    final _$result =
        _$v ?? new _$GSaleSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GSeoInput extends GSeoInput {
  @override
  final String title;
  @override
  final String description;

  factory _$GSeoInput([void Function(GSeoInputBuilder) updates]) =>
      (new GSeoInputBuilder()..update(updates)).build();

  _$GSeoInput._({this.title, this.description}) : super._();

  @override
  GSeoInput rebuild(void Function(GSeoInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSeoInputBuilder toBuilder() => new GSeoInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSeoInput &&
        title == other.title &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, title.hashCode), description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GSeoInput')
          ..add('title', title)
          ..add('description', description))
        .toString();
  }
}

class GSeoInputBuilder implements Builder<GSeoInput, GSeoInputBuilder> {
  _$GSeoInput _$v;

  String _title;
  String get title => _$this._title;
  set title(String title) => _$this._title = title;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GSeoInputBuilder();

  GSeoInputBuilder get _$this {
    if (_$v != null) {
      _title = _$v.title;
      _description = _$v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSeoInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GSeoInput;
  }

  @override
  void update(void Function(GSeoInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GSeoInput build() {
    final _$result =
        _$v ?? new _$GSeoInput._(title: title, description: description);
    replace(_$result);
    return _$result;
  }
}

class _$GServiceAccountFilterInput extends GServiceAccountFilterInput {
  @override
  final String search;
  @override
  final bool isActive;

  factory _$GServiceAccountFilterInput(
          [void Function(GServiceAccountFilterInputBuilder) updates]) =>
      (new GServiceAccountFilterInputBuilder()..update(updates)).build();

  _$GServiceAccountFilterInput._({this.search, this.isActive}) : super._();

  @override
  GServiceAccountFilterInput rebuild(
          void Function(GServiceAccountFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GServiceAccountFilterInputBuilder toBuilder() =>
      new GServiceAccountFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GServiceAccountFilterInput &&
        search == other.search &&
        isActive == other.isActive;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), isActive.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GServiceAccountFilterInput')
          ..add('search', search)
          ..add('isActive', isActive))
        .toString();
  }
}

class GServiceAccountFilterInputBuilder
    implements
        Builder<GServiceAccountFilterInput, GServiceAccountFilterInputBuilder> {
  _$GServiceAccountFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  GServiceAccountFilterInputBuilder();

  GServiceAccountFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _isActive = _$v.isActive;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GServiceAccountFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GServiceAccountFilterInput;
  }

  @override
  void update(void Function(GServiceAccountFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GServiceAccountFilterInput build() {
    final _$result = _$v ??
        new _$GServiceAccountFilterInput._(search: search, isActive: isActive);
    replace(_$result);
    return _$result;
  }
}

class _$GServiceAccountInput extends GServiceAccountInput {
  @override
  final String name;
  @override
  final bool isActive;
  @override
  final BuiltList<GPermissionEnum> permissions;

  factory _$GServiceAccountInput(
          [void Function(GServiceAccountInputBuilder) updates]) =>
      (new GServiceAccountInputBuilder()..update(updates)).build();

  _$GServiceAccountInput._({this.name, this.isActive, this.permissions})
      : super._();

  @override
  GServiceAccountInput rebuild(
          void Function(GServiceAccountInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GServiceAccountInputBuilder toBuilder() =>
      new GServiceAccountInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GServiceAccountInput &&
        name == other.name &&
        isActive == other.isActive &&
        permissions == other.permissions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, name.hashCode), isActive.hashCode), permissions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GServiceAccountInput')
          ..add('name', name)
          ..add('isActive', isActive)
          ..add('permissions', permissions))
        .toString();
  }
}

class GServiceAccountInputBuilder
    implements Builder<GServiceAccountInput, GServiceAccountInputBuilder> {
  _$GServiceAccountInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  ListBuilder<GPermissionEnum> _permissions;
  ListBuilder<GPermissionEnum> get permissions =>
      _$this._permissions ??= new ListBuilder<GPermissionEnum>();
  set permissions(ListBuilder<GPermissionEnum> permissions) =>
      _$this._permissions = permissions;

  GServiceAccountInputBuilder();

  GServiceAccountInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _isActive = _$v.isActive;
      _permissions = _$v.permissions?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GServiceAccountInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GServiceAccountInput;
  }

  @override
  void update(void Function(GServiceAccountInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GServiceAccountInput build() {
    _$GServiceAccountInput _$result;
    try {
      _$result = _$v ??
          new _$GServiceAccountInput._(
              name: name,
              isActive: isActive,
              permissions: _permissions?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'permissions';
        _permissions?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GServiceAccountInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GServiceAccountSortingInput extends GServiceAccountSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GServiceAccountSortField field;

  factory _$GServiceAccountSortingInput(
          [void Function(GServiceAccountSortingInputBuilder) updates]) =>
      (new GServiceAccountSortingInputBuilder()..update(updates)).build();

  _$GServiceAccountSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError(
          'GServiceAccountSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError(
          'GServiceAccountSortingInput', 'field');
    }
  }

  @override
  GServiceAccountSortingInput rebuild(
          void Function(GServiceAccountSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GServiceAccountSortingInputBuilder toBuilder() =>
      new GServiceAccountSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GServiceAccountSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GServiceAccountSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GServiceAccountSortingInputBuilder
    implements
        Builder<GServiceAccountSortingInput,
            GServiceAccountSortingInputBuilder> {
  _$GServiceAccountSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GServiceAccountSortField _field;
  GServiceAccountSortField get field => _$this._field;
  set field(GServiceAccountSortField field) => _$this._field = field;

  GServiceAccountSortingInputBuilder();

  GServiceAccountSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GServiceAccountSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GServiceAccountSortingInput;
  }

  @override
  void update(void Function(GServiceAccountSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GServiceAccountSortingInput build() {
    final _$result = _$v ??
        new _$GServiceAccountSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GServiceAccountTokenInput extends GServiceAccountTokenInput {
  @override
  final String name;
  @override
  final String serviceAccount;

  factory _$GServiceAccountTokenInput(
          [void Function(GServiceAccountTokenInputBuilder) updates]) =>
      (new GServiceAccountTokenInputBuilder()..update(updates)).build();

  _$GServiceAccountTokenInput._({this.name, this.serviceAccount}) : super._() {
    if (serviceAccount == null) {
      throw new BuiltValueNullFieldError(
          'GServiceAccountTokenInput', 'serviceAccount');
    }
  }

  @override
  GServiceAccountTokenInput rebuild(
          void Function(GServiceAccountTokenInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GServiceAccountTokenInputBuilder toBuilder() =>
      new GServiceAccountTokenInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GServiceAccountTokenInput &&
        name == other.name &&
        serviceAccount == other.serviceAccount;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), serviceAccount.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GServiceAccountTokenInput')
          ..add('name', name)
          ..add('serviceAccount', serviceAccount))
        .toString();
  }
}

class GServiceAccountTokenInputBuilder
    implements
        Builder<GServiceAccountTokenInput, GServiceAccountTokenInputBuilder> {
  _$GServiceAccountTokenInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _serviceAccount;
  String get serviceAccount => _$this._serviceAccount;
  set serviceAccount(String serviceAccount) =>
      _$this._serviceAccount = serviceAccount;

  GServiceAccountTokenInputBuilder();

  GServiceAccountTokenInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _serviceAccount = _$v.serviceAccount;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GServiceAccountTokenInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GServiceAccountTokenInput;
  }

  @override
  void update(void Function(GServiceAccountTokenInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GServiceAccountTokenInput build() {
    final _$result = _$v ??
        new _$GServiceAccountTokenInput._(
            name: name, serviceAccount: serviceAccount);
    replace(_$result);
    return _$result;
  }
}

class _$GShippingPriceInput extends GShippingPriceInput {
  @override
  final String name;
  @override
  final GDecimal price;
  @override
  final GDecimal minimumOrderPrice;
  @override
  final GDecimal maximumOrderPrice;
  @override
  final GWeightScalar minimumOrderWeight;
  @override
  final GWeightScalar maximumOrderWeight;
  @override
  final GShippingMethodTypeEnum type;
  @override
  final String shippingZone;

  factory _$GShippingPriceInput(
          [void Function(GShippingPriceInputBuilder) updates]) =>
      (new GShippingPriceInputBuilder()..update(updates)).build();

  _$GShippingPriceInput._(
      {this.name,
      this.price,
      this.minimumOrderPrice,
      this.maximumOrderPrice,
      this.minimumOrderWeight,
      this.maximumOrderWeight,
      this.type,
      this.shippingZone})
      : super._();

  @override
  GShippingPriceInput rebuild(
          void Function(GShippingPriceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingPriceInputBuilder toBuilder() =>
      new GShippingPriceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingPriceInput &&
        name == other.name &&
        price == other.price &&
        minimumOrderPrice == other.minimumOrderPrice &&
        maximumOrderPrice == other.maximumOrderPrice &&
        minimumOrderWeight == other.minimumOrderWeight &&
        maximumOrderWeight == other.maximumOrderWeight &&
        type == other.type &&
        shippingZone == other.shippingZone;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, name.hashCode), price.hashCode),
                            minimumOrderPrice.hashCode),
                        maximumOrderPrice.hashCode),
                    minimumOrderWeight.hashCode),
                maximumOrderWeight.hashCode),
            type.hashCode),
        shippingZone.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GShippingPriceInput')
          ..add('name', name)
          ..add('price', price)
          ..add('minimumOrderPrice', minimumOrderPrice)
          ..add('maximumOrderPrice', maximumOrderPrice)
          ..add('minimumOrderWeight', minimumOrderWeight)
          ..add('maximumOrderWeight', maximumOrderWeight)
          ..add('type', type)
          ..add('shippingZone', shippingZone))
        .toString();
  }
}

class GShippingPriceInputBuilder
    implements Builder<GShippingPriceInput, GShippingPriceInputBuilder> {
  _$GShippingPriceInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GDecimalBuilder _price;
  GDecimalBuilder get price => _$this._price ??= new GDecimalBuilder();
  set price(GDecimalBuilder price) => _$this._price = price;

  GDecimalBuilder _minimumOrderPrice;
  GDecimalBuilder get minimumOrderPrice =>
      _$this._minimumOrderPrice ??= new GDecimalBuilder();
  set minimumOrderPrice(GDecimalBuilder minimumOrderPrice) =>
      _$this._minimumOrderPrice = minimumOrderPrice;

  GDecimalBuilder _maximumOrderPrice;
  GDecimalBuilder get maximumOrderPrice =>
      _$this._maximumOrderPrice ??= new GDecimalBuilder();
  set maximumOrderPrice(GDecimalBuilder maximumOrderPrice) =>
      _$this._maximumOrderPrice = maximumOrderPrice;

  GWeightScalarBuilder _minimumOrderWeight;
  GWeightScalarBuilder get minimumOrderWeight =>
      _$this._minimumOrderWeight ??= new GWeightScalarBuilder();
  set minimumOrderWeight(GWeightScalarBuilder minimumOrderWeight) =>
      _$this._minimumOrderWeight = minimumOrderWeight;

  GWeightScalarBuilder _maximumOrderWeight;
  GWeightScalarBuilder get maximumOrderWeight =>
      _$this._maximumOrderWeight ??= new GWeightScalarBuilder();
  set maximumOrderWeight(GWeightScalarBuilder maximumOrderWeight) =>
      _$this._maximumOrderWeight = maximumOrderWeight;

  GShippingMethodTypeEnum _type;
  GShippingMethodTypeEnum get type => _$this._type;
  set type(GShippingMethodTypeEnum type) => _$this._type = type;

  String _shippingZone;
  String get shippingZone => _$this._shippingZone;
  set shippingZone(String shippingZone) => _$this._shippingZone = shippingZone;

  GShippingPriceInputBuilder();

  GShippingPriceInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _price = _$v.price?.toBuilder();
      _minimumOrderPrice = _$v.minimumOrderPrice?.toBuilder();
      _maximumOrderPrice = _$v.maximumOrderPrice?.toBuilder();
      _minimumOrderWeight = _$v.minimumOrderWeight?.toBuilder();
      _maximumOrderWeight = _$v.maximumOrderWeight?.toBuilder();
      _type = _$v.type;
      _shippingZone = _$v.shippingZone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingPriceInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GShippingPriceInput;
  }

  @override
  void update(void Function(GShippingPriceInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GShippingPriceInput build() {
    _$GShippingPriceInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingPriceInput._(
              name: name,
              price: _price?.build(),
              minimumOrderPrice: _minimumOrderPrice?.build(),
              maximumOrderPrice: _maximumOrderPrice?.build(),
              minimumOrderWeight: _minimumOrderWeight?.build(),
              maximumOrderWeight: _maximumOrderWeight?.build(),
              type: type,
              shippingZone: shippingZone);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'price';
        _price?.build();
        _$failedField = 'minimumOrderPrice';
        _minimumOrderPrice?.build();
        _$failedField = 'maximumOrderPrice';
        _maximumOrderPrice?.build();
        _$failedField = 'minimumOrderWeight';
        _minimumOrderWeight?.build();
        _$failedField = 'maximumOrderWeight';
        _maximumOrderWeight?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GShippingPriceInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingZoneCreateInput extends GShippingZoneCreateInput {
  @override
  final String name;
  @override
  final BuiltList<String> countries;
  @override
  final bool Gdefault;
  @override
  final BuiltList<String> addWarehouses;

  factory _$GShippingZoneCreateInput(
          [void Function(GShippingZoneCreateInputBuilder) updates]) =>
      (new GShippingZoneCreateInputBuilder()..update(updates)).build();

  _$GShippingZoneCreateInput._(
      {this.name, this.countries, this.Gdefault, this.addWarehouses})
      : super._();

  @override
  GShippingZoneCreateInput rebuild(
          void Function(GShippingZoneCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingZoneCreateInputBuilder toBuilder() =>
      new GShippingZoneCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingZoneCreateInput &&
        name == other.name &&
        countries == other.countries &&
        Gdefault == other.Gdefault &&
        addWarehouses == other.addWarehouses;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, name.hashCode), countries.hashCode), Gdefault.hashCode),
        addWarehouses.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GShippingZoneCreateInput')
          ..add('name', name)
          ..add('countries', countries)
          ..add('Gdefault', Gdefault)
          ..add('addWarehouses', addWarehouses))
        .toString();
  }
}

class GShippingZoneCreateInputBuilder
    implements
        Builder<GShippingZoneCreateInput, GShippingZoneCreateInputBuilder> {
  _$GShippingZoneCreateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  ListBuilder<String> _countries;
  ListBuilder<String> get countries =>
      _$this._countries ??= new ListBuilder<String>();
  set countries(ListBuilder<String> countries) => _$this._countries = countries;

  bool _Gdefault;
  bool get Gdefault => _$this._Gdefault;
  set Gdefault(bool Gdefault) => _$this._Gdefault = Gdefault;

  ListBuilder<String> _addWarehouses;
  ListBuilder<String> get addWarehouses =>
      _$this._addWarehouses ??= new ListBuilder<String>();
  set addWarehouses(ListBuilder<String> addWarehouses) =>
      _$this._addWarehouses = addWarehouses;

  GShippingZoneCreateInputBuilder();

  GShippingZoneCreateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _countries = _$v.countries?.toBuilder();
      _Gdefault = _$v.Gdefault;
      _addWarehouses = _$v.addWarehouses?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingZoneCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GShippingZoneCreateInput;
  }

  @override
  void update(void Function(GShippingZoneCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GShippingZoneCreateInput build() {
    _$GShippingZoneCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingZoneCreateInput._(
              name: name,
              countries: _countries?.build(),
              Gdefault: Gdefault,
              addWarehouses: _addWarehouses?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'countries';
        _countries?.build();

        _$failedField = 'addWarehouses';
        _addWarehouses?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GShippingZoneCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingZoneUpdateInput extends GShippingZoneUpdateInput {
  @override
  final String name;
  @override
  final BuiltList<String> countries;
  @override
  final bool Gdefault;
  @override
  final BuiltList<String> addWarehouses;
  @override
  final BuiltList<String> removeWarehouses;

  factory _$GShippingZoneUpdateInput(
          [void Function(GShippingZoneUpdateInputBuilder) updates]) =>
      (new GShippingZoneUpdateInputBuilder()..update(updates)).build();

  _$GShippingZoneUpdateInput._(
      {this.name,
      this.countries,
      this.Gdefault,
      this.addWarehouses,
      this.removeWarehouses})
      : super._();

  @override
  GShippingZoneUpdateInput rebuild(
          void Function(GShippingZoneUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingZoneUpdateInputBuilder toBuilder() =>
      new GShippingZoneUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingZoneUpdateInput &&
        name == other.name &&
        countries == other.countries &&
        Gdefault == other.Gdefault &&
        addWarehouses == other.addWarehouses &&
        removeWarehouses == other.removeWarehouses;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, name.hashCode), countries.hashCode),
                Gdefault.hashCode),
            addWarehouses.hashCode),
        removeWarehouses.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GShippingZoneUpdateInput')
          ..add('name', name)
          ..add('countries', countries)
          ..add('Gdefault', Gdefault)
          ..add('addWarehouses', addWarehouses)
          ..add('removeWarehouses', removeWarehouses))
        .toString();
  }
}

class GShippingZoneUpdateInputBuilder
    implements
        Builder<GShippingZoneUpdateInput, GShippingZoneUpdateInputBuilder> {
  _$GShippingZoneUpdateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  ListBuilder<String> _countries;
  ListBuilder<String> get countries =>
      _$this._countries ??= new ListBuilder<String>();
  set countries(ListBuilder<String> countries) => _$this._countries = countries;

  bool _Gdefault;
  bool get Gdefault => _$this._Gdefault;
  set Gdefault(bool Gdefault) => _$this._Gdefault = Gdefault;

  ListBuilder<String> _addWarehouses;
  ListBuilder<String> get addWarehouses =>
      _$this._addWarehouses ??= new ListBuilder<String>();
  set addWarehouses(ListBuilder<String> addWarehouses) =>
      _$this._addWarehouses = addWarehouses;

  ListBuilder<String> _removeWarehouses;
  ListBuilder<String> get removeWarehouses =>
      _$this._removeWarehouses ??= new ListBuilder<String>();
  set removeWarehouses(ListBuilder<String> removeWarehouses) =>
      _$this._removeWarehouses = removeWarehouses;

  GShippingZoneUpdateInputBuilder();

  GShippingZoneUpdateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _countries = _$v.countries?.toBuilder();
      _Gdefault = _$v.Gdefault;
      _addWarehouses = _$v.addWarehouses?.toBuilder();
      _removeWarehouses = _$v.removeWarehouses?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingZoneUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GShippingZoneUpdateInput;
  }

  @override
  void update(void Function(GShippingZoneUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GShippingZoneUpdateInput build() {
    _$GShippingZoneUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingZoneUpdateInput._(
              name: name,
              countries: _countries?.build(),
              Gdefault: Gdefault,
              addWarehouses: _addWarehouses?.build(),
              removeWarehouses: _removeWarehouses?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'countries';
        _countries?.build();

        _$failedField = 'addWarehouses';
        _addWarehouses?.build();
        _$failedField = 'removeWarehouses';
        _removeWarehouses?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GShippingZoneUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShopSettingsInput extends GShopSettingsInput {
  @override
  final String headerText;
  @override
  final String description;
  @override
  final bool includeTaxesInPrices;
  @override
  final bool displayGrossPrices;
  @override
  final bool chargeTaxesOnShipping;
  @override
  final bool trackInventoryByDefault;
  @override
  final GWeightUnitsEnum defaultWeightUnit;
  @override
  final bool automaticFulfillmentDigitalProducts;
  @override
  final int defaultDigitalMaxDownloads;
  @override
  final int defaultDigitalUrlValidDays;
  @override
  final String defaultMailSenderName;
  @override
  final String defaultMailSenderAddress;
  @override
  final String customerSetPasswordUrl;

  factory _$GShopSettingsInput(
          [void Function(GShopSettingsInputBuilder) updates]) =>
      (new GShopSettingsInputBuilder()..update(updates)).build();

  _$GShopSettingsInput._(
      {this.headerText,
      this.description,
      this.includeTaxesInPrices,
      this.displayGrossPrices,
      this.chargeTaxesOnShipping,
      this.trackInventoryByDefault,
      this.defaultWeightUnit,
      this.automaticFulfillmentDigitalProducts,
      this.defaultDigitalMaxDownloads,
      this.defaultDigitalUrlValidDays,
      this.defaultMailSenderName,
      this.defaultMailSenderAddress,
      this.customerSetPasswordUrl})
      : super._();

  @override
  GShopSettingsInput rebuild(
          void Function(GShopSettingsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShopSettingsInputBuilder toBuilder() =>
      new GShopSettingsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShopSettingsInput &&
        headerText == other.headerText &&
        description == other.description &&
        includeTaxesInPrices == other.includeTaxesInPrices &&
        displayGrossPrices == other.displayGrossPrices &&
        chargeTaxesOnShipping == other.chargeTaxesOnShipping &&
        trackInventoryByDefault == other.trackInventoryByDefault &&
        defaultWeightUnit == other.defaultWeightUnit &&
        automaticFulfillmentDigitalProducts ==
            other.automaticFulfillmentDigitalProducts &&
        defaultDigitalMaxDownloads == other.defaultDigitalMaxDownloads &&
        defaultDigitalUrlValidDays == other.defaultDigitalUrlValidDays &&
        defaultMailSenderName == other.defaultMailSenderName &&
        defaultMailSenderAddress == other.defaultMailSenderAddress &&
        customerSetPasswordUrl == other.customerSetPasswordUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, headerText.hashCode),
                                                    description.hashCode),
                                                includeTaxesInPrices.hashCode),
                                            displayGrossPrices.hashCode),
                                        chargeTaxesOnShipping.hashCode),
                                    trackInventoryByDefault.hashCode),
                                defaultWeightUnit.hashCode),
                            automaticFulfillmentDigitalProducts.hashCode),
                        defaultDigitalMaxDownloads.hashCode),
                    defaultDigitalUrlValidDays.hashCode),
                defaultMailSenderName.hashCode),
            defaultMailSenderAddress.hashCode),
        customerSetPasswordUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GShopSettingsInput')
          ..add('headerText', headerText)
          ..add('description', description)
          ..add('includeTaxesInPrices', includeTaxesInPrices)
          ..add('displayGrossPrices', displayGrossPrices)
          ..add('chargeTaxesOnShipping', chargeTaxesOnShipping)
          ..add('trackInventoryByDefault', trackInventoryByDefault)
          ..add('defaultWeightUnit', defaultWeightUnit)
          ..add('automaticFulfillmentDigitalProducts',
              automaticFulfillmentDigitalProducts)
          ..add('defaultDigitalMaxDownloads', defaultDigitalMaxDownloads)
          ..add('defaultDigitalUrlValidDays', defaultDigitalUrlValidDays)
          ..add('defaultMailSenderName', defaultMailSenderName)
          ..add('defaultMailSenderAddress', defaultMailSenderAddress)
          ..add('customerSetPasswordUrl', customerSetPasswordUrl))
        .toString();
  }
}

class GShopSettingsInputBuilder
    implements Builder<GShopSettingsInput, GShopSettingsInputBuilder> {
  _$GShopSettingsInput _$v;

  String _headerText;
  String get headerText => _$this._headerText;
  set headerText(String headerText) => _$this._headerText = headerText;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  bool _includeTaxesInPrices;
  bool get includeTaxesInPrices => _$this._includeTaxesInPrices;
  set includeTaxesInPrices(bool includeTaxesInPrices) =>
      _$this._includeTaxesInPrices = includeTaxesInPrices;

  bool _displayGrossPrices;
  bool get displayGrossPrices => _$this._displayGrossPrices;
  set displayGrossPrices(bool displayGrossPrices) =>
      _$this._displayGrossPrices = displayGrossPrices;

  bool _chargeTaxesOnShipping;
  bool get chargeTaxesOnShipping => _$this._chargeTaxesOnShipping;
  set chargeTaxesOnShipping(bool chargeTaxesOnShipping) =>
      _$this._chargeTaxesOnShipping = chargeTaxesOnShipping;

  bool _trackInventoryByDefault;
  bool get trackInventoryByDefault => _$this._trackInventoryByDefault;
  set trackInventoryByDefault(bool trackInventoryByDefault) =>
      _$this._trackInventoryByDefault = trackInventoryByDefault;

  GWeightUnitsEnum _defaultWeightUnit;
  GWeightUnitsEnum get defaultWeightUnit => _$this._defaultWeightUnit;
  set defaultWeightUnit(GWeightUnitsEnum defaultWeightUnit) =>
      _$this._defaultWeightUnit = defaultWeightUnit;

  bool _automaticFulfillmentDigitalProducts;
  bool get automaticFulfillmentDigitalProducts =>
      _$this._automaticFulfillmentDigitalProducts;
  set automaticFulfillmentDigitalProducts(
          bool automaticFulfillmentDigitalProducts) =>
      _$this._automaticFulfillmentDigitalProducts =
          automaticFulfillmentDigitalProducts;

  int _defaultDigitalMaxDownloads;
  int get defaultDigitalMaxDownloads => _$this._defaultDigitalMaxDownloads;
  set defaultDigitalMaxDownloads(int defaultDigitalMaxDownloads) =>
      _$this._defaultDigitalMaxDownloads = defaultDigitalMaxDownloads;

  int _defaultDigitalUrlValidDays;
  int get defaultDigitalUrlValidDays => _$this._defaultDigitalUrlValidDays;
  set defaultDigitalUrlValidDays(int defaultDigitalUrlValidDays) =>
      _$this._defaultDigitalUrlValidDays = defaultDigitalUrlValidDays;

  String _defaultMailSenderName;
  String get defaultMailSenderName => _$this._defaultMailSenderName;
  set defaultMailSenderName(String defaultMailSenderName) =>
      _$this._defaultMailSenderName = defaultMailSenderName;

  String _defaultMailSenderAddress;
  String get defaultMailSenderAddress => _$this._defaultMailSenderAddress;
  set defaultMailSenderAddress(String defaultMailSenderAddress) =>
      _$this._defaultMailSenderAddress = defaultMailSenderAddress;

  String _customerSetPasswordUrl;
  String get customerSetPasswordUrl => _$this._customerSetPasswordUrl;
  set customerSetPasswordUrl(String customerSetPasswordUrl) =>
      _$this._customerSetPasswordUrl = customerSetPasswordUrl;

  GShopSettingsInputBuilder();

  GShopSettingsInputBuilder get _$this {
    if (_$v != null) {
      _headerText = _$v.headerText;
      _description = _$v.description;
      _includeTaxesInPrices = _$v.includeTaxesInPrices;
      _displayGrossPrices = _$v.displayGrossPrices;
      _chargeTaxesOnShipping = _$v.chargeTaxesOnShipping;
      _trackInventoryByDefault = _$v.trackInventoryByDefault;
      _defaultWeightUnit = _$v.defaultWeightUnit;
      _automaticFulfillmentDigitalProducts =
          _$v.automaticFulfillmentDigitalProducts;
      _defaultDigitalMaxDownloads = _$v.defaultDigitalMaxDownloads;
      _defaultDigitalUrlValidDays = _$v.defaultDigitalUrlValidDays;
      _defaultMailSenderName = _$v.defaultMailSenderName;
      _defaultMailSenderAddress = _$v.defaultMailSenderAddress;
      _customerSetPasswordUrl = _$v.customerSetPasswordUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShopSettingsInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GShopSettingsInput;
  }

  @override
  void update(void Function(GShopSettingsInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GShopSettingsInput build() {
    final _$result = _$v ??
        new _$GShopSettingsInput._(
            headerText: headerText,
            description: description,
            includeTaxesInPrices: includeTaxesInPrices,
            displayGrossPrices: displayGrossPrices,
            chargeTaxesOnShipping: chargeTaxesOnShipping,
            trackInventoryByDefault: trackInventoryByDefault,
            defaultWeightUnit: defaultWeightUnit,
            automaticFulfillmentDigitalProducts:
                automaticFulfillmentDigitalProducts,
            defaultDigitalMaxDownloads: defaultDigitalMaxDownloads,
            defaultDigitalUrlValidDays: defaultDigitalUrlValidDays,
            defaultMailSenderName: defaultMailSenderName,
            defaultMailSenderAddress: defaultMailSenderAddress,
            customerSetPasswordUrl: customerSetPasswordUrl);
    replace(_$result);
    return _$result;
  }
}

class _$GShopSettingsTranslationInput extends GShopSettingsTranslationInput {
  @override
  final String headerText;
  @override
  final String description;

  factory _$GShopSettingsTranslationInput(
          [void Function(GShopSettingsTranslationInputBuilder) updates]) =>
      (new GShopSettingsTranslationInputBuilder()..update(updates)).build();

  _$GShopSettingsTranslationInput._({this.headerText, this.description})
      : super._();

  @override
  GShopSettingsTranslationInput rebuild(
          void Function(GShopSettingsTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShopSettingsTranslationInputBuilder toBuilder() =>
      new GShopSettingsTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShopSettingsTranslationInput &&
        headerText == other.headerText &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, headerText.hashCode), description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GShopSettingsTranslationInput')
          ..add('headerText', headerText)
          ..add('description', description))
        .toString();
  }
}

class GShopSettingsTranslationInputBuilder
    implements
        Builder<GShopSettingsTranslationInput,
            GShopSettingsTranslationInputBuilder> {
  _$GShopSettingsTranslationInput _$v;

  String _headerText;
  String get headerText => _$this._headerText;
  set headerText(String headerText) => _$this._headerText = headerText;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GShopSettingsTranslationInputBuilder();

  GShopSettingsTranslationInputBuilder get _$this {
    if (_$v != null) {
      _headerText = _$v.headerText;
      _description = _$v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShopSettingsTranslationInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GShopSettingsTranslationInput;
  }

  @override
  void update(void Function(GShopSettingsTranslationInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GShopSettingsTranslationInput build() {
    final _$result = _$v ??
        new _$GShopSettingsTranslationInput._(
            headerText: headerText, description: description);
    replace(_$result);
    return _$result;
  }
}

class _$GSiteDomainInput extends GSiteDomainInput {
  @override
  final String domain;
  @override
  final String name;

  factory _$GSiteDomainInput(
          [void Function(GSiteDomainInputBuilder) updates]) =>
      (new GSiteDomainInputBuilder()..update(updates)).build();

  _$GSiteDomainInput._({this.domain, this.name}) : super._();

  @override
  GSiteDomainInput rebuild(void Function(GSiteDomainInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSiteDomainInputBuilder toBuilder() =>
      new GSiteDomainInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSiteDomainInput &&
        domain == other.domain &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, domain.hashCode), name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GSiteDomainInput')
          ..add('domain', domain)
          ..add('name', name))
        .toString();
  }
}

class GSiteDomainInputBuilder
    implements Builder<GSiteDomainInput, GSiteDomainInputBuilder> {
  _$GSiteDomainInput _$v;

  String _domain;
  String get domain => _$this._domain;
  set domain(String domain) => _$this._domain = domain;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GSiteDomainInputBuilder();

  GSiteDomainInputBuilder get _$this {
    if (_$v != null) {
      _domain = _$v.domain;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSiteDomainInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GSiteDomainInput;
  }

  @override
  void update(void Function(GSiteDomainInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GSiteDomainInput build() {
    final _$result =
        _$v ?? new _$GSiteDomainInput._(domain: domain, name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GStaffCreateInput extends GStaffCreateInput {
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final String email;
  @override
  final bool isActive;
  @override
  final String note;
  @override
  final BuiltList<String> addGroups;
  @override
  final String redirectUrl;

  factory _$GStaffCreateInput(
          [void Function(GStaffCreateInputBuilder) updates]) =>
      (new GStaffCreateInputBuilder()..update(updates)).build();

  _$GStaffCreateInput._(
      {this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note,
      this.addGroups,
      this.redirectUrl})
      : super._() {
    if (addGroups == null) {
      throw new BuiltValueNullFieldError('GStaffCreateInput', 'addGroups');
    }
  }

  @override
  GStaffCreateInput rebuild(void Function(GStaffCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffCreateInputBuilder toBuilder() =>
      new GStaffCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffCreateInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note &&
        addGroups == other.addGroups &&
        redirectUrl == other.redirectUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
                        email.hashCode),
                    isActive.hashCode),
                note.hashCode),
            addGroups.hashCode),
        redirectUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GStaffCreateInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note)
          ..add('addGroups', addGroups)
          ..add('redirectUrl', redirectUrl))
        .toString();
  }
}

class GStaffCreateInputBuilder
    implements Builder<GStaffCreateInput, GStaffCreateInputBuilder> {
  _$GStaffCreateInput _$v;

  String _firstName;
  String get firstName => _$this._firstName;
  set firstName(String firstName) => _$this._firstName = firstName;

  String _lastName;
  String get lastName => _$this._lastName;
  set lastName(String lastName) => _$this._lastName = lastName;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  String _note;
  String get note => _$this._note;
  set note(String note) => _$this._note = note;

  ListBuilder<String> _addGroups;
  ListBuilder<String> get addGroups =>
      _$this._addGroups ??= new ListBuilder<String>();
  set addGroups(ListBuilder<String> addGroups) => _$this._addGroups = addGroups;

  String _redirectUrl;
  String get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String redirectUrl) => _$this._redirectUrl = redirectUrl;

  GStaffCreateInputBuilder();

  GStaffCreateInputBuilder get _$this {
    if (_$v != null) {
      _firstName = _$v.firstName;
      _lastName = _$v.lastName;
      _email = _$v.email;
      _isActive = _$v.isActive;
      _note = _$v.note;
      _addGroups = _$v.addGroups?.toBuilder();
      _redirectUrl = _$v.redirectUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GStaffCreateInput;
  }

  @override
  void update(void Function(GStaffCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GStaffCreateInput build() {
    _$GStaffCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GStaffCreateInput._(
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note,
              addGroups: addGroups.build(),
              redirectUrl: redirectUrl);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'addGroups';
        addGroups.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GStaffCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GStaffNotificationRecipientInput
    extends GStaffNotificationRecipientInput {
  @override
  final String user;
  @override
  final String email;
  @override
  final bool active;

  factory _$GStaffNotificationRecipientInput(
          [void Function(GStaffNotificationRecipientInputBuilder) updates]) =>
      (new GStaffNotificationRecipientInputBuilder()..update(updates)).build();

  _$GStaffNotificationRecipientInput._({this.user, this.email, this.active})
      : super._();

  @override
  GStaffNotificationRecipientInput rebuild(
          void Function(GStaffNotificationRecipientInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffNotificationRecipientInputBuilder toBuilder() =>
      new GStaffNotificationRecipientInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffNotificationRecipientInput &&
        user == other.user &&
        email == other.email &&
        active == other.active;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, user.hashCode), email.hashCode), active.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GStaffNotificationRecipientInput')
          ..add('user', user)
          ..add('email', email)
          ..add('active', active))
        .toString();
  }
}

class GStaffNotificationRecipientInputBuilder
    implements
        Builder<GStaffNotificationRecipientInput,
            GStaffNotificationRecipientInputBuilder> {
  _$GStaffNotificationRecipientInput _$v;

  String _user;
  String get user => _$this._user;
  set user(String user) => _$this._user = user;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  bool _active;
  bool get active => _$this._active;
  set active(bool active) => _$this._active = active;

  GStaffNotificationRecipientInputBuilder();

  GStaffNotificationRecipientInputBuilder get _$this {
    if (_$v != null) {
      _user = _$v.user;
      _email = _$v.email;
      _active = _$v.active;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffNotificationRecipientInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GStaffNotificationRecipientInput;
  }

  @override
  void update(void Function(GStaffNotificationRecipientInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GStaffNotificationRecipientInput build() {
    final _$result = _$v ??
        new _$GStaffNotificationRecipientInput._(
            user: user, email: email, active: active);
    replace(_$result);
    return _$result;
  }
}

class _$GStaffUpdateInput extends GStaffUpdateInput {
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final String email;
  @override
  final bool isActive;
  @override
  final String note;
  @override
  final BuiltList<String> addGroups;
  @override
  final BuiltList<String> removeGroups;

  factory _$GStaffUpdateInput(
          [void Function(GStaffUpdateInputBuilder) updates]) =>
      (new GStaffUpdateInputBuilder()..update(updates)).build();

  _$GStaffUpdateInput._(
      {this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note,
      this.addGroups,
      this.removeGroups})
      : super._() {
    if (addGroups == null) {
      throw new BuiltValueNullFieldError('GStaffUpdateInput', 'addGroups');
    }
    if (removeGroups == null) {
      throw new BuiltValueNullFieldError('GStaffUpdateInput', 'removeGroups');
    }
  }

  @override
  GStaffUpdateInput rebuild(void Function(GStaffUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffUpdateInputBuilder toBuilder() =>
      new GStaffUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffUpdateInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note &&
        addGroups == other.addGroups &&
        removeGroups == other.removeGroups;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
                        email.hashCode),
                    isActive.hashCode),
                note.hashCode),
            addGroups.hashCode),
        removeGroups.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GStaffUpdateInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note)
          ..add('addGroups', addGroups)
          ..add('removeGroups', removeGroups))
        .toString();
  }
}

class GStaffUpdateInputBuilder
    implements Builder<GStaffUpdateInput, GStaffUpdateInputBuilder> {
  _$GStaffUpdateInput _$v;

  String _firstName;
  String get firstName => _$this._firstName;
  set firstName(String firstName) => _$this._firstName = firstName;

  String _lastName;
  String get lastName => _$this._lastName;
  set lastName(String lastName) => _$this._lastName = lastName;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  String _note;
  String get note => _$this._note;
  set note(String note) => _$this._note = note;

  ListBuilder<String> _addGroups;
  ListBuilder<String> get addGroups =>
      _$this._addGroups ??= new ListBuilder<String>();
  set addGroups(ListBuilder<String> addGroups) => _$this._addGroups = addGroups;

  ListBuilder<String> _removeGroups;
  ListBuilder<String> get removeGroups =>
      _$this._removeGroups ??= new ListBuilder<String>();
  set removeGroups(ListBuilder<String> removeGroups) =>
      _$this._removeGroups = removeGroups;

  GStaffUpdateInputBuilder();

  GStaffUpdateInputBuilder get _$this {
    if (_$v != null) {
      _firstName = _$v.firstName;
      _lastName = _$v.lastName;
      _email = _$v.email;
      _isActive = _$v.isActive;
      _note = _$v.note;
      _addGroups = _$v.addGroups?.toBuilder();
      _removeGroups = _$v.removeGroups?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GStaffUpdateInput;
  }

  @override
  void update(void Function(GStaffUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GStaffUpdateInput build() {
    _$GStaffUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GStaffUpdateInput._(
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note,
              addGroups: addGroups.build(),
              removeGroups: removeGroups.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'addGroups';
        addGroups.build();
        _$failedField = 'removeGroups';
        removeGroups.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GStaffUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GStaffUserInput extends GStaffUserInput {
  @override
  final GStaffMemberStatus status;
  @override
  final String search;

  factory _$GStaffUserInput([void Function(GStaffUserInputBuilder) updates]) =>
      (new GStaffUserInputBuilder()..update(updates)).build();

  _$GStaffUserInput._({this.status, this.search}) : super._();

  @override
  GStaffUserInput rebuild(void Function(GStaffUserInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffUserInputBuilder toBuilder() =>
      new GStaffUserInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffUserInput &&
        status == other.status &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, status.hashCode), search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GStaffUserInput')
          ..add('status', status)
          ..add('search', search))
        .toString();
  }
}

class GStaffUserInputBuilder
    implements Builder<GStaffUserInput, GStaffUserInputBuilder> {
  _$GStaffUserInput _$v;

  GStaffMemberStatus _status;
  GStaffMemberStatus get status => _$this._status;
  set status(GStaffMemberStatus status) => _$this._status = status;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GStaffUserInputBuilder();

  GStaffUserInputBuilder get _$this {
    if (_$v != null) {
      _status = _$v.status;
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffUserInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GStaffUserInput;
  }

  @override
  void update(void Function(GStaffUserInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GStaffUserInput build() {
    final _$result =
        _$v ?? new _$GStaffUserInput._(status: status, search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GStockFilterInput extends GStockFilterInput {
  @override
  final double quantity;
  @override
  final String search;

  factory _$GStockFilterInput(
          [void Function(GStockFilterInputBuilder) updates]) =>
      (new GStockFilterInputBuilder()..update(updates)).build();

  _$GStockFilterInput._({this.quantity, this.search}) : super._();

  @override
  GStockFilterInput rebuild(void Function(GStockFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStockFilterInputBuilder toBuilder() =>
      new GStockFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStockFilterInput &&
        quantity == other.quantity &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, quantity.hashCode), search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GStockFilterInput')
          ..add('quantity', quantity)
          ..add('search', search))
        .toString();
  }
}

class GStockFilterInputBuilder
    implements Builder<GStockFilterInput, GStockFilterInputBuilder> {
  _$GStockFilterInput _$v;

  double _quantity;
  double get quantity => _$this._quantity;
  set quantity(double quantity) => _$this._quantity = quantity;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GStockFilterInputBuilder();

  GStockFilterInputBuilder get _$this {
    if (_$v != null) {
      _quantity = _$v.quantity;
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStockFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GStockFilterInput;
  }

  @override
  void update(void Function(GStockFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GStockFilterInput build() {
    final _$result =
        _$v ?? new _$GStockFilterInput._(quantity: quantity, search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GStockInput extends GStockInput {
  @override
  final String warehouse;
  @override
  final int quantity;

  factory _$GStockInput([void Function(GStockInputBuilder) updates]) =>
      (new GStockInputBuilder()..update(updates)).build();

  _$GStockInput._({this.warehouse, this.quantity}) : super._() {
    if (warehouse == null) {
      throw new BuiltValueNullFieldError('GStockInput', 'warehouse');
    }
  }

  @override
  GStockInput rebuild(void Function(GStockInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStockInputBuilder toBuilder() => new GStockInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStockInput &&
        warehouse == other.warehouse &&
        quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, warehouse.hashCode), quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GStockInput')
          ..add('warehouse', warehouse)
          ..add('quantity', quantity))
        .toString();
  }
}

class GStockInputBuilder implements Builder<GStockInput, GStockInputBuilder> {
  _$GStockInput _$v;

  String _warehouse;
  String get warehouse => _$this._warehouse;
  set warehouse(String warehouse) => _$this._warehouse = warehouse;

  int _quantity;
  int get quantity => _$this._quantity;
  set quantity(int quantity) => _$this._quantity = quantity;

  GStockInputBuilder();

  GStockInputBuilder get _$this {
    if (_$v != null) {
      _warehouse = _$v.warehouse;
      _quantity = _$v.quantity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStockInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GStockInput;
  }

  @override
  void update(void Function(GStockInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GStockInput build() {
    final _$result =
        _$v ?? new _$GStockInput._(warehouse: warehouse, quantity: quantity);
    replace(_$result);
    return _$result;
  }
}

class _$GTranslationInput extends GTranslationInput {
  @override
  final String seoTitle;
  @override
  final String seoDescription;
  @override
  final String name;
  @override
  final String description;
  @override
  final GJSONString descriptionJson;

  factory _$GTranslationInput(
          [void Function(GTranslationInputBuilder) updates]) =>
      (new GTranslationInputBuilder()..update(updates)).build();

  _$GTranslationInput._(
      {this.seoTitle,
      this.seoDescription,
      this.name,
      this.description,
      this.descriptionJson})
      : super._();

  @override
  GTranslationInput rebuild(void Function(GTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTranslationInputBuilder toBuilder() =>
      new GTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTranslationInput &&
        seoTitle == other.seoTitle &&
        seoDescription == other.seoDescription &&
        name == other.name &&
        description == other.description &&
        descriptionJson == other.descriptionJson;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, seoTitle.hashCode), seoDescription.hashCode),
                name.hashCode),
            description.hashCode),
        descriptionJson.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GTranslationInput')
          ..add('seoTitle', seoTitle)
          ..add('seoDescription', seoDescription)
          ..add('name', name)
          ..add('description', description)
          ..add('descriptionJson', descriptionJson))
        .toString();
  }
}

class GTranslationInputBuilder
    implements Builder<GTranslationInput, GTranslationInputBuilder> {
  _$GTranslationInput _$v;

  String _seoTitle;
  String get seoTitle => _$this._seoTitle;
  set seoTitle(String seoTitle) => _$this._seoTitle = seoTitle;

  String _seoDescription;
  String get seoDescription => _$this._seoDescription;
  set seoDescription(String seoDescription) =>
      _$this._seoDescription = seoDescription;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  GJSONStringBuilder _descriptionJson;
  GJSONStringBuilder get descriptionJson =>
      _$this._descriptionJson ??= new GJSONStringBuilder();
  set descriptionJson(GJSONStringBuilder descriptionJson) =>
      _$this._descriptionJson = descriptionJson;

  GTranslationInputBuilder();

  GTranslationInputBuilder get _$this {
    if (_$v != null) {
      _seoTitle = _$v.seoTitle;
      _seoDescription = _$v.seoDescription;
      _name = _$v.name;
      _description = _$v.description;
      _descriptionJson = _$v.descriptionJson?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTranslationInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GTranslationInput;
  }

  @override
  void update(void Function(GTranslationInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GTranslationInput build() {
    _$GTranslationInput _$result;
    try {
      _$result = _$v ??
          new _$GTranslationInput._(
              seoTitle: seoTitle,
              seoDescription: seoDescription,
              name: name,
              description: description,
              descriptionJson: _descriptionJson?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'descriptionJson';
        _descriptionJson?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GTranslationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUUID extends GUUID {
  @override
  final String value;

  factory _$GUUID([void Function(GUUIDBuilder) updates]) =>
      (new GUUIDBuilder()..update(updates)).build();

  _$GUUID._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GUUID', 'value');
    }
  }

  @override
  GUUID rebuild(void Function(GUUIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUUIDBuilder toBuilder() => new GUUIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUUID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GUUID')..add('value', value))
        .toString();
  }
}

class GUUIDBuilder implements Builder<GUUID, GUUIDBuilder> {
  _$GUUID _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GUUIDBuilder();

  GUUIDBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUUID other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GUUID;
  }

  @override
  void update(void Function(GUUIDBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GUUID build() {
    final _$result = _$v ?? new _$GUUID._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GUpload extends GUpload {
  @override
  final String value;

  factory _$GUpload([void Function(GUploadBuilder) updates]) =>
      (new GUploadBuilder()..update(updates)).build();

  _$GUpload._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GUpload', 'value');
    }
  }

  @override
  GUpload rebuild(void Function(GUploadBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUploadBuilder toBuilder() => new GUploadBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpload && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GUpload')..add('value', value))
        .toString();
  }
}

class GUploadBuilder implements Builder<GUpload, GUploadBuilder> {
  _$GUpload _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GUploadBuilder();

  GUploadBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpload other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GUpload;
  }

  @override
  void update(void Function(GUploadBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GUpload build() {
    final _$result = _$v ?? new _$GUpload._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GUserCreateInput extends GUserCreateInput {
  @override
  final GAddressInput defaultBillingAddress;
  @override
  final GAddressInput defaultShippingAddress;
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final String email;
  @override
  final bool isActive;
  @override
  final String note;
  @override
  final String redirectUrl;

  factory _$GUserCreateInput(
          [void Function(GUserCreateInputBuilder) updates]) =>
      (new GUserCreateInputBuilder()..update(updates)).build();

  _$GUserCreateInput._(
      {this.defaultBillingAddress,
      this.defaultShippingAddress,
      this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note,
      this.redirectUrl})
      : super._();

  @override
  GUserCreateInput rebuild(void Function(GUserCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserCreateInputBuilder toBuilder() =>
      new GUserCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserCreateInput &&
        defaultBillingAddress == other.defaultBillingAddress &&
        defaultShippingAddress == other.defaultShippingAddress &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note &&
        redirectUrl == other.redirectUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, defaultBillingAddress.hashCode),
                                defaultShippingAddress.hashCode),
                            firstName.hashCode),
                        lastName.hashCode),
                    email.hashCode),
                isActive.hashCode),
            note.hashCode),
        redirectUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GUserCreateInput')
          ..add('defaultBillingAddress', defaultBillingAddress)
          ..add('defaultShippingAddress', defaultShippingAddress)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note)
          ..add('redirectUrl', redirectUrl))
        .toString();
  }
}

class GUserCreateInputBuilder
    implements Builder<GUserCreateInput, GUserCreateInputBuilder> {
  _$GUserCreateInput _$v;

  GAddressInputBuilder _defaultBillingAddress;
  GAddressInputBuilder get defaultBillingAddress =>
      _$this._defaultBillingAddress ??= new GAddressInputBuilder();
  set defaultBillingAddress(GAddressInputBuilder defaultBillingAddress) =>
      _$this._defaultBillingAddress = defaultBillingAddress;

  GAddressInputBuilder _defaultShippingAddress;
  GAddressInputBuilder get defaultShippingAddress =>
      _$this._defaultShippingAddress ??= new GAddressInputBuilder();
  set defaultShippingAddress(GAddressInputBuilder defaultShippingAddress) =>
      _$this._defaultShippingAddress = defaultShippingAddress;

  String _firstName;
  String get firstName => _$this._firstName;
  set firstName(String firstName) => _$this._firstName = firstName;

  String _lastName;
  String get lastName => _$this._lastName;
  set lastName(String lastName) => _$this._lastName = lastName;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  String _note;
  String get note => _$this._note;
  set note(String note) => _$this._note = note;

  String _redirectUrl;
  String get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String redirectUrl) => _$this._redirectUrl = redirectUrl;

  GUserCreateInputBuilder();

  GUserCreateInputBuilder get _$this {
    if (_$v != null) {
      _defaultBillingAddress = _$v.defaultBillingAddress?.toBuilder();
      _defaultShippingAddress = _$v.defaultShippingAddress?.toBuilder();
      _firstName = _$v.firstName;
      _lastName = _$v.lastName;
      _email = _$v.email;
      _isActive = _$v.isActive;
      _note = _$v.note;
      _redirectUrl = _$v.redirectUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GUserCreateInput;
  }

  @override
  void update(void Function(GUserCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GUserCreateInput build() {
    _$GUserCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GUserCreateInput._(
              defaultBillingAddress: _defaultBillingAddress?.build(),
              defaultShippingAddress: _defaultShippingAddress?.build(),
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note,
              redirectUrl: redirectUrl);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'defaultBillingAddress';
        _defaultBillingAddress?.build();
        _$failedField = 'defaultShippingAddress';
        _defaultShippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GUserCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserSortingInput extends GUserSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GUserSortField field;

  factory _$GUserSortingInput(
          [void Function(GUserSortingInputBuilder) updates]) =>
      (new GUserSortingInputBuilder()..update(updates)).build();

  _$GUserSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GUserSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GUserSortingInput', 'field');
    }
  }

  @override
  GUserSortingInput rebuild(void Function(GUserSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserSortingInputBuilder toBuilder() =>
      new GUserSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GUserSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GUserSortingInputBuilder
    implements Builder<GUserSortingInput, GUserSortingInputBuilder> {
  _$GUserSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GUserSortField _field;
  GUserSortField get field => _$this._field;
  set field(GUserSortField field) => _$this._field = field;

  GUserSortingInputBuilder();

  GUserSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GUserSortingInput;
  }

  @override
  void update(void Function(GUserSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GUserSortingInput build() {
    final _$result =
        _$v ?? new _$GUserSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherFilterInput extends GVoucherFilterInput {
  @override
  final BuiltList<GDiscountStatusEnum> status;
  @override
  final GIntRangeInput timesUsed;
  @override
  final BuiltList<GVoucherDiscountType> discountType;
  @override
  final GDateTimeRangeInput started;
  @override
  final String search;

  factory _$GVoucherFilterInput(
          [void Function(GVoucherFilterInputBuilder) updates]) =>
      (new GVoucherFilterInputBuilder()..update(updates)).build();

  _$GVoucherFilterInput._(
      {this.status,
      this.timesUsed,
      this.discountType,
      this.started,
      this.search})
      : super._();

  @override
  GVoucherFilterInput rebuild(
          void Function(GVoucherFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherFilterInputBuilder toBuilder() =>
      new GVoucherFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherFilterInput &&
        status == other.status &&
        timesUsed == other.timesUsed &&
        discountType == other.discountType &&
        started == other.started &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, status.hashCode), timesUsed.hashCode),
                discountType.hashCode),
            started.hashCode),
        search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GVoucherFilterInput')
          ..add('status', status)
          ..add('timesUsed', timesUsed)
          ..add('discountType', discountType)
          ..add('started', started)
          ..add('search', search))
        .toString();
  }
}

class GVoucherFilterInputBuilder
    implements Builder<GVoucherFilterInput, GVoucherFilterInputBuilder> {
  _$GVoucherFilterInput _$v;

  ListBuilder<GDiscountStatusEnum> _status;
  ListBuilder<GDiscountStatusEnum> get status =>
      _$this._status ??= new ListBuilder<GDiscountStatusEnum>();
  set status(ListBuilder<GDiscountStatusEnum> status) =>
      _$this._status = status;

  GIntRangeInputBuilder _timesUsed;
  GIntRangeInputBuilder get timesUsed =>
      _$this._timesUsed ??= new GIntRangeInputBuilder();
  set timesUsed(GIntRangeInputBuilder timesUsed) =>
      _$this._timesUsed = timesUsed;

  ListBuilder<GVoucherDiscountType> _discountType;
  ListBuilder<GVoucherDiscountType> get discountType =>
      _$this._discountType ??= new ListBuilder<GVoucherDiscountType>();
  set discountType(ListBuilder<GVoucherDiscountType> discountType) =>
      _$this._discountType = discountType;

  GDateTimeRangeInputBuilder _started;
  GDateTimeRangeInputBuilder get started =>
      _$this._started ??= new GDateTimeRangeInputBuilder();
  set started(GDateTimeRangeInputBuilder started) => _$this._started = started;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  GVoucherFilterInputBuilder();

  GVoucherFilterInputBuilder get _$this {
    if (_$v != null) {
      _status = _$v.status?.toBuilder();
      _timesUsed = _$v.timesUsed?.toBuilder();
      _discountType = _$v.discountType?.toBuilder();
      _started = _$v.started?.toBuilder();
      _search = _$v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GVoucherFilterInput;
  }

  @override
  void update(void Function(GVoucherFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GVoucherFilterInput build() {
    _$GVoucherFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GVoucherFilterInput._(
              status: _status?.build(),
              timesUsed: _timesUsed?.build(),
              discountType: _discountType?.build(),
              started: _started?.build(),
              search: search);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'status';
        _status?.build();
        _$failedField = 'timesUsed';
        _timesUsed?.build();
        _$failedField = 'discountType';
        _discountType?.build();
        _$failedField = 'started';
        _started?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GVoucherFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherInput extends GVoucherInput {
  @override
  final GVoucherTypeEnum type;
  @override
  final String name;
  @override
  final String code;
  @override
  final GDateTime startDate;
  @override
  final GDateTime endDate;
  @override
  final GDiscountValueTypeEnum discountValueType;
  @override
  final GDecimal discountValue;
  @override
  final BuiltList<String> products;
  @override
  final BuiltList<String> collections;
  @override
  final BuiltList<String> categories;
  @override
  final GDecimal minAmountSpent;
  @override
  final int minCheckoutItemsQuantity;
  @override
  final BuiltList<String> countries;
  @override
  final bool applyOncePerOrder;
  @override
  final bool applyOncePerCustomer;
  @override
  final int usageLimit;

  factory _$GVoucherInput([void Function(GVoucherInputBuilder) updates]) =>
      (new GVoucherInputBuilder()..update(updates)).build();

  _$GVoucherInput._(
      {this.type,
      this.name,
      this.code,
      this.startDate,
      this.endDate,
      this.discountValueType,
      this.discountValue,
      this.products,
      this.collections,
      this.categories,
      this.minAmountSpent,
      this.minCheckoutItemsQuantity,
      this.countries,
      this.applyOncePerOrder,
      this.applyOncePerCustomer,
      this.usageLimit})
      : super._();

  @override
  GVoucherInput rebuild(void Function(GVoucherInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherInputBuilder toBuilder() => new GVoucherInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherInput &&
        type == other.type &&
        name == other.name &&
        code == other.code &&
        startDate == other.startDate &&
        endDate == other.endDate &&
        discountValueType == other.discountValueType &&
        discountValue == other.discountValue &&
        products == other.products &&
        collections == other.collections &&
        categories == other.categories &&
        minAmountSpent == other.minAmountSpent &&
        minCheckoutItemsQuantity == other.minCheckoutItemsQuantity &&
        countries == other.countries &&
        applyOncePerOrder == other.applyOncePerOrder &&
        applyOncePerCustomer == other.applyOncePerCustomer &&
        usageLimit == other.usageLimit;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(0,
                                                                    type.hashCode),
                                                                name.hashCode),
                                                            code.hashCode),
                                                        startDate.hashCode),
                                                    endDate.hashCode),
                                                discountValueType.hashCode),
                                            discountValue.hashCode),
                                        products.hashCode),
                                    collections.hashCode),
                                categories.hashCode),
                            minAmountSpent.hashCode),
                        minCheckoutItemsQuantity.hashCode),
                    countries.hashCode),
                applyOncePerOrder.hashCode),
            applyOncePerCustomer.hashCode),
        usageLimit.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GVoucherInput')
          ..add('type', type)
          ..add('name', name)
          ..add('code', code)
          ..add('startDate', startDate)
          ..add('endDate', endDate)
          ..add('discountValueType', discountValueType)
          ..add('discountValue', discountValue)
          ..add('products', products)
          ..add('collections', collections)
          ..add('categories', categories)
          ..add('minAmountSpent', minAmountSpent)
          ..add('minCheckoutItemsQuantity', minCheckoutItemsQuantity)
          ..add('countries', countries)
          ..add('applyOncePerOrder', applyOncePerOrder)
          ..add('applyOncePerCustomer', applyOncePerCustomer)
          ..add('usageLimit', usageLimit))
        .toString();
  }
}

class GVoucherInputBuilder
    implements Builder<GVoucherInput, GVoucherInputBuilder> {
  _$GVoucherInput _$v;

  GVoucherTypeEnum _type;
  GVoucherTypeEnum get type => _$this._type;
  set type(GVoucherTypeEnum type) => _$this._type = type;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _code;
  String get code => _$this._code;
  set code(String code) => _$this._code = code;

  GDateTimeBuilder _startDate;
  GDateTimeBuilder get startDate =>
      _$this._startDate ??= new GDateTimeBuilder();
  set startDate(GDateTimeBuilder startDate) => _$this._startDate = startDate;

  GDateTimeBuilder _endDate;
  GDateTimeBuilder get endDate => _$this._endDate ??= new GDateTimeBuilder();
  set endDate(GDateTimeBuilder endDate) => _$this._endDate = endDate;

  GDiscountValueTypeEnum _discountValueType;
  GDiscountValueTypeEnum get discountValueType => _$this._discountValueType;
  set discountValueType(GDiscountValueTypeEnum discountValueType) =>
      _$this._discountValueType = discountValueType;

  GDecimalBuilder _discountValue;
  GDecimalBuilder get discountValue =>
      _$this._discountValue ??= new GDecimalBuilder();
  set discountValue(GDecimalBuilder discountValue) =>
      _$this._discountValue = discountValue;

  ListBuilder<String> _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String> products) => _$this._products = products;

  ListBuilder<String> _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String> collections) =>
      _$this._collections = collections;

  ListBuilder<String> _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String> categories) =>
      _$this._categories = categories;

  GDecimalBuilder _minAmountSpent;
  GDecimalBuilder get minAmountSpent =>
      _$this._minAmountSpent ??= new GDecimalBuilder();
  set minAmountSpent(GDecimalBuilder minAmountSpent) =>
      _$this._minAmountSpent = minAmountSpent;

  int _minCheckoutItemsQuantity;
  int get minCheckoutItemsQuantity => _$this._minCheckoutItemsQuantity;
  set minCheckoutItemsQuantity(int minCheckoutItemsQuantity) =>
      _$this._minCheckoutItemsQuantity = minCheckoutItemsQuantity;

  ListBuilder<String> _countries;
  ListBuilder<String> get countries =>
      _$this._countries ??= new ListBuilder<String>();
  set countries(ListBuilder<String> countries) => _$this._countries = countries;

  bool _applyOncePerOrder;
  bool get applyOncePerOrder => _$this._applyOncePerOrder;
  set applyOncePerOrder(bool applyOncePerOrder) =>
      _$this._applyOncePerOrder = applyOncePerOrder;

  bool _applyOncePerCustomer;
  bool get applyOncePerCustomer => _$this._applyOncePerCustomer;
  set applyOncePerCustomer(bool applyOncePerCustomer) =>
      _$this._applyOncePerCustomer = applyOncePerCustomer;

  int _usageLimit;
  int get usageLimit => _$this._usageLimit;
  set usageLimit(int usageLimit) => _$this._usageLimit = usageLimit;

  GVoucherInputBuilder();

  GVoucherInputBuilder get _$this {
    if (_$v != null) {
      _type = _$v.type;
      _name = _$v.name;
      _code = _$v.code;
      _startDate = _$v.startDate?.toBuilder();
      _endDate = _$v.endDate?.toBuilder();
      _discountValueType = _$v.discountValueType;
      _discountValue = _$v.discountValue?.toBuilder();
      _products = _$v.products?.toBuilder();
      _collections = _$v.collections?.toBuilder();
      _categories = _$v.categories?.toBuilder();
      _minAmountSpent = _$v.minAmountSpent?.toBuilder();
      _minCheckoutItemsQuantity = _$v.minCheckoutItemsQuantity;
      _countries = _$v.countries?.toBuilder();
      _applyOncePerOrder = _$v.applyOncePerOrder;
      _applyOncePerCustomer = _$v.applyOncePerCustomer;
      _usageLimit = _$v.usageLimit;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GVoucherInput;
  }

  @override
  void update(void Function(GVoucherInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GVoucherInput build() {
    _$GVoucherInput _$result;
    try {
      _$result = _$v ??
          new _$GVoucherInput._(
              type: type,
              name: name,
              code: code,
              startDate: _startDate?.build(),
              endDate: _endDate?.build(),
              discountValueType: discountValueType,
              discountValue: _discountValue?.build(),
              products: _products?.build(),
              collections: _collections?.build(),
              categories: _categories?.build(),
              minAmountSpent: _minAmountSpent?.build(),
              minCheckoutItemsQuantity: minCheckoutItemsQuantity,
              countries: _countries?.build(),
              applyOncePerOrder: applyOncePerOrder,
              applyOncePerCustomer: applyOncePerCustomer,
              usageLimit: usageLimit);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();

        _$failedField = 'discountValue';
        _discountValue?.build();
        _$failedField = 'products';
        _products?.build();
        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'categories';
        _categories?.build();
        _$failedField = 'minAmountSpent';
        _minAmountSpent?.build();

        _$failedField = 'countries';
        _countries?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GVoucherInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherSortingInput extends GVoucherSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GVoucherSortField field;

  factory _$GVoucherSortingInput(
          [void Function(GVoucherSortingInputBuilder) updates]) =>
      (new GVoucherSortingInputBuilder()..update(updates)).build();

  _$GVoucherSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GVoucherSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GVoucherSortingInput', 'field');
    }
  }

  @override
  GVoucherSortingInput rebuild(
          void Function(GVoucherSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherSortingInputBuilder toBuilder() =>
      new GVoucherSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GVoucherSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GVoucherSortingInputBuilder
    implements Builder<GVoucherSortingInput, GVoucherSortingInputBuilder> {
  _$GVoucherSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GVoucherSortField _field;
  GVoucherSortField get field => _$this._field;
  set field(GVoucherSortField field) => _$this._field = field;

  GVoucherSortingInputBuilder();

  GVoucherSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GVoucherSortingInput;
  }

  @override
  void update(void Function(GVoucherSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GVoucherSortingInput build() {
    final _$result =
        _$v ?? new _$GVoucherSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseAddressInput extends GWarehouseAddressInput {
  @override
  final String streetAddress1;
  @override
  final String streetAddress2;
  @override
  final String city;
  @override
  final String cityArea;
  @override
  final String postalCode;
  @override
  final GCountryCode country;
  @override
  final String countryArea;
  @override
  final String phone;

  factory _$GWarehouseAddressInput(
          [void Function(GWarehouseAddressInputBuilder) updates]) =>
      (new GWarehouseAddressInputBuilder()..update(updates)).build();

  _$GWarehouseAddressInput._(
      {this.streetAddress1,
      this.streetAddress2,
      this.city,
      this.cityArea,
      this.postalCode,
      this.country,
      this.countryArea,
      this.phone})
      : super._() {
    if (streetAddress1 == null) {
      throw new BuiltValueNullFieldError(
          'GWarehouseAddressInput', 'streetAddress1');
    }
    if (city == null) {
      throw new BuiltValueNullFieldError('GWarehouseAddressInput', 'city');
    }
    if (country == null) {
      throw new BuiltValueNullFieldError('GWarehouseAddressInput', 'country');
    }
  }

  @override
  GWarehouseAddressInput rebuild(
          void Function(GWarehouseAddressInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseAddressInputBuilder toBuilder() =>
      new GWarehouseAddressInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseAddressInput &&
        streetAddress1 == other.streetAddress1 &&
        streetAddress2 == other.streetAddress2 &&
        city == other.city &&
        cityArea == other.cityArea &&
        postalCode == other.postalCode &&
        country == other.country &&
        countryArea == other.countryArea &&
        phone == other.phone;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, streetAddress1.hashCode),
                                streetAddress2.hashCode),
                            city.hashCode),
                        cityArea.hashCode),
                    postalCode.hashCode),
                country.hashCode),
            countryArea.hashCode),
        phone.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWarehouseAddressInput')
          ..add('streetAddress1', streetAddress1)
          ..add('streetAddress2', streetAddress2)
          ..add('city', city)
          ..add('cityArea', cityArea)
          ..add('postalCode', postalCode)
          ..add('country', country)
          ..add('countryArea', countryArea)
          ..add('phone', phone))
        .toString();
  }
}

class GWarehouseAddressInputBuilder
    implements Builder<GWarehouseAddressInput, GWarehouseAddressInputBuilder> {
  _$GWarehouseAddressInput _$v;

  String _streetAddress1;
  String get streetAddress1 => _$this._streetAddress1;
  set streetAddress1(String streetAddress1) =>
      _$this._streetAddress1 = streetAddress1;

  String _streetAddress2;
  String get streetAddress2 => _$this._streetAddress2;
  set streetAddress2(String streetAddress2) =>
      _$this._streetAddress2 = streetAddress2;

  String _city;
  String get city => _$this._city;
  set city(String city) => _$this._city = city;

  String _cityArea;
  String get cityArea => _$this._cityArea;
  set cityArea(String cityArea) => _$this._cityArea = cityArea;

  String _postalCode;
  String get postalCode => _$this._postalCode;
  set postalCode(String postalCode) => _$this._postalCode = postalCode;

  GCountryCode _country;
  GCountryCode get country => _$this._country;
  set country(GCountryCode country) => _$this._country = country;

  String _countryArea;
  String get countryArea => _$this._countryArea;
  set countryArea(String countryArea) => _$this._countryArea = countryArea;

  String _phone;
  String get phone => _$this._phone;
  set phone(String phone) => _$this._phone = phone;

  GWarehouseAddressInputBuilder();

  GWarehouseAddressInputBuilder get _$this {
    if (_$v != null) {
      _streetAddress1 = _$v.streetAddress1;
      _streetAddress2 = _$v.streetAddress2;
      _city = _$v.city;
      _cityArea = _$v.cityArea;
      _postalCode = _$v.postalCode;
      _country = _$v.country;
      _countryArea = _$v.countryArea;
      _phone = _$v.phone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseAddressInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWarehouseAddressInput;
  }

  @override
  void update(void Function(GWarehouseAddressInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWarehouseAddressInput build() {
    final _$result = _$v ??
        new _$GWarehouseAddressInput._(
            streetAddress1: streetAddress1,
            streetAddress2: streetAddress2,
            city: city,
            cityArea: cityArea,
            postalCode: postalCode,
            country: country,
            countryArea: countryArea,
            phone: phone);
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseCreateInput extends GWarehouseCreateInput {
  @override
  final String slug;
  @override
  final String companyName;
  @override
  final String email;
  @override
  final String name;
  @override
  final GWarehouseAddressInput address;
  @override
  final BuiltList<String> shippingZones;

  factory _$GWarehouseCreateInput(
          [void Function(GWarehouseCreateInputBuilder) updates]) =>
      (new GWarehouseCreateInputBuilder()..update(updates)).build();

  _$GWarehouseCreateInput._(
      {this.slug,
      this.companyName,
      this.email,
      this.name,
      this.address,
      this.shippingZones})
      : super._() {
    if (name == null) {
      throw new BuiltValueNullFieldError('GWarehouseCreateInput', 'name');
    }
    if (address == null) {
      throw new BuiltValueNullFieldError('GWarehouseCreateInput', 'address');
    }
  }

  @override
  GWarehouseCreateInput rebuild(
          void Function(GWarehouseCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseCreateInputBuilder toBuilder() =>
      new GWarehouseCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseCreateInput &&
        slug == other.slug &&
        companyName == other.companyName &&
        email == other.email &&
        name == other.name &&
        address == other.address &&
        shippingZones == other.shippingZones;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, slug.hashCode), companyName.hashCode),
                    email.hashCode),
                name.hashCode),
            address.hashCode),
        shippingZones.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWarehouseCreateInput')
          ..add('slug', slug)
          ..add('companyName', companyName)
          ..add('email', email)
          ..add('name', name)
          ..add('address', address)
          ..add('shippingZones', shippingZones))
        .toString();
  }
}

class GWarehouseCreateInputBuilder
    implements Builder<GWarehouseCreateInput, GWarehouseCreateInputBuilder> {
  _$GWarehouseCreateInput _$v;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  String _companyName;
  String get companyName => _$this._companyName;
  set companyName(String companyName) => _$this._companyName = companyName;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GWarehouseAddressInputBuilder _address;
  GWarehouseAddressInputBuilder get address =>
      _$this._address ??= new GWarehouseAddressInputBuilder();
  set address(GWarehouseAddressInputBuilder address) =>
      _$this._address = address;

  ListBuilder<String> _shippingZones;
  ListBuilder<String> get shippingZones =>
      _$this._shippingZones ??= new ListBuilder<String>();
  set shippingZones(ListBuilder<String> shippingZones) =>
      _$this._shippingZones = shippingZones;

  GWarehouseCreateInputBuilder();

  GWarehouseCreateInputBuilder get _$this {
    if (_$v != null) {
      _slug = _$v.slug;
      _companyName = _$v.companyName;
      _email = _$v.email;
      _name = _$v.name;
      _address = _$v.address?.toBuilder();
      _shippingZones = _$v.shippingZones?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWarehouseCreateInput;
  }

  @override
  void update(void Function(GWarehouseCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWarehouseCreateInput build() {
    _$GWarehouseCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GWarehouseCreateInput._(
              slug: slug,
              companyName: companyName,
              email: email,
              name: name,
              address: address.build(),
              shippingZones: _shippingZones?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'address';
        address.build();
        _$failedField = 'shippingZones';
        _shippingZones?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GWarehouseCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseFilterInput extends GWarehouseFilterInput {
  @override
  final String search;
  @override
  final BuiltList<String> ids;

  factory _$GWarehouseFilterInput(
          [void Function(GWarehouseFilterInputBuilder) updates]) =>
      (new GWarehouseFilterInputBuilder()..update(updates)).build();

  _$GWarehouseFilterInput._({this.search, this.ids}) : super._();

  @override
  GWarehouseFilterInput rebuild(
          void Function(GWarehouseFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseFilterInputBuilder toBuilder() =>
      new GWarehouseFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseFilterInput &&
        search == other.search &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWarehouseFilterInput')
          ..add('search', search)
          ..add('ids', ids))
        .toString();
  }
}

class GWarehouseFilterInputBuilder
    implements Builder<GWarehouseFilterInput, GWarehouseFilterInputBuilder> {
  _$GWarehouseFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  ListBuilder<String> _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String> ids) => _$this._ids = ids;

  GWarehouseFilterInputBuilder();

  GWarehouseFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _ids = _$v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWarehouseFilterInput;
  }

  @override
  void update(void Function(GWarehouseFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWarehouseFilterInput build() {
    _$GWarehouseFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GWarehouseFilterInput._(search: search, ids: _ids?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GWarehouseFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseSortingInput extends GWarehouseSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GWarehouseSortField field;

  factory _$GWarehouseSortingInput(
          [void Function(GWarehouseSortingInputBuilder) updates]) =>
      (new GWarehouseSortingInputBuilder()..update(updates)).build();

  _$GWarehouseSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GWarehouseSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GWarehouseSortingInput', 'field');
    }
  }

  @override
  GWarehouseSortingInput rebuild(
          void Function(GWarehouseSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseSortingInputBuilder toBuilder() =>
      new GWarehouseSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWarehouseSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GWarehouseSortingInputBuilder
    implements Builder<GWarehouseSortingInput, GWarehouseSortingInputBuilder> {
  _$GWarehouseSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GWarehouseSortField _field;
  GWarehouseSortField get field => _$this._field;
  set field(GWarehouseSortField field) => _$this._field = field;

  GWarehouseSortingInputBuilder();

  GWarehouseSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWarehouseSortingInput;
  }

  @override
  void update(void Function(GWarehouseSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWarehouseSortingInput build() {
    final _$result = _$v ??
        new _$GWarehouseSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseUpdateInput extends GWarehouseUpdateInput {
  @override
  final String slug;
  @override
  final String companyName;
  @override
  final String email;
  @override
  final String name;
  @override
  final GWarehouseAddressInput address;

  factory _$GWarehouseUpdateInput(
          [void Function(GWarehouseUpdateInputBuilder) updates]) =>
      (new GWarehouseUpdateInputBuilder()..update(updates)).build();

  _$GWarehouseUpdateInput._(
      {this.slug, this.companyName, this.email, this.name, this.address})
      : super._();

  @override
  GWarehouseUpdateInput rebuild(
          void Function(GWarehouseUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseUpdateInputBuilder toBuilder() =>
      new GWarehouseUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseUpdateInput &&
        slug == other.slug &&
        companyName == other.companyName &&
        email == other.email &&
        name == other.name &&
        address == other.address;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, slug.hashCode), companyName.hashCode),
                email.hashCode),
            name.hashCode),
        address.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWarehouseUpdateInput')
          ..add('slug', slug)
          ..add('companyName', companyName)
          ..add('email', email)
          ..add('name', name)
          ..add('address', address))
        .toString();
  }
}

class GWarehouseUpdateInputBuilder
    implements Builder<GWarehouseUpdateInput, GWarehouseUpdateInputBuilder> {
  _$GWarehouseUpdateInput _$v;

  String _slug;
  String get slug => _$this._slug;
  set slug(String slug) => _$this._slug = slug;

  String _companyName;
  String get companyName => _$this._companyName;
  set companyName(String companyName) => _$this._companyName = companyName;

  String _email;
  String get email => _$this._email;
  set email(String email) => _$this._email = email;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  GWarehouseAddressInputBuilder _address;
  GWarehouseAddressInputBuilder get address =>
      _$this._address ??= new GWarehouseAddressInputBuilder();
  set address(GWarehouseAddressInputBuilder address) =>
      _$this._address = address;

  GWarehouseUpdateInputBuilder();

  GWarehouseUpdateInputBuilder get _$this {
    if (_$v != null) {
      _slug = _$v.slug;
      _companyName = _$v.companyName;
      _email = _$v.email;
      _name = _$v.name;
      _address = _$v.address?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWarehouseUpdateInput;
  }

  @override
  void update(void Function(GWarehouseUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWarehouseUpdateInput build() {
    _$GWarehouseUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GWarehouseUpdateInput._(
              slug: slug,
              companyName: companyName,
              email: email,
              name: name,
              address: _address?.build());
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'address';
        _address?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GWarehouseUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWebhookCreateInput extends GWebhookCreateInput {
  @override
  final String name;
  @override
  final String targetUrl;
  @override
  final BuiltList<GWebhookEventTypeEnum> events;
  @override
  final String serviceAccount;
  @override
  final String app;
  @override
  final bool isActive;
  @override
  final String secretKey;

  factory _$GWebhookCreateInput(
          [void Function(GWebhookCreateInputBuilder) updates]) =>
      (new GWebhookCreateInputBuilder()..update(updates)).build();

  _$GWebhookCreateInput._(
      {this.name,
      this.targetUrl,
      this.events,
      this.serviceAccount,
      this.app,
      this.isActive,
      this.secretKey})
      : super._();

  @override
  GWebhookCreateInput rebuild(
          void Function(GWebhookCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWebhookCreateInputBuilder toBuilder() =>
      new GWebhookCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWebhookCreateInput &&
        name == other.name &&
        targetUrl == other.targetUrl &&
        events == other.events &&
        serviceAccount == other.serviceAccount &&
        app == other.app &&
        isActive == other.isActive &&
        secretKey == other.secretKey;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, name.hashCode), targetUrl.hashCode),
                        events.hashCode),
                    serviceAccount.hashCode),
                app.hashCode),
            isActive.hashCode),
        secretKey.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWebhookCreateInput')
          ..add('name', name)
          ..add('targetUrl', targetUrl)
          ..add('events', events)
          ..add('serviceAccount', serviceAccount)
          ..add('app', app)
          ..add('isActive', isActive)
          ..add('secretKey', secretKey))
        .toString();
  }
}

class GWebhookCreateInputBuilder
    implements Builder<GWebhookCreateInput, GWebhookCreateInputBuilder> {
  _$GWebhookCreateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _targetUrl;
  String get targetUrl => _$this._targetUrl;
  set targetUrl(String targetUrl) => _$this._targetUrl = targetUrl;

  ListBuilder<GWebhookEventTypeEnum> _events;
  ListBuilder<GWebhookEventTypeEnum> get events =>
      _$this._events ??= new ListBuilder<GWebhookEventTypeEnum>();
  set events(ListBuilder<GWebhookEventTypeEnum> events) =>
      _$this._events = events;

  String _serviceAccount;
  String get serviceAccount => _$this._serviceAccount;
  set serviceAccount(String serviceAccount) =>
      _$this._serviceAccount = serviceAccount;

  String _app;
  String get app => _$this._app;
  set app(String app) => _$this._app = app;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  String _secretKey;
  String get secretKey => _$this._secretKey;
  set secretKey(String secretKey) => _$this._secretKey = secretKey;

  GWebhookCreateInputBuilder();

  GWebhookCreateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _targetUrl = _$v.targetUrl;
      _events = _$v.events?.toBuilder();
      _serviceAccount = _$v.serviceAccount;
      _app = _$v.app;
      _isActive = _$v.isActive;
      _secretKey = _$v.secretKey;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWebhookCreateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWebhookCreateInput;
  }

  @override
  void update(void Function(GWebhookCreateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWebhookCreateInput build() {
    _$GWebhookCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GWebhookCreateInput._(
              name: name,
              targetUrl: targetUrl,
              events: _events?.build(),
              serviceAccount: serviceAccount,
              app: app,
              isActive: isActive,
              secretKey: secretKey);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'events';
        _events?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GWebhookCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWebhookFilterInput extends GWebhookFilterInput {
  @override
  final String search;
  @override
  final bool isActive;

  factory _$GWebhookFilterInput(
          [void Function(GWebhookFilterInputBuilder) updates]) =>
      (new GWebhookFilterInputBuilder()..update(updates)).build();

  _$GWebhookFilterInput._({this.search, this.isActive}) : super._();

  @override
  GWebhookFilterInput rebuild(
          void Function(GWebhookFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWebhookFilterInputBuilder toBuilder() =>
      new GWebhookFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWebhookFilterInput &&
        search == other.search &&
        isActive == other.isActive;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), isActive.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWebhookFilterInput')
          ..add('search', search)
          ..add('isActive', isActive))
        .toString();
  }
}

class GWebhookFilterInputBuilder
    implements Builder<GWebhookFilterInput, GWebhookFilterInputBuilder> {
  _$GWebhookFilterInput _$v;

  String _search;
  String get search => _$this._search;
  set search(String search) => _$this._search = search;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  GWebhookFilterInputBuilder();

  GWebhookFilterInputBuilder get _$this {
    if (_$v != null) {
      _search = _$v.search;
      _isActive = _$v.isActive;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWebhookFilterInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWebhookFilterInput;
  }

  @override
  void update(void Function(GWebhookFilterInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWebhookFilterInput build() {
    final _$result =
        _$v ?? new _$GWebhookFilterInput._(search: search, isActive: isActive);
    replace(_$result);
    return _$result;
  }
}

class _$GWebhookSortingInput extends GWebhookSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GWebhookSortField field;

  factory _$GWebhookSortingInput(
          [void Function(GWebhookSortingInputBuilder) updates]) =>
      (new GWebhookSortingInputBuilder()..update(updates)).build();

  _$GWebhookSortingInput._({this.direction, this.field}) : super._() {
    if (direction == null) {
      throw new BuiltValueNullFieldError('GWebhookSortingInput', 'direction');
    }
    if (field == null) {
      throw new BuiltValueNullFieldError('GWebhookSortingInput', 'field');
    }
  }

  @override
  GWebhookSortingInput rebuild(
          void Function(GWebhookSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWebhookSortingInputBuilder toBuilder() =>
      new GWebhookSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWebhookSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWebhookSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GWebhookSortingInputBuilder
    implements Builder<GWebhookSortingInput, GWebhookSortingInputBuilder> {
  _$GWebhookSortingInput _$v;

  GOrderDirection _direction;
  GOrderDirection get direction => _$this._direction;
  set direction(GOrderDirection direction) => _$this._direction = direction;

  GWebhookSortField _field;
  GWebhookSortField get field => _$this._field;
  set field(GWebhookSortField field) => _$this._field = field;

  GWebhookSortingInputBuilder();

  GWebhookSortingInputBuilder get _$this {
    if (_$v != null) {
      _direction = _$v.direction;
      _field = _$v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWebhookSortingInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWebhookSortingInput;
  }

  @override
  void update(void Function(GWebhookSortingInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWebhookSortingInput build() {
    final _$result =
        _$v ?? new _$GWebhookSortingInput._(direction: direction, field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GWebhookUpdateInput extends GWebhookUpdateInput {
  @override
  final String name;
  @override
  final String targetUrl;
  @override
  final BuiltList<GWebhookEventTypeEnum> events;
  @override
  final String serviceAccount;
  @override
  final String app;
  @override
  final bool isActive;
  @override
  final String secretKey;

  factory _$GWebhookUpdateInput(
          [void Function(GWebhookUpdateInputBuilder) updates]) =>
      (new GWebhookUpdateInputBuilder()..update(updates)).build();

  _$GWebhookUpdateInput._(
      {this.name,
      this.targetUrl,
      this.events,
      this.serviceAccount,
      this.app,
      this.isActive,
      this.secretKey})
      : super._();

  @override
  GWebhookUpdateInput rebuild(
          void Function(GWebhookUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWebhookUpdateInputBuilder toBuilder() =>
      new GWebhookUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWebhookUpdateInput &&
        name == other.name &&
        targetUrl == other.targetUrl &&
        events == other.events &&
        serviceAccount == other.serviceAccount &&
        app == other.app &&
        isActive == other.isActive &&
        secretKey == other.secretKey;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, name.hashCode), targetUrl.hashCode),
                        events.hashCode),
                    serviceAccount.hashCode),
                app.hashCode),
            isActive.hashCode),
        secretKey.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWebhookUpdateInput')
          ..add('name', name)
          ..add('targetUrl', targetUrl)
          ..add('events', events)
          ..add('serviceAccount', serviceAccount)
          ..add('app', app)
          ..add('isActive', isActive)
          ..add('secretKey', secretKey))
        .toString();
  }
}

class GWebhookUpdateInputBuilder
    implements Builder<GWebhookUpdateInput, GWebhookUpdateInputBuilder> {
  _$GWebhookUpdateInput _$v;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _targetUrl;
  String get targetUrl => _$this._targetUrl;
  set targetUrl(String targetUrl) => _$this._targetUrl = targetUrl;

  ListBuilder<GWebhookEventTypeEnum> _events;
  ListBuilder<GWebhookEventTypeEnum> get events =>
      _$this._events ??= new ListBuilder<GWebhookEventTypeEnum>();
  set events(ListBuilder<GWebhookEventTypeEnum> events) =>
      _$this._events = events;

  String _serviceAccount;
  String get serviceAccount => _$this._serviceAccount;
  set serviceAccount(String serviceAccount) =>
      _$this._serviceAccount = serviceAccount;

  String _app;
  String get app => _$this._app;
  set app(String app) => _$this._app = app;

  bool _isActive;
  bool get isActive => _$this._isActive;
  set isActive(bool isActive) => _$this._isActive = isActive;

  String _secretKey;
  String get secretKey => _$this._secretKey;
  set secretKey(String secretKey) => _$this._secretKey = secretKey;

  GWebhookUpdateInputBuilder();

  GWebhookUpdateInputBuilder get _$this {
    if (_$v != null) {
      _name = _$v.name;
      _targetUrl = _$v.targetUrl;
      _events = _$v.events?.toBuilder();
      _serviceAccount = _$v.serviceAccount;
      _app = _$v.app;
      _isActive = _$v.isActive;
      _secretKey = _$v.secretKey;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWebhookUpdateInput other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWebhookUpdateInput;
  }

  @override
  void update(void Function(GWebhookUpdateInputBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWebhookUpdateInput build() {
    _$GWebhookUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GWebhookUpdateInput._(
              name: name,
              targetUrl: targetUrl,
              events: _events?.build(),
              serviceAccount: serviceAccount,
              app: app,
              isActive: isActive,
              secretKey: secretKey);
    } catch (_) {
      String _$failedField;
      try {
        _$failedField = 'events';
        _events?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            'GWebhookUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWeightScalar extends GWeightScalar {
  @override
  final String value;

  factory _$GWeightScalar([void Function(GWeightScalarBuilder) updates]) =>
      (new GWeightScalarBuilder()..update(updates)).build();

  _$GWeightScalar._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('GWeightScalar', 'value');
    }
  }

  @override
  GWeightScalar rebuild(void Function(GWeightScalarBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWeightScalarBuilder toBuilder() => new GWeightScalarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWeightScalar && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GWeightScalar')..add('value', value))
        .toString();
  }
}

class GWeightScalarBuilder
    implements Builder<GWeightScalar, GWeightScalarBuilder> {
  _$GWeightScalar _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  GWeightScalarBuilder();

  GWeightScalarBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWeightScalar other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GWeightScalar;
  }

  @override
  void update(void Function(GWeightScalarBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GWeightScalar build() {
    final _$result = _$v ?? new _$GWeightScalar._(value: value);
    replace(_$result);
    return _$result;
  }
}

class _$G_Any extends G_Any {
  @override
  final String value;

  factory _$G_Any([void Function(G_AnyBuilder) updates]) =>
      (new G_AnyBuilder()..update(updates)).build();

  _$G_Any._({this.value}) : super._() {
    if (value == null) {
      throw new BuiltValueNullFieldError('G_Any', 'value');
    }
  }

  @override
  G_Any rebuild(void Function(G_AnyBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  G_AnyBuilder toBuilder() => new G_AnyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is G_Any && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('G_Any')..add('value', value))
        .toString();
  }
}

class G_AnyBuilder implements Builder<G_Any, G_AnyBuilder> {
  _$G_Any _$v;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  G_AnyBuilder();

  G_AnyBuilder get _$this {
    if (_$v != null) {
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(G_Any other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$G_Any;
  }

  @override
  void update(void Function(G_AnyBuilder) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$G_Any build() {
    final _$result = _$v ?? new _$G_Any._(value: value);
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: always_put_control_body_on_new_line,always_specify_types,annotate_overrides,avoid_annotating_with_dynamic,avoid_as,avoid_catches_without_on_clauses,avoid_returning_this,lines_longer_than_80_chars,omit_local_variable_types,prefer_expression_function_bodies,sort_constructors_first,test_types_in_equals,unnecessary_const,unnecessary_new
